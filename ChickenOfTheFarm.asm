;
; File generated by cc65 v 2.17 - Git b74ab9d
;
	.fopt		compiler,"cc65 v 2.17 - Git b74ab9d"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.export		_aaa_invalidPalette
	.export		_arrowPalette
	.export		_birdPalette
	.export		_frogPalette
	.export		_frog_fallingPalette
	.export		_frog_hopPalette
	.export		_frog_jumpPalette
	.export		_frog_landingPalette
	.export		_frog_suspendedPalette
	.export		_healthPalette
	.export		_keyPalette
	.export		_mini_frogPalette
	.export		_numbersPalette
	.export		_portalPalette
	.export		_tonguePalette
	.export		_EndingScreenPalette
	.export		_Level1Palette
	.export		_Level2Palette
	.export		_Level3Palette
	.export		_Level4Palette
	.export		_LivesPalette
	.export		_TitleScreenPalette
	.export		_pattern
	.export		_pattern2
	.export		_Nametable_EndingScreen_bottom_rle
	.export		_Nametable_Level1_top_rle
	.export		_Nametable_Level1_bottom_rle
	.export		_Nametable_Level2_top_rle
	.export		_Nametable_Level2_bottom_rle
	.export		_Nametable_Level3_top_rle
	.export		_Nametable_Level3_bottom_rle
	.export		_Nametable_Level4_top_rle
	.export		_Nametable_Level4_bottom_rle
	.export		_Nametable_Lives_bottom_rle
	.export		_Nametable_TitleScreen_bottom_rle
	.export		_spawn_1_by_1_sprite
	.export		_spawn_2_by_1_sprite
	.export		_spawn_portal_sprite
	.export		_despawn_1_sprite
	.export		_despawn_2_sprite
	.export		_despawn_portal_sprite
	.export		_invalid_ai_handler
	.export		_arrow_ai_handler
	.export		_bird_ai_handler
	.export		_item_ai_handler
	.export		_invalid_collision_handler
	.export		_enemy_collision_handler
	.export		_mini_frog_collision_handler
	.export		_portal_collision_handler
	.export		_key_collision_handler
	.export		_PlaySoundEffects
	.export		_spriteProperties
	.export		_tongueSound400C
	.export		_tongueSound400E
	.export		_damageSound400C
	.export		_damageSound400E
	.export		_sprites
	.export		_collision
	.import		_gVblank
	.import		_pMusicInit
	.import		_pMusicPlay
	.import		_UnRLE
	.export		_vblank
	.export		_vblank_counter
	.export		_ppuinit
	.export		_ppudisable
	.export		_apuinit
	.export		_set_scroll
	.export		_loadCollisionFromNametables
	.export		_ClearSprites
	.export		_LoadSprites
	.export		_palettes
	.export		_load_palette
	.export		_fade_out
	.export		_fade_in
	.export		_draw_health
	.export		_dma_sprites
	.export		_input_poll
	.export		_small_jump
	.export		_big_jump
	.export		_update_frog_sprite
	.export		_update_tongue_sprite
	.export		_update_sprites
	.export		_load_stage
	.export		_next_stage
	.export		_death
	.export		_is_collision
	.export		_is_background_collision
	.export		_put_i_in_collision2_vars
	.export		_take_hit
	.export		_spawn_check
	.export		_sprite_maintain_y_position
	.export		_do_physics
	.export		_init_globals
	.export		_init_game_state
	.export		_game_running_sm
	.export		_title_screen_sm
	.export		_end_screen_sm
	.export		_main

.segment	"DATA"

.segment	"CHARS"
_pattern:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$F9
	.byte	$F9
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$E6
	.byte	$E6
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$18
	.byte	$2C
	.byte	$F9
	.byte	$03
	.byte	$03
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$E6
	.byte	$04
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$F0
	.byte	$FE
	.byte	$FF
	.byte	$DF
	.byte	$C0
	.byte	$E0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$1C
	.byte	$0E
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$07
	.byte	$09
	.byte	$17
	.byte	$00
	.byte	$20
	.byte	$50
	.byte	$50
	.byte	$78
	.byte	$C0
	.byte	$0C
	.byte	$80
	.byte	$60
	.byte	$D0
	.byte	$88
	.byte	$88
	.byte	$86
	.byte	$3E
	.byte	$F3
	.byte	$7C
	.byte	$10
	.byte	$20
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$59
	.byte	$7E
	.byte	$F6
	.byte	$EC
	.byte	$9C
	.byte	$38
	.byte	$3F
	.byte	$80
	.byte	$00
	.byte	$18
	.byte	$10
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$60
	.byte	$C0
	.byte	$C0
	.byte	$C0
	.byte	$E6
	.byte	$7C
	.byte	$1E
	.byte	$80
	.byte	$60
	.byte	$38
	.byte	$78
	.byte	$09
	.byte	$02
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$06
	.byte	$C5
	.byte	$76
	.byte	$FF
	.byte	$1F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$40
	.byte	$8E
	.byte	$1A
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$40
	.byte	$AE
	.byte	$71
	.byte	$E1
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0B
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$4E
	.byte	$84
	.byte	$00
	.byte	$04
	.byte	$02
	.byte	$07
	.byte	$03
	.byte	$01
	.byte	$B1
	.byte	$7A
	.byte	$FE
	.byte	$CA
	.byte	$E4
	.byte	$70
	.byte	$3C
	.byte	$14
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$0C
	.byte	$10
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$0D
	.byte	$13
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$10
	.byte	$28
	.byte	$28
	.byte	$3C
	.byte	$60
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$E8
	.byte	$C4
	.byte	$C4
	.byte	$C2
	.byte	$9F
	.byte	$FE
	.byte	$20
	.byte	$07
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$0E
	.byte	$00
	.byte	$5F
	.byte	$78
	.byte	$3C
	.byte	$0C
	.byte	$1C
	.byte	$38
	.byte	$70
	.byte	$78
	.byte	$40
	.byte	$0C
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$A0
	.byte	$E0
	.byte	$60
	.byte	$73
	.byte	$3E
	.byte	$0F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$02
	.byte	$03
	.byte	$01
	.byte	$00
	.byte	$04
	.byte	$0A
	.byte	$03
	.byte	$04
	.byte	$04
	.byte	$04
	.byte	$02
	.byte	$07
	.byte	$0B
	.byte	$15
	.byte	$07
	.byte	$8E
	.byte	$D4
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$40
	.byte	$80
	.byte	$70
	.byte	$2B
	.byte	$72
	.byte	$E7
	.byte	$EE
	.byte	$7C
	.byte	$B8
	.byte	$14
	.byte	$08
	.byte	$00
	.byte	$70
	.byte	$60
	.byte	$E0
	.byte	$A0
	.byte	$00
	.byte	$2B
	.byte	$37
	.byte	$3F
	.byte	$03
	.byte	$07
	.byte	$06
	.byte	$0E
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$E0
	.byte	$80
	.byte	$00
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$1F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$10
	.byte	$28
	.byte	$28
	.byte	$7C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$68
	.byte	$C4
	.byte	$C4
	.byte	$82
	.byte	$0E
	.byte	$10
	.byte	$C0
	.byte	$E0
	.byte	$C0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$31
	.byte	$6F
	.byte	$3F
	.byte	$1C
	.byte	$0E
	.byte	$7E
	.byte	$7C
	.byte	$30
	.byte	$00
	.byte	$80
	.byte	$40
	.byte	$08
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$7E
	.byte	$A0
	.byte	$60
	.byte	$60
	.byte	$73
	.byte	$3E
	.byte	$0F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$10
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$17
	.byte	$2F
	.byte	$37
	.byte	$00
	.byte	$00
	.byte	$50
	.byte	$78
	.byte	$80
	.byte	$0C
	.byte	$80
	.byte	$C0
	.byte	$00
	.byte	$70
	.byte	$88
	.byte	$84
	.byte	$7E
	.byte	$F2
	.byte	$7C
	.byte	$30
	.byte	$D0
	.byte	$40
	.byte	$C0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$3F
	.byte	$3F
	.byte	$F8
	.byte	$70
	.byte	$E0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FB
	.byte	$BE
	.byte	$1F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$21
	.byte	$03
	.byte	$06
	.byte	$1E
	.byte	$18
	.byte	$18
	.byte	$7E
	.byte	$7E
	.byte	$FE
	.byte	$FC
	.byte	$78
	.byte	$60
	.byte	$00
	.byte	$18
	.byte	$24
	.byte	$24
	.byte	$38
	.byte	$10
	.byte	$18
	.byte	$10
	.byte	$1C
	.byte	$18
	.byte	$24
	.byte	$24
	.byte	$38
	.byte	$10
	.byte	$18
	.byte	$10
	.byte	$1C
	.byte	$00
	.byte	$08
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$10
	.byte	$00
	.byte	$08
	.byte	$14
	.byte	$32
	.byte	$7F
	.byte	$D8
	.byte	$E8
	.byte	$A6
	.byte	$70
	.byte	$38
	.byte	$44
	.byte	$44
	.byte	$54
	.byte	$44
	.byte	$44
	.byte	$38
	.byte	$00
	.byte	$38
	.byte	$5C
	.byte	$66
	.byte	$76
	.byte	$6E
	.byte	$66
	.byte	$3A
	.byte	$1C
	.byte	$30
	.byte	$50
	.byte	$10
	.byte	$10
	.byte	$10
	.byte	$10
	.byte	$7C
	.byte	$00
	.byte	$30
	.byte	$58
	.byte	$38
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$7C
	.byte	$3E
	.byte	$38
	.byte	$44
	.byte	$04
	.byte	$08
	.byte	$10
	.byte	$20
	.byte	$7C
	.byte	$00
	.byte	$38
	.byte	$5C
	.byte	$26
	.byte	$0A
	.byte	$14
	.byte	$28
	.byte	$7C
	.byte	$3E
	.byte	$38
	.byte	$44
	.byte	$04
	.byte	$18
	.byte	$04
	.byte	$44
	.byte	$38
	.byte	$00
	.byte	$38
	.byte	$5C
	.byte	$26
	.byte	$1A
	.byte	$0C
	.byte	$46
	.byte	$3A
	.byte	$1C
	.byte	$44
	.byte	$44
	.byte	$44
	.byte	$7C
	.byte	$04
	.byte	$04
	.byte	$04
	.byte	$00
	.byte	$44
	.byte	$66
	.byte	$66
	.byte	$7E
	.byte	$3E
	.byte	$06
	.byte	$06
	.byte	$02
	.byte	$7C
	.byte	$40
	.byte	$40
	.byte	$38
	.byte	$04
	.byte	$44
	.byte	$38
	.byte	$00
	.byte	$7C
	.byte	$7E
	.byte	$60
	.byte	$38
	.byte	$1C
	.byte	$46
	.byte	$3A
	.byte	$1C
	.byte	$38
	.byte	$44
	.byte	$40
	.byte	$78
	.byte	$44
	.byte	$44
	.byte	$38
	.byte	$00
	.byte	$38
	.byte	$7C
	.byte	$42
	.byte	$78
	.byte	$7C
	.byte	$46
	.byte	$3A
	.byte	$1C
	.byte	$7C
	.byte	$04
	.byte	$08
	.byte	$10
	.byte	$10
	.byte	$10
	.byte	$10
	.byte	$00
	.byte	$7C
	.byte	$3E
	.byte	$0A
	.byte	$14
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$08
	.byte	$38
	.byte	$44
	.byte	$44
	.byte	$38
	.byte	$44
	.byte	$44
	.byte	$38
	.byte	$00
	.byte	$38
	.byte	$5C
	.byte	$66
	.byte	$3A
	.byte	$5C
	.byte	$66
	.byte	$3A
	.byte	$1C
	.byte	$38
	.byte	$44
	.byte	$44
	.byte	$3C
	.byte	$04
	.byte	$44
	.byte	$38
	.byte	$00
	.byte	$38
	.byte	$7C
	.byte	$46
	.byte	$3E
	.byte	$1E
	.byte	$46
	.byte	$3A
	.byte	$1C
	.byte	$19
	.byte	$04
	.byte	$70
	.byte	$00
	.byte	$61
	.byte	$86
	.byte	$22
	.byte	$47
	.byte	$19
	.byte	$07
	.byte	$79
	.byte	$1D
	.byte	$66
	.byte	$B1
	.byte	$29
	.byte	$40
	.byte	$00
	.byte	$83
	.byte	$44
	.byte	$38
	.byte	$83
	.byte	$44
	.byte	$38
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$83
	.byte	$C7
	.byte	$7C
	.byte	$38
	.byte	$00
	.byte	$00
	.byte	$0E
	.byte	$93
	.byte	$51
	.byte	$31
	.byte	$81
	.byte	$46
	.byte	$38
	.byte	$00
	.byte	$00
	.byte	$0C
	.byte	$8E
	.byte	$CE
	.byte	$7E
	.byte	$38
	.byte	$00
	.byte	$00
	.byte	$7E
	.byte	$40
	.byte	$40
	.byte	$78
	.byte	$40
	.byte	$40
	.byte	$7E
	.byte	$00
	.byte	$7E
	.byte	$7F
	.byte	$60
	.byte	$78
	.byte	$7C
	.byte	$60
	.byte	$7E
	.byte	$7F
	.byte	$42
	.byte	$62
	.byte	$52
	.byte	$4A
	.byte	$46
	.byte	$42
	.byte	$42
	.byte	$00
	.byte	$42
	.byte	$63
	.byte	$73
	.byte	$6B
	.byte	$67
	.byte	$63
	.byte	$63
	.byte	$21
	.byte	$78
	.byte	$44
	.byte	$42
	.byte	$42
	.byte	$42
	.byte	$44
	.byte	$78
	.byte	$00
	.byte	$78
	.byte	$7C
	.byte	$62
	.byte	$63
	.byte	$67
	.byte	$65
	.byte	$7A
	.byte	$3C
	.byte	$FF
	.byte	$00
	.byte	$78
	.byte	$40
	.byte	$5F
	.byte	$1F
	.byte	$3F
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$E0
	.byte	$E0
	.byte	$C0
	.byte	$FF
	.byte	$FF
	.byte	$03
	.byte	$FF
	.byte	$0F
	.byte	$EF
	.byte	$E3
	.byte	$8F
	.byte	$3F
	.byte	$00
	.byte	$FC
	.byte	$00
	.byte	$F0
	.byte	$10
	.byte	$1C
	.byte	$70
	.byte	$C0
	.byte	$FF
	.byte	$81
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$81
	.byte	$FF
	.byte	$FF
	.byte	$D5
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$D5
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$7F
	.byte	$7F
	.byte	$3F
	.byte	$1F
	.byte	$1F
	.byte	$03
	.byte	$00
	.byte	$FF
	.byte	$7C
	.byte	$01
	.byte	$3E
	.byte	$00
	.byte	$1F
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FE
	.byte	$FC
	.byte	$F0
	.byte	$C0
	.byte	$01
	.byte	$FF
	.byte	$00
	.byte	$FF
	.byte	$3E
	.byte	$84
	.byte	$F0
	.byte	$00
	.byte	$40
	.byte	$40
	.byte	$40
	.byte	$40
	.byte	$40
	.byte	$40
	.byte	$7E
	.byte	$00
	.byte	$40
	.byte	$60
	.byte	$60
	.byte	$60
	.byte	$60
	.byte	$60
	.byte	$7E
	.byte	$3F
	.byte	$FE
	.byte	$10
	.byte	$10
	.byte	$10
	.byte	$10
	.byte	$10
	.byte	$FE
	.byte	$00
	.byte	$FE
	.byte	$3F
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$FE
	.byte	$7F
	.byte	$42
	.byte	$42
	.byte	$42
	.byte	$42
	.byte	$42
	.byte	$24
	.byte	$18
	.byte	$00
	.byte	$42
	.byte	$63
	.byte	$63
	.byte	$63
	.byte	$63
	.byte	$3D
	.byte	$1A
	.byte	$0C
	.byte	$3C
	.byte	$42
	.byte	$40
	.byte	$3C
	.byte	$02
	.byte	$42
	.byte	$3C
	.byte	$00
	.byte	$3C
	.byte	$7E
	.byte	$61
	.byte	$3C
	.byte	$1E
	.byte	$43
	.byte	$3F
	.byte	$1E
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_pattern2:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0F
	.byte	$0F
	.byte	$0C
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$F0
	.byte	$F0
	.byte	$30
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$3F
	.byte	$3F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$1F
	.byte	$FF
	.byte	$F8
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$7F
	.byte	$FF
	.byte	$E0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0F
	.byte	$FF
	.byte	$FC
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$F0
	.byte	$00
	.byte	$3F
	.byte	$3F
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$C0
	.byte	$FF
	.byte	$3F
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$09
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$F8
	.byte	$F8
	.byte	$00
	.byte	$00
	.byte	$83
	.byte	$87
	.byte	$8E
	.byte	$9C
	.byte	$F8
	.byte	$E0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$00
	.byte	$F0
	.byte	$F8
	.byte	$9C
	.byte	$0E
	.byte	$07
	.byte	$13
	.byte	$19
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$60
	.byte	$F0
	.byte	$F8
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$E7
	.byte	$C7
	.byte	$87
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$07
	.byte	$07
	.byte	$E7
	.byte	$C7
	.byte	$87
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$3F
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$3F
	.byte	$FF
	.byte	$00
	.byte	$01
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$3F
	.byte	$FF
	.byte	$FF
	.byte	$C0
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$C0
	.byte	$13
	.byte	$33
	.byte	$73
	.byte	$73
	.byte	$F3
	.byte	$F3
	.byte	$F3
	.byte	$03
	.byte	$F0
	.byte	$F0
	.byte	$F0
	.byte	$F0
	.byte	$F0
	.byte	$F0
	.byte	$F0
	.byte	$00
	.byte	$60
	.byte	$60
	.byte	$60
	.byte	$C0
	.byte	$C0
	.byte	$C0
	.byte	$80
	.byte	$80
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$0F
	.byte	$0F
	.byte	$0F
	.byte	$1F
	.byte	$1F
	.byte	$19
	.byte	$33
	.byte	$73
	.byte	$73
	.byte	$E6
	.byte	$E6
	.byte	$E6
	.byte	$E6
	.byte	$F8
	.byte	$F0
	.byte	$F0
	.byte	$F0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$30
	.byte	$18
	.byte	$18
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$07
	.byte	$07
	.byte	$03
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$0C
	.byte	$04
	.byte	$06
	.byte	$03
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$F8
	.byte	$FC
	.byte	$FC
	.byte	$FE
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$C0
	.byte	$C0
	.byte	$E0
	.byte	$70
	.byte	$30
	.byte	$30
	.byte	$98
	.byte	$98
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$80
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$3F
	.byte	$3F
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FC
	.byte	$FC
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0F
	.byte	$0E
	.byte	$06
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$7F
	.byte	$FF
	.byte	$00
	.byte	$02
	.byte	$02
	.byte	$03
	.byte	$01
	.byte	$01
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$0E
	.byte	$3E
	.byte	$7F
	.byte	$7F
	.byte	$3F
	.byte	$FF
	.byte	$C0
	.byte	$00
	.byte	$3E
	.byte	$7F
	.byte	$33
	.byte	$33
	.byte	$99
	.byte	$FF
	.byte	$C0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$FC
	.byte	$02
	.byte	$02
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$FC
	.byte	$0E
	.byte	$3E
	.byte	$7F
	.byte	$3F
	.byte	$3F
	.byte	$3F
	.byte	$1F
	.byte	$00
	.byte	$00
	.byte	$7F
	.byte	$3F
	.byte	$30
	.byte	$98
	.byte	$99
	.byte	$CD
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$80
	.byte	$C0
	.byte	$00
	.byte	$30
	.byte	$F0
	.byte	$E0
	.byte	$E0
	.byte	$C0
	.byte	$80
	.byte	$80
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$07
	.byte	$07
	.byte	$0F
	.byte	$1F
	.byte	$1F
	.byte	$03
	.byte	$0F
	.byte	$07
	.byte	$13
	.byte	$32
	.byte	$32
	.byte	$66
	.byte	$4C
	.byte	$00
	.byte	$80
	.byte	$E0
	.byte	$F0
	.byte	$F0
	.byte	$F0
	.byte	$E0
	.byte	$C0
	.byte	$80
	.byte	$81
	.byte	$01
	.byte	$03
	.byte	$03
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$1F
	.byte	$1F
	.byte	$3F
	.byte	$3F
	.byte	$7F
	.byte	$7F
	.byte	$7F
	.byte	$FF
	.byte	$CC
	.byte	$CC
	.byte	$CF
	.byte	$9F
	.byte	$80
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$C0
	.byte	$C0
	.byte	$80
	.byte	$80
	.byte	$80
	.byte	$FF
	.byte	$FF
	.byte	$06
	.byte	$06
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$0F
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$7F
	.byte	$7F
	.byte	$3F
	.byte	$3F
	.byte	$1F
	.byte	$0C
	.byte	$FF
	.byte	$FF
	.byte	$98
	.byte	$CC
	.byte	$CF
	.byte	$9F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$C0
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$F0
	.byte	$F0
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$80
	.byte	$C0
	.byte	$C0
	.byte	$E0
	.byte	$63
	.byte	$3F
	.byte	$3F
	.byte	$1F
	.byte	$1F
	.byte	$0F
	.byte	$0F
	.byte	$07
	.byte	$07
	.byte	$99
	.byte	$99
	.byte	$4C
	.byte	$4F
	.byte	$67
	.byte	$66
	.byte	$E4
	.byte	$C8
	.byte	$80
	.byte	$80
	.byte	$C0
	.byte	$C0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$C1
	.byte	$80
	.byte	$80
	.byte	$C0
	.byte	$C0
	.byte	$03
	.byte	$17
	.byte	$1F
	.byte	$0E
	.byte	$1F
	.byte	$1F
	.byte	$0F
	.byte	$0F
	.byte	$0F
	.byte	$77
	.byte	$FF
	.byte	$FE
	.byte	$4F
	.byte	$4F
	.byte	$4E
	.byte	$E6
	.byte	$E4
	.byte	$C0
	.byte	$18
	.byte	$3C
	.byte	$C0
	.byte	$C0
	.byte	$C0
	.byte	$E0
	.byte	$E0
	.byte	$C1
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$03
	.byte	$06
	.byte	$0C
	.byte	$1C
	.byte	$3F
	.byte	$3F
	.byte	$7F
	.byte	$7F
	.byte	$FF
	.byte	$FE
	.byte	$FC
	.byte	$FC
	.byte	$CC
	.byte	$CC
	.byte	$98
	.byte	$18
	.byte	$30
	.byte	$70
	.byte	$E0
	.byte	$E0
	.byte	$C0
	.byte	$C0
	.byte	$81
	.byte	$01
	.byte	$03
	.byte	$03
	.byte	$07
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$E7
	.byte	$C7
	.byte	$87
	.byte	$07
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$03
	.byte	$07
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$73
	.byte	$33
	.byte	$38
	.byte	$1C
	.byte	$0F
	.byte	$0E
	.byte	$1C
	.byte	$30
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$90
	.byte	$20
	.byte	$40
	.byte	$80
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$07
	.byte	$83
	.byte	$07
	.byte	$0F
	.byte	$1F
	.byte	$3F
	.byte	$7F
	.byte	$FF
	.byte	$FF
	.byte	$0E
	.byte	$1C
	.byte	$39
	.byte	$73
	.byte	$E7
	.byte	$CE
	.byte	$9F
	.byte	$3F
	.byte	$FE
	.byte	$FC
	.byte	$F8
	.byte	$F0
	.byte	$E0
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$7E
	.byte	$E7
	.byte	$C3
	.byte	$8F
	.byte	$1E
	.byte	$38
	.byte	$F0
	.byte	$E0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$39
	.byte	$13
	.byte	$83
	.byte	$01
	.byte	$04
	.byte	$02
	.byte	$07
	.byte	$0F
	.byte	$78
	.byte	$10
	.byte	$00
	.byte	$38
	.byte	$7C
	.byte	$FE
	.byte	$FF
	.byte	$FF
	.byte	$C0
	.byte	$C0
	.byte	$80
	.byte	$81
	.byte	$01
	.byte	$03
	.byte	$07
	.byte	$07
	.byte	$0F
	.byte	$0F
	.byte	$1F
	.byte	$1F
	.byte	$3F
	.byte	$7F
	.byte	$7F
	.byte	$FF
	.byte	$3F
	.byte	$3F
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FC
	.byte	$FC
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$1F
	.byte	$1F
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$F0
	.byte	$F0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$3F
	.byte	$3F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$FC
	.byte	$FC
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$60
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$03
	.byte	$0F
	.byte	$1F
	.byte	$3F
	.byte	$3F
	.byte	$3F
	.byte	$3F
	.byte	$3F
	.byte	$0E
	.byte	$1C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$7F
	.byte	$FF
	.byte	$FE
	.byte	$FC
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$F8
	.byte	$F0
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$07
	.byte	$0E
	.byte	$0F
	.byte	$1F
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FE
	.byte	$1C
	.byte	$38
	.byte	$72
	.byte	$E7
	.byte	$CF
	.byte	$9D
	.byte	$38
	.byte	$38
	.byte	$FD
	.byte	$F8
	.byte	$F0
	.byte	$E0
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$0E
	.byte	$EE
	.byte	$7C
	.byte	$3C
	.byte	$98
	.byte	$C0
	.byte	$E4
	.byte	$7C
	.byte	$FE
	.byte	$FE
	.byte	$7C
	.byte	$3C
	.byte	$18
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$06
	.byte	$04
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$3F
	.byte	$3F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FC
	.byte	$FC
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$1F
	.byte	$1F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$F0
	.byte	$F0
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$06
	.byte	$04
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$07
	.byte	$06
	.byte	$04
	.byte	$00
	.byte	$00
	.byte	$F7
	.byte	$C7
	.byte	$87
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$E7
	.byte	$C7
	.byte	$87
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0F
	.byte	$1F
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$1E
	.byte	$F8
	.byte	$3F
	.byte	$3F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$80
	.byte	$00
	.byte	$70
	.byte	$C0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$80
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$0F
	.byte	$3F
	.byte	$7F
	.byte	$E0
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$07
	.byte	$1C
	.byte	$38
	.byte	$E3
	.byte	$FF
	.byte	$3F
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FC
	.byte	$F8
	.byte	$E0
	.byte	$1C
	.byte	$70
	.byte	$E0
	.byte	$80
	.byte	$00
	.byte	$60
	.byte	$F0
	.byte	$F8
	.byte	$FC
	.byte	$F0
	.byte	$E1
	.byte	$83
	.byte	$07
	.byte	$07
	.byte	$03
	.byte	$01
	.byte	$1C
	.byte	$0E
	.byte	$27
	.byte	$13
	.byte	$09
	.byte	$04
	.byte	$04
	.byte	$02
	.byte	$00
	.byte	$C0
	.byte	$E0
	.byte	$F0
	.byte	$F8
	.byte	$FC
	.byte	$FC
	.byte	$FE
	.byte	$3C
	.byte	$1C
	.byte	$0C
	.byte	$8C
	.byte	$CC
	.byte	$CC
	.byte	$EC
	.byte	$7C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$3F
	.byte	$3F
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$FC
	.byte	$FC
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$E7
	.byte	$C7
	.byte	$87
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$F0
	.byte	$F0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$07
	.byte	$0E
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$E0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0F
	.byte	$01
	.byte	$07
	.byte	$1F
	.byte	$7F
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$01
	.byte	$03
	.byte	$0E
	.byte	$1C
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FE
	.byte	$FC
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$C7
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$0F
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FC
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0F
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$E0
	.byte	$F0
	.byte	$F8
	.byte	$FF
	.byte	$7F
	.byte	$7F
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$3C
	.byte	$9C
	.byte	$9C
	.byte	$4C
	.byte	$24
	.byte	$30
	.byte	$18
	.byte	$38
	.byte	$00
	.byte	$80
	.byte	$80
	.byte	$C0
	.byte	$E0
	.byte	$F0
	.byte	$F8
	.byte	$F8
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$3F
	.byte	$3F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$FC
	.byte	$FC
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$F0
	.byte	$F0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$06
	.byte	$06
	.byte	$06
	.byte	$0F
	.byte	$0F
	.byte	$0C
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$1F
	.byte	$3F
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$7F
	.byte	$7F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$F0
	.byte	$00
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$F0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$FF
	.byte	$00
	.byte	$3F
	.byte	$3F
	.byte	$3F
	.byte	$3F
	.byte	$3F
	.byte	$3F
	.byte	$F0
	.byte	$00
	.byte	$0F
	.byte	$3F
	.byte	$3F
	.byte	$3F
	.byte	$00
	.byte	$00
	.byte	$F0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$F8
	.byte	$FC
	.byte	$FE
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$70
	.byte	$E4
	.byte	$CC
	.byte	$9C
	.byte	$3C
	.byte	$7C
	.byte	$04
	.byte	$04
	.byte	$F0
	.byte	$E0
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$06
	.byte	$04
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$06
	.byte	$04
	.byte	$00
	.byte	$00
	.byte	$E7
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$07
	.byte	$07
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$1F
	.byte	$3F
	.byte	$7F
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C3
	.byte	$C3
	.byte	$C1
	.byte	$41
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$7F
	.byte	$04
	.byte	$24
	.byte	$64
	.byte	$E4
	.byte	$E4
	.byte	$E4
	.byte	$E4
	.byte	$04
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$3F
	.byte	$3F
	.byte	$30
	.byte	$30
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$FC
	.byte	$FC
	.byte	$0C
	.byte	$0C
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C7
	.byte	$87
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$F0
	.byte	$F0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0C
	.byte	$0F
	.byte	$0F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FE
	.byte	$FC
	.byte	$1C
	.byte	$38
	.byte	$70
	.byte	$E0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$07
	.byte	$0F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$0F
	.byte	$1D
	.byte	$7F
	.byte	$7F
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FD
	.byte	$80
	.byte	$0F
	.byte	$03
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$C0
	.byte	$80
	.byte	$C0
	.byte	$E0
	.byte	$F0
	.byte	$FC
	.byte	$FE
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$C0
	.byte	$F0
	.byte	$38
	.byte	$1E
	.byte	$0F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$04
	.byte	$FC
	.byte	$FC
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$06
	.byte	$04
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$07
	.byte	$1E
	.byte	$38
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$0F
	.byte	$3C
	.byte	$F0
	.byte	$C0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$1F
	.byte	$7F
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$07
	.byte	$0E
	.byte	$3C
	.byte	$3F
	.byte	$7F
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FE
	.byte	$FC
	.byte	$38
	.byte	$72
	.byte	$E7
	.byte	$CF
	.byte	$9C
	.byte	$38
	.byte	$70
	.byte	$E0
	.byte	$F8
	.byte	$F0
	.byte	$E0
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$E0
	.byte	$78
	.byte	$1C
	.byte	$8E
	.byte	$E7
	.byte	$73
	.byte	$39
	.byte	$1C
	.byte	$FF
	.byte	$7F
	.byte	$1F
	.byte	$0F
	.byte	$07
	.byte	$03
	.byte	$01
	.byte	$00
	.byte	$03
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$C0
	.byte	$E0
	.byte	$E0
	.byte	$F0
	.byte	$F8
	.byte	$FE
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$8C
	.byte	$CC
	.byte	$EC
	.byte	$7C
	.byte	$3C
	.byte	$1C
	.byte	$4C
	.byte	$CC
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$C0
	.byte	$C0
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$07
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$1F
	.byte	$3F
	.byte	$7F
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$18
	.byte	$19
	.byte	$0C
	.byte	$0C
	.byte	$06
	.byte	$07
	.byte	$03
	.byte	$03
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$FF
	.byte	$FE
	.byte	$F8
	.byte	$41
	.byte	$07
	.byte	$BE
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FE
	.byte	$F8
	.byte	$40
	.byte	$00
	.byte	$00
	.byte	$F9
	.byte	$F3
	.byte	$C7
	.byte	$0E
	.byte	$3C
	.byte	$F0
	.byte	$C0
	.byte	$00
	.byte	$F8
	.byte	$F0
	.byte	$C0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0E
	.byte	$07
	.byte	$03
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$71
	.byte	$3B
	.byte	$9F
	.byte	$CE
	.byte	$E4
	.byte	$71
	.byte	$3B
	.byte	$1F
	.byte	$7F
	.byte	$3F
	.byte	$1F
	.byte	$0E
	.byte	$04
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$CC
	.byte	$9C
	.byte	$3C
	.byte	$7C
	.byte	$EC
	.byte	$CC
	.byte	$8C
	.byte	$0F
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$07
	.byte	$1F
	.byte	$3F
	.byte	$7F
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$3F
	.byte	$3F
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$F0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$30
	.byte	$F0
	.byte	$F0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0F
	.byte	$0F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$F8
	.byte	$C0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0E
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$F0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$0F
	.byte	$1C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$0F
	.byte	$1C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$E0
	.byte	$F0
	.byte	$30
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$E0
	.byte	$F0
	.byte	$30
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$0C
	.byte	$3C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$0C
	.byte	$3C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$80
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$80
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0F
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0F
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FC
	.byte	$FC
	.byte	$F8
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FC
	.byte	$FC
	.byte	$F8
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$07
	.byte	$07
	.byte	$0F
	.byte	$1E
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$07
	.byte	$07
	.byte	$0F
	.byte	$1E
	.byte	$78
	.byte	$F0
	.byte	$E1
	.byte	$C7
	.byte	$8F
	.byte	$1F
	.byte	$3E
	.byte	$7C
	.byte	$78
	.byte	$F0
	.byte	$E1
	.byte	$C7
	.byte	$8F
	.byte	$1F
	.byte	$3E
	.byte	$7C
	.byte	$70
	.byte	$E0
	.byte	$E0
	.byte	$C1
	.byte	$83
	.byte	$03
	.byte	$07
	.byte	$0E
	.byte	$70
	.byte	$E0
	.byte	$E0
	.byte	$C1
	.byte	$83
	.byte	$03
	.byte	$07
	.byte	$0E
	.byte	$78
	.byte	$F0
	.byte	$F0
	.byte	$E0
	.byte	$C0
	.byte	$88
	.byte	$38
	.byte	$79
	.byte	$78
	.byte	$F0
	.byte	$F0
	.byte	$E0
	.byte	$C0
	.byte	$88
	.byte	$38
	.byte	$79
	.byte	$00
	.byte	$0C
	.byte	$1C
	.byte	$1C
	.byte	$08
	.byte	$70
	.byte	$F1
	.byte	$E3
	.byte	$00
	.byte	$0C
	.byte	$1C
	.byte	$1C
	.byte	$08
	.byte	$70
	.byte	$F1
	.byte	$E3
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$3C
	.byte	$7C
	.byte	$F9
	.byte	$F1
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$3C
	.byte	$7C
	.byte	$F9
	.byte	$F1
	.byte	$0F
	.byte	$1E
	.byte	$3C
	.byte	$3C
	.byte	$78
	.byte	$F7
	.byte	$EF
	.byte	$DB
	.byte	$0F
	.byte	$1E
	.byte	$3C
	.byte	$3C
	.byte	$78
	.byte	$F7
	.byte	$EF
	.byte	$DB
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$8F
	.byte	$9D
	.byte	$3B
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$8F
	.byte	$9D
	.byte	$3B
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$C6
	.byte	$CE
	.byte	$9D
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$C6
	.byte	$CE
	.byte	$9D
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$38
	.byte	$F8
	.byte	$F0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$38
	.byte	$F8
	.byte	$F0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$1C
	.byte	$7C
	.byte	$FC
	.byte	$FC
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$1C
	.byte	$7C
	.byte	$FC
	.byte	$FC
	.byte	$03
	.byte	$07
	.byte	$07
	.byte	$0E
	.byte	$0E
	.byte	$1C
	.byte	$38
	.byte	$30
	.byte	$03
	.byte	$07
	.byte	$07
	.byte	$0E
	.byte	$0E
	.byte	$1C
	.byte	$38
	.byte	$30
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$07
	.byte	$3F
	.byte	$7F
	.byte	$FF
	.byte	$3C
	.byte	$70
	.byte	$00
	.byte	$03
	.byte	$07
	.byte	$3F
	.byte	$7F
	.byte	$FF
	.byte	$3C
	.byte	$70
	.byte	$07
	.byte	$0F
	.byte	$1E
	.byte	$BC
	.byte	$38
	.byte	$71
	.byte	$F7
	.byte	$EF
	.byte	$07
	.byte	$0F
	.byte	$1E
	.byte	$BC
	.byte	$38
	.byte	$71
	.byte	$F7
	.byte	$EF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$0F
	.byte	$9D
	.byte	$3B
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$0F
	.byte	$9D
	.byte	$3B
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$C0
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$C0
	.byte	$C0
	.byte	$80
	.byte	$07
	.byte	$07
	.byte	$0F
	.byte	$0F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$07
	.byte	$0F
	.byte	$0F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FC
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$7F
	.byte	$FC
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$7F
	.byte	$38
	.byte	$38
	.byte	$30
	.byte	$70
	.byte	$60
	.byte	$C0
	.byte	$E3
	.byte	$E7
	.byte	$38
	.byte	$38
	.byte	$30
	.byte	$70
	.byte	$60
	.byte	$C0
	.byte	$E3
	.byte	$E7
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$18
	.byte	$FC
	.byte	$FC
	.byte	$BD
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$18
	.byte	$FC
	.byte	$FC
	.byte	$BD
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$20
	.byte	$FE
	.byte	$FE
	.byte	$FE
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$20
	.byte	$FE
	.byte	$FE
	.byte	$FE
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$19
	.byte	$3B
	.byte	$77
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$19
	.byte	$3B
	.byte	$77
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$60
	.byte	$E7
	.byte	$EF
	.byte	$DE
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$60
	.byte	$E7
	.byte	$EF
	.byte	$DE
	.byte	$1E
	.byte	$3C
	.byte	$3C
	.byte	$3C
	.byte	$3C
	.byte	$3E
	.byte	$1F
	.byte	$1F
	.byte	$1E
	.byte	$3C
	.byte	$3C
	.byte	$3C
	.byte	$3C
	.byte	$3E
	.byte	$1F
	.byte	$1F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$07
	.byte	$1C
	.byte	$F8
	.byte	$E0
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$07
	.byte	$1C
	.byte	$F8
	.byte	$E0
	.byte	$2D
	.byte	$7B
	.byte	$DF
	.byte	$9E
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$2D
	.byte	$7B
	.byte	$DF
	.byte	$9E
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$F1
	.byte	$A3
	.byte	$67
	.byte	$FB
	.byte	$F3
	.byte	$C0
	.byte	$00
	.byte	$00
	.byte	$F1
	.byte	$A3
	.byte	$67
	.byte	$FB
	.byte	$F3
	.byte	$C0
	.byte	$00
	.byte	$00
	.byte	$C3
	.byte	$87
	.byte	$9E
	.byte	$F7
	.byte	$E3
	.byte	$C1
	.byte	$00
	.byte	$00
	.byte	$C3
	.byte	$87
	.byte	$9E
	.byte	$F7
	.byte	$E3
	.byte	$C1
	.byte	$00
	.byte	$00
	.byte	$83
	.byte	$07
	.byte	$0F
	.byte	$FB
	.byte	$E3
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$83
	.byte	$07
	.byte	$0F
	.byte	$FB
	.byte	$E3
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$F7
	.byte	$EC
	.byte	$F8
	.byte	$BB
	.byte	$3E
	.byte	$1C
	.byte	$00
	.byte	$00
	.byte	$F7
	.byte	$EC
	.byte	$F8
	.byte	$BB
	.byte	$3E
	.byte	$1C
	.byte	$00
	.byte	$00
	.byte	$3F
	.byte	$78
	.byte	$F0
	.byte	$BF
	.byte	$3F
	.byte	$1C
	.byte	$00
	.byte	$00
	.byte	$3F
	.byte	$78
	.byte	$F0
	.byte	$BF
	.byte	$3F
	.byte	$1C
	.byte	$00
	.byte	$00
	.byte	$1B
	.byte	$3E
	.byte	$FD
	.byte	$BD
	.byte	$19
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$1B
	.byte	$3E
	.byte	$FD
	.byte	$BD
	.byte	$19
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$60
	.byte	$E4
	.byte	$D8
	.byte	$F0
	.byte	$E0
	.byte	$C0
	.byte	$00
	.byte	$00
	.byte	$60
	.byte	$E4
	.byte	$D8
	.byte	$F0
	.byte	$E0
	.byte	$C0
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$9C
	.byte	$3D
	.byte	$1F
	.byte	$3D
	.byte	$F1
	.byte	$C1
	.byte	$03
	.byte	$03
	.byte	$9C
	.byte	$3D
	.byte	$1F
	.byte	$3D
	.byte	$F1
	.byte	$C1
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$E1
	.byte	$F7
	.byte	$FC
	.byte	$F8
	.byte	$98
	.byte	$18
	.byte	$30
	.byte	$F0
	.byte	$E1
	.byte	$F7
	.byte	$FC
	.byte	$F8
	.byte	$98
	.byte	$18
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$E1
	.byte	$E1
	.byte	$C7
	.byte	$FD
	.byte	$F9
	.byte	$E0
	.byte	$00
	.byte	$00
	.byte	$E1
	.byte	$E1
	.byte	$C7
	.byte	$FD
	.byte	$F9
	.byte	$E0
	.byte	$00
	.byte	$00
	.byte	$DF
	.byte	$B6
	.byte	$EC
	.byte	$DF
	.byte	$9E
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$DF
	.byte	$B6
	.byte	$EC
	.byte	$DF
	.byte	$9E
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$3E
	.byte	$78
	.byte	$F0
	.byte	$FF
	.byte	$3F
	.byte	$1C
	.byte	$00
	.byte	$00
	.byte	$3E
	.byte	$78
	.byte	$F0
	.byte	$FF
	.byte	$3F
	.byte	$1C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$60
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$60
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$0E
	.byte	$1C
	.byte	$38
	.byte	$F0
	.byte	$E0
	.byte	$C0
	.byte	$FF
	.byte	$FF
	.byte	$0E
	.byte	$1C
	.byte	$38
	.byte	$F0
	.byte	$E0
	.byte	$C0
	.byte	$CE
	.byte	$1C
	.byte	$19
	.byte	$1F
	.byte	$0E
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$CE
	.byte	$1C
	.byte	$19
	.byte	$1F
	.byte	$0E
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$78
	.byte	$F1
	.byte	$A3
	.byte	$7E
	.byte	$78
	.byte	$70
	.byte	$00
	.byte	$00
	.byte	$78
	.byte	$F1
	.byte	$A3
	.byte	$7E
	.byte	$78
	.byte	$70
	.byte	$00
	.byte	$00
	.byte	$9C
	.byte	$98
	.byte	$33
	.byte	$3E
	.byte	$3C
	.byte	$10
	.byte	$00
	.byte	$00
	.byte	$9C
	.byte	$98
	.byte	$33
	.byte	$3E
	.byte	$3C
	.byte	$10
	.byte	$00
	.byte	$00
	.byte	$EF
	.byte	$DD
	.byte	$FB
	.byte	$F7
	.byte	$E7
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$EF
	.byte	$DD
	.byte	$FB
	.byte	$F7
	.byte	$E7
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$BE
	.byte	$EC
	.byte	$D9
	.byte	$9F
	.byte	$1E
	.byte	$18
	.byte	$00
	.byte	$00
	.byte	$BE
	.byte	$EC
	.byte	$D9
	.byte	$9F
	.byte	$1E
	.byte	$18
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$70
	.byte	$E0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$70
	.byte	$E0
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$42
	.byte	$42
	.byte	$42
	.byte	$42
	.byte	$42
	.byte	$24
	.byte	$18
	.byte	$00
	.byte	$42
	.byte	$63
	.byte	$63
	.byte	$63
	.byte	$63
	.byte	$3D
	.byte	$1A
	.byte	$0C
	.byte	$7E
	.byte	$40
	.byte	$40
	.byte	$78
	.byte	$40
	.byte	$40
	.byte	$7E
	.byte	$00
	.byte	$7E
	.byte	$7F
	.byte	$60
	.byte	$78
	.byte	$7C
	.byte	$60
	.byte	$7E
	.byte	$7F
	.byte	$7C
	.byte	$42
	.byte	$42
	.byte	$7C
	.byte	$48
	.byte	$44
	.byte	$42
	.byte	$00
	.byte	$7C
	.byte	$7E
	.byte	$63
	.byte	$7D
	.byte	$7E
	.byte	$64
	.byte	$62
	.byte	$21
	.byte	$42
	.byte	$42
	.byte	$24
	.byte	$18
	.byte	$24
	.byte	$42
	.byte	$42
	.byte	$00
	.byte	$42
	.byte	$63
	.byte	$25
	.byte	$1A
	.byte	$2C
	.byte	$52
	.byte	$63
	.byte	$21
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$06
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$07
	.byte	$03
.segment	"RODATA"
_spriteProperties:
	.byte	$00
	.addr	_spawn_1_by_1_sprite
	.addr	_despawn_1_sprite
	.addr	_invalid_ai_handler
	.addr	_invalid_collision_handler
	.byte	$1E
	.addr	_spawn_1_by_1_sprite
	.addr	_despawn_1_sprite
	.addr	_item_ai_handler
	.addr	_mini_frog_collision_handler
	.byte	$01
	.addr	_spawn_1_by_1_sprite
	.addr	_despawn_1_sprite
	.addr	_arrow_ai_handler
	.addr	_enemy_collision_handler
	.byte	$02
	.addr	_spawn_2_by_1_sprite
	.addr	_despawn_2_sprite
	.addr	_bird_ai_handler
	.addr	_enemy_collision_handler
	.byte	$29
	.addr	_spawn_portal_sprite
	.addr	_despawn_portal_sprite
	.addr	_item_ai_handler
	.addr	_portal_collision_handler
	.byte	$1D
	.addr	_spawn_1_by_1_sprite
	.addr	_despawn_1_sprite
	.addr	_item_ai_handler
	.addr	_key_collision_handler
_tongueSound400C:
	.byte	$39
	.byte	$37
	.byte	$35
	.byte	$34
	.byte	$34
	.byte	$35
	.byte	$37
	.byte	$39
	.byte	$30
	.byte	$30
	.byte	$3F
	.byte	$30
_tongueSound400E:
	.byte	$0B
	.byte	$0B
	.byte	$0B
	.byte	$0B
	.byte	$0B
	.byte	$0A
	.byte	$08
	.byte	$05
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$00
_damageSound400C:
	.byte	$3F
	.byte	$30
	.byte	$3C
	.byte	$3A
	.byte	$36
	.byte	$3A
	.byte	$3C
	.byte	$30
_damageSound400E:
	.byte	$0F
	.byte	$08
	.byte	$09
	.byte	$0B
	.byte	$0D
	.byte	$0E
	.byte	$0F
	.byte	$0E

.segment	"RODATA"

_aaa_invalidPalette:
	.word	$000D
	.word	$0009
	.word	$0019
	.word	$0030
_arrowPalette:
	.word	$000D
	.word	$0011
	.word	$0002
	.word	$0027
_birdPalette:
	.word	$000D
	.word	$0011
	.word	$0002
	.word	$0027
_frogPalette:
	.word	$000D
	.word	$0009
	.word	$0019
	.word	$0030
_frog_fallingPalette:
	.word	$000D
	.word	$0009
	.word	$0019
	.word	$0030
_frog_hopPalette:
	.word	$000D
	.word	$0009
	.word	$0019
	.word	$0030
_frog_jumpPalette:
	.word	$000D
	.word	$0009
	.word	$0019
	.word	$0030
_frog_landingPalette:
	.word	$000D
	.word	$0009
	.word	$0019
	.word	$0030
_frog_suspendedPalette:
	.word	$000D
	.word	$0009
	.word	$0019
	.word	$0030
_healthPalette:
	.word	$000D
	.word	$0006
	.word	$0016
	.word	$0030
_keyPalette:
	.word	$000D
	.word	$0011
	.word	$0002
	.word	$0027
_mini_frogPalette:
	.word	$000D
	.word	$0009
	.word	$0019
	.word	$0030
_numbersPalette:
	.word	$000D
	.word	$0000
	.word	$0010
	.word	$0030
_portalPalette:
	.word	$000D
	.word	$0009
	.word	$0019
	.word	$0030
_tonguePalette:
	.word	$000D
	.word	$0006
	.word	$0016
	.word	$0030
_EndingScreenPalette:
	.byte	$0D
	.byte	$00
	.byte	$10
	.byte	$30
_Level1Palette:
	.byte	$0D
	.byte	$00
	.byte	$10
	.byte	$30
	.byte	$02
	.byte	$12
	.byte	$22
	.byte	$03
	.byte	$13
	.byte	$23
	.byte	$09
	.byte	$19
	.byte	$29
_Sprites_Level1:
	.byte	$04
	.byte	$E0
	.byte	$0F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$1C
_Level2Palette:
	.byte	$0D
	.byte	$00
	.byte	$10
	.byte	$30
	.byte	$02
	.byte	$12
	.byte	$22
	.byte	$03
	.byte	$13
	.byte	$23
	.byte	$09
	.byte	$19
	.byte	$29
_Sprites_Level2:
	.byte	$02
	.byte	$08
	.byte	$0F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$20
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$01
	.byte	$04
	.byte	$02
	.byte	$08
	.byte	$5F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$0C
	.byte	$02
	.byte	$F0
	.byte	$E7
	.byte	$00
	.byte	$00
	.byte	$40
	.byte	$01
	.byte	$00
	.byte	$10
	.byte	$02
	.byte	$F0
	.byte	$27
	.byte	$02
	.byte	$00
	.byte	$40
	.byte	$01
	.byte	$00
	.byte	$14
	.byte	$02
	.byte	$08
	.byte	$7F
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$CF
	.byte	$C8
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$01
	.byte	$1C
	.byte	$01
	.byte	$50
	.byte	$40
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$24
	.byte	$01
	.byte	$10
	.byte	$A0
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$28
	.byte	$04
	.byte	$E0
	.byte	$0F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$2C
	.byte	$05
	.byte	$50
	.byte	$50
	.byte	$02
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$30
	.byte	$05
	.byte	$50
	.byte	$50
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$34
	.byte	$05
	.byte	$50
	.byte	$60
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$38
_Level3Palette:
	.byte	$0D
	.byte	$00
	.byte	$10
	.byte	$30
_Sprites_Level3:
	.byte	$02
	.byte	$08
	.byte	$AF
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$08
	.byte	$4F
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$04
	.byte	$02
	.byte	$08
	.byte	$DF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$02
	.byte	$08
	.byte	$7F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$0C
	.byte	$02
	.byte	$08
	.byte	$1F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$10
	.byte	$02
	.byte	$F0
	.byte	$7F
	.byte	$02
	.byte	$00
	.byte	$40
	.byte	$01
	.byte	$00
	.byte	$14
	.byte	$02
	.byte	$F0
	.byte	$1F
	.byte	$02
	.byte	$00
	.byte	$40
	.byte	$01
	.byte	$00
	.byte	$18
	.byte	$02
	.byte	$F0
	.byte	$AF
	.byte	$00
	.byte	$00
	.byte	$40
	.byte	$01
	.byte	$00
	.byte	$1C
	.byte	$02
	.byte	$F0
	.byte	$4F
	.byte	$00
	.byte	$00
	.byte	$40
	.byte	$01
	.byte	$00
	.byte	$20
	.byte	$05
	.byte	$20
	.byte	$0F
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$24
	.byte	$04
	.byte	$10
	.byte	$CF
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$28
_Level4Palette:
	.byte	$0D
	.byte	$00
	.byte	$10
	.byte	$30
_Sprites_Level4:
	.byte	$02
	.byte	$08
	.byte	$47
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$08
	.byte	$4F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$04
	.byte	$02
	.byte	$08
	.byte	$A7
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$02
	.byte	$08
	.byte	$AF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$0C
	.byte	$02
	.byte	$08
	.byte	$47
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$10
	.byte	$02
	.byte	$08
	.byte	$17
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$14
	.byte	$02
	.byte	$08
	.byte	$17
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$18
	.byte	$02
	.byte	$08
	.byte	$1F
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$1C
	.byte	$02
	.byte	$08
	.byte	$77
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$20
	.byte	$02
	.byte	$08
	.byte	$7F
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$24
	.byte	$05
	.byte	$28
	.byte	$28
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$28
	.byte	$05
	.byte	$28
	.byte	$88
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$2C
	.byte	$05
	.byte	$28
	.byte	$57
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$30
	.byte	$05
	.byte	$28
	.byte	$B7
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$34
	.byte	$04
	.byte	$78
	.byte	$C7
	.byte	$02
	.byte	$00
	.byte	$01
	.byte	$04
	.byte	$00
	.byte	$38
_LivesPalette:
	.byte	$0D
	.byte	$00
	.byte	$10
	.byte	$30
_TitleScreenPalette:
	.byte	$0D
	.byte	$10
	.byte	$2D
	.byte	$00
	.byte	$18
	.byte	$16
	.byte	$06
	.byte	$3D
	.byte	$3D
	.byte	$3D
_Nametable_EndingScreen_bottom_rle:
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$FF
	.byte	$00
	.byte	$01
	.byte	$EE
	.byte	$2C
	.byte	$2D
	.byte	$2E
	.byte	$00
	.byte	$01
	.byte	$FF
	.byte	$00
	.byte	$01
	.byte	$FF
	.byte	$00
	.byte	$01
	.byte	$0D
	.byte	$01
	.byte	$00
_Nametable_Level1_top_rle:
	.byte	$01
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0D
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0D
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$09
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$09
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$11
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$11
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$11
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$11
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$15
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$15
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$3F
	.byte	$01
	.byte	$00
_Nametable_Level1_bottom_rle:
	.byte	$01
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$15
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$15
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$15
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$15
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$3F
	.byte	$01
	.byte	$00
_Nametable_Level2_top_rle:
	.byte	$01
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$32
	.byte	$33
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$17
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$17
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$31
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$10
	.byte	$02
	.byte	$00
	.byte	$01
	.byte	$2D
	.byte	$01
	.byte	$00
_Nametable_Level2_bottom_rle:
	.byte	$01
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$31
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$15
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$15
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$15
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$15
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$11
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$11
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$11
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$11
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$0D
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$09
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0D
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$09
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0D
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$09
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0D
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$09
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$09
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0D
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$09
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0D
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$09
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$0D
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$09
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0D
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$11
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$11
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$11
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$32
	.byte	$33
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$36
	.byte	$20
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$01
	.byte	$00
_Nametable_Level3_top_rle:
	.byte	$01
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$31
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$31
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$3F
	.byte	$01
	.byte	$00
_Nametable_Level3_bottom_rle:
	.byte	$01
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$31
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$31
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$3F
	.byte	$01
	.byte	$00
_Nametable_Level4_top_rle:
	.byte	$01
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$3F
	.byte	$01
	.byte	$00
_Nametable_Level4_bottom_rle:
	.byte	$01
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$31
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$1B
	.byte	$30
	.byte	$2F
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$30
	.byte	$2F
	.byte	$00
	.byte	$01
	.byte	$3F
	.byte	$01
	.byte	$00
_Nametable_Lives_bottom_rle:
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$FF
	.byte	$00
	.byte	$01
	.byte	$EE
	.byte	$34
	.byte	$35
	.byte	$36
	.byte	$2C
	.byte	$37
	.byte	$00
	.byte	$01
	.byte	$FF
	.byte	$00
	.byte	$01
	.byte	$FF
	.byte	$00
	.byte	$01
	.byte	$0B
	.byte	$01
	.byte	$00
_Nametable_TitleScreen_bottom_rle:
	.byte	$EF
	.byte	$00
	.byte	$EF
	.byte	$61
	.byte	$01
	.byte	$02
	.byte	$EF
	.byte	$0A
	.byte	$03
	.byte	$00
	.byte	$04
	.byte	$05
	.byte	$06
	.byte	$07
	.byte	$08
	.byte	$09
	.byte	$0A
	.byte	$0B
	.byte	$0C
	.byte	$0D
	.byte	$0E
	.byte	$0F
	.byte	$00
	.byte	$EF
	.byte	$05
	.byte	$10
	.byte	$11
	.byte	$12
	.byte	$EF
	.byte	$03
	.byte	$13
	.byte	$12
	.byte	$EF
	.byte	$03
	.byte	$14
	.byte	$15
	.byte	$00
	.byte	$16
	.byte	$17
	.byte	$18
	.byte	$19
	.byte	$1A
	.byte	$1B
	.byte	$1C
	.byte	$1D
	.byte	$1E
	.byte	$1F
	.byte	$20
	.byte	$21
	.byte	$00
	.byte	$EF
	.byte	$05
	.byte	$10
	.byte	$22
	.byte	$23
	.byte	$24
	.byte	$24
	.byte	$25
	.byte	$22
	.byte	$23
	.byte	$24
	.byte	$24
	.byte	$25
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$26
	.byte	$27
	.byte	$28
	.byte	$29
	.byte	$2A
	.byte	$2B
	.byte	$2C
	.byte	$2D
	.byte	$2E
	.byte	$2F
	.byte	$30
	.byte	$31
	.byte	$32
	.byte	$33
	.byte	$00
	.byte	$EF
	.byte	$03
	.byte	$10
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$00
	.byte	$10
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$00
	.byte	$10
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$34
	.byte	$35
	.byte	$36
	.byte	$37
	.byte	$38
	.byte	$39
	.byte	$3A
	.byte	$3B
	.byte	$3C
	.byte	$3C
	.byte	$3D
	.byte	$3C
	.byte	$3E
	.byte	$15
	.byte	$00
	.byte	$EF
	.byte	$03
	.byte	$10
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$00
	.byte	$10
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$00
	.byte	$10
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$00
	.byte	$3F
	.byte	$40
	.byte	$41
	.byte	$42
	.byte	$43
	.byte	$44
	.byte	$22
	.byte	$45
	.byte	$46
	.byte	$22
	.byte	$47
	.byte	$48
	.byte	$49
	.byte	$00
	.byte	$EF
	.byte	$03
	.byte	$10
	.byte	$22
	.byte	$4A
	.byte	$02
	.byte	$02
	.byte	$4B
	.byte	$22
	.byte	$4A
	.byte	$02
	.byte	$02
	.byte	$4B
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$4C
	.byte	$4D
	.byte	$4E
	.byte	$4F
	.byte	$50
	.byte	$51
	.byte	$52
	.byte	$53
	.byte	$54
	.byte	$55
	.byte	$53
	.byte	$56
	.byte	$57
	.byte	$58
	.byte	$00
	.byte	$EF
	.byte	$03
	.byte	$10
	.byte	$59
	.byte	$12
	.byte	$EF
	.byte	$03
	.byte	$5A
	.byte	$12
	.byte	$EF
	.byte	$03
	.byte	$5B
	.byte	$15
	.byte	$00
	.byte	$5C
	.byte	$5D
	.byte	$5E
	.byte	$5F
	.byte	$60
	.byte	$61
	.byte	$62
	.byte	$63
	.byte	$64
	.byte	$65
	.byte	$66
	.byte	$64
	.byte	$67
	.byte	$68
	.byte	$00
	.byte	$EF
	.byte	$03
	.byte	$10
	.byte	$22
	.byte	$23
	.byte	$24
	.byte	$24
	.byte	$25
	.byte	$22
	.byte	$23
	.byte	$24
	.byte	$24
	.byte	$25
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$69
	.byte	$6A
	.byte	$6B
	.byte	$6C
	.byte	$6D
	.byte	$6E
	.byte	$6F
	.byte	$22
	.byte	$70
	.byte	$71
	.byte	$22
	.byte	$70
	.byte	$05
	.byte	$72
	.byte	$00
	.byte	$EF
	.byte	$03
	.byte	$10
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$00
	.byte	$10
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$00
	.byte	$10
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$73
	.byte	$74
	.byte	$75
	.byte	$76
	.byte	$77
	.byte	$78
	.byte	$79
	.byte	$7A
	.byte	$7B
	.byte	$7B
	.byte	$7C
	.byte	$7B
	.byte	$7D
	.byte	$15
	.byte	$00
	.byte	$EF
	.byte	$03
	.byte	$10
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$00
	.byte	$10
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$00
	.byte	$10
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$10
	.byte	$7E
	.byte	$7F
	.byte	$80
	.byte	$7F
	.byte	$7F
	.byte	$81
	.byte	$22
	.byte	$82
	.byte	$83
	.byte	$84
	.byte	$82
	.byte	$85
	.byte	$86
	.byte	$00
	.byte	$EF
	.byte	$03
	.byte	$10
	.byte	$22
	.byte	$4A
	.byte	$02
	.byte	$02
	.byte	$4B
	.byte	$22
	.byte	$4A
	.byte	$02
	.byte	$02
	.byte	$4B
	.byte	$22
	.byte	$15
	.byte	$00
	.byte	$87
	.byte	$88
	.byte	$89
	.byte	$8A
	.byte	$8B
	.byte	$8C
	.byte	$8D
	.byte	$22
	.byte	$4A
	.byte	$4B
	.byte	$22
	.byte	$4A
	.byte	$02
	.byte	$03
	.byte	$00
	.byte	$EF
	.byte	$03
	.byte	$10
	.byte	$59
	.byte	$12
	.byte	$EF
	.byte	$03
	.byte	$8E
	.byte	$12
	.byte	$EF
	.byte	$03
	.byte	$5B
	.byte	$15
	.byte	$00
	.byte	$8F
	.byte	$90
	.byte	$91
	.byte	$92
	.byte	$93
	.byte	$94
	.byte	$95
	.byte	$59
	.byte	$12
	.byte	$12
	.byte	$8E
	.byte	$12
	.byte	$96
	.byte	$15
	.byte	$00
	.byte	$EF
	.byte	$03
	.byte	$10
	.byte	$97
	.byte	$23
	.byte	$24
	.byte	$EF
	.byte	$06
	.byte	$25
	.byte	$97
	.byte	$15
	.byte	$00
	.byte	$98
	.byte	$99
	.byte	$9A
	.byte	$9B
	.byte	$9C
	.byte	$9D
	.byte	$9E
	.byte	$9F
	.byte	$A0
	.byte	$24
	.byte	$EF
	.byte	$03
	.byte	$A1
	.byte	$00
	.byte	$EF
	.byte	$03
	.byte	$A2
	.byte	$48
	.byte	$49
	.byte	$00
	.byte	$EF
	.byte	$06
	.byte	$A2
	.byte	$48
	.byte	$49
	.byte	$00
	.byte	$A3
	.byte	$A4
	.byte	$00
	.byte	$EF
	.byte	$02
	.byte	$A5
	.byte	$A6
	.byte	$A7
	.byte	$A8
	.byte	$00
	.byte	$EF
	.byte	$8A
	.byte	$A9
	.byte	$AA
	.byte	$AB
	.byte	$00
	.byte	$00
	.byte	$AC
	.byte	$AD
	.byte	$00
	.byte	$EF
	.byte	$03
	.byte	$AE
	.byte	$AF
	.byte	$00
	.byte	$B0
	.byte	$B1
	.byte	$00
	.byte	$B2
	.byte	$B3
	.byte	$B4
	.byte	$00
	.byte	$EF
	.byte	$0A
	.byte	$B5
	.byte	$B6
	.byte	$B7
	.byte	$B8
	.byte	$B9
	.byte	$BA
	.byte	$BB
	.byte	$BC
	.byte	$BD
	.byte	$BE
	.byte	$B0
	.byte	$BF
	.byte	$C0
	.byte	$C1
	.byte	$C2
	.byte	$C3
	.byte	$C4
	.byte	$C5
	.byte	$C6
	.byte	$C7
	.byte	$C8
	.byte	$C9
	.byte	$CA
	.byte	$CB
	.byte	$CC
	.byte	$00
	.byte	$EF
	.byte	$06
	.byte	$CD
	.byte	$CE
	.byte	$CF
	.byte	$D0
	.byte	$D1
	.byte	$D2
	.byte	$D3
	.byte	$D4
	.byte	$D5
	.byte	$D6
	.byte	$D7
	.byte	$D8
	.byte	$D9
	.byte	$DA
	.byte	$DB
	.byte	$DC
	.byte	$DD
	.byte	$DE
	.byte	$B0
	.byte	$DF
	.byte	$E0
	.byte	$E1
	.byte	$E2
	.byte	$E3
	.byte	$E4
	.byte	$E5
	.byte	$00
	.byte	$EF
	.byte	$05
	.byte	$E6
	.byte	$00
	.byte	$EF
	.byte	$09
	.byte	$E7
	.byte	$E8
	.byte	$00
	.byte	$EF
	.byte	$04
	.byte	$E9
	.byte	$00
	.byte	$EF
	.byte	$61
	.byte	$EA
	.byte	$EB
	.byte	$EC
	.byte	$ED
	.byte	$EE
	.byte	$ED
	.byte	$00
	.byte	$EF
	.byte	$41
	.byte	$40
	.byte	$50
	.byte	$EF
	.byte	$05
	.byte	$00
	.byte	$44
	.byte	$55
	.byte	$15
	.byte	$55
	.byte	$EF
	.byte	$03
	.byte	$11
	.byte	$44
	.byte	$55
	.byte	$EF
	.byte	$05
	.byte	$11
	.byte	$44
	.byte	$55
	.byte	$EF
	.byte	$05
	.byte	$11
	.byte	$04
	.byte	$01
	.byte	$00
	.byte	$05
	.byte	$01
	.byte	$05
	.byte	$01
	.byte	$00
	.byte	$80
	.byte	$AA
	.byte	$AA
	.byte	$A8
	.byte	$AA
	.byte	$AA
	.byte	$A0
	.byte	$20
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$EF
	.byte	$09
	.byte	$EF
	.byte	$00

.segment	"BSS"

.segment	"OAM"
_sprites:
	.res	256,$00
.segment	"BSS"
_collision:
	.res	496,$00
_gScratchPointer2:
	.res	2,$00
_gController1:
	.res	1,$00
_gPrevController1:
	.res	1,$00
_gPrevController1Change:
	.res	1,$00
_gFrameCounter:
	.res	1,$00
_gTmpX:
	.res	1,$00
_gX:
	.res	1,$00
_gY:
	.res	1,$00
_gXScroll:
	.res	4,$00
_gYScroll:
	.res	1,$00
_gYPrevScroll:
	.res	1,$00
_gYNametable:
	.res	1,$00
_gYPrevNametable:
	.res	1,$00
_numKeys:
	.res	1,$00
_devnull:
	.res	1,$00
_i:
	.res	2,$00
_j:
	.res	2,$00
_k:
	.res	1,$00
_gTmp:
	.res	1,$00
_gTmp2:
	.res	1,$00
_gTmp3:
	.res	1,$00
_gTmp4:
	.res	1,$00
_gTmp5:
	.res	1,$00
_gTmp6:
	.res	1,$00
_gTmp7:
	.res	1,$00
_gTmp8:
	.res	1,$00
_x1:
	.res	1,$00
_y1:
	.res	1,$00
_width1:
	.res	1,$00
_height1:
	.res	1,$00
_x2:
	.res	1,$00
_y2:
	.res	1,$00
_width2:
	.res	1,$00
_height2:
	.res	1,$00
_gJumping:
	.res	2,$00
_gBounceCounter:
	.res	2,$00
_gVelocity:
	.res	2,$00
_gVelocityDirection:
	.res	2,$00
_gSpeed:
	.res	2,$00
_gSpeedDirection:
	.res	2,$00
_gStage:
	.res	2,$00
_gCounter:
	.res	2,$00
_gHealth:
	.res	2,$00
_gIframes:
	.res	2,$00
_gSpriteTable:
	.res	162,$00
_numSprites:
	.res	1,$00
_gGameState:
	.res	2,$00
_gFrogAnimationState:
	.res	2,$00
_gTongueState:
	.res	2,$00
_gTongueCounter:
	.res	2,$00
_gFade:
	.res	2,$00
_gLives:
	.res	2,$00
_gDisplayLives:
	.res	2,$00
_gScratchPointer:
	.res	2,$00
_gVblankPrevious:
	.res	1,$00
_gPpuCtrlBase:
	.res	1,$00
_gTitleScreenColor:
	.res	1,$00
_gMusicOn:
	.res	1,$00
_gSoundEffectCounter:
	.res	1,$00
_gSoundEffect400C:
	.res	2,$00
_gSoundEffect400E:
	.res	2,$00
_gSoundEffectLength:
	.res	1,$00
_gCurrentSoundEffect:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ spawn_1_by_1_sprite (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_spawn_1_by_1_sprite: near

.segment	"CODE"

;
; gTmp = gSpriteTable.numSprites[i];
;
	lda     #<(_gSpriteTable+108)
	sta     ptr1
	lda     #>(_gSpriteTable+108)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sta     _gTmp
;
; sprites[j] = gTmp8;
;
	lda     #<(_sprites)
	clc
	adc     _j
	sta     ptr1
	lda     #>(_sprites)
	adc     _j+1
	sta     ptr1+1
	lda     _gTmp8
	ldy     #$00
	sta     (ptr1),y
;
; gTmp2 = spriteProperties[gSpriteTable.id[i]].pattern;
;
	lda     #<(_gSpriteTable)
	sta     ptr1
	lda     #>(_gSpriteTable)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	ldx     #$00
	lda     (ptr1),y
	jsr     mulax9
	sta     ptr1
	txa
	clc
	adc     #>(_spriteProperties)
	sta     ptr1+1
	ldy     #<(_spriteProperties)
	lda     (ptr1),y
	sta     _gTmp2
;
; sprites[j + 1] = gTmp2;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$01
	bcc     L41D8
	inx
	clc
L41D8:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp2
	ldy     #$00
	sta     (ptr1),y
;
; sprites[j + 2] = gSpriteTable.direction[i];
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$02
	bcc     L41D9
	inx
	clc
L41D9:	adc     #<(_sprites)
	sta     sreg
	txa
	adc     #>(_sprites)
	sta     sreg+1
	lda     #<(_gSpriteTable+90)
	sta     ptr1
	lda     #>(_gSpriteTable+90)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	ldy     #$00
	sta     (sreg),y
;
; if(sprites[j + 3] == 0) {
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3BCB
	inx
L3BCB:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	bne     L3BC8
;
; gTmp8 = gSpriteTable.startX[i];
;
	lda     #<(_gSpriteTable+18)
	sta     ptr1
	lda     #>(_gSpriteTable+18)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sta     _gTmp8
;
; sprites[j + 3] = gTmp8;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L41DA
	inx
	clc
L41DA:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp8
	ldy     #$00
	sta     (ptr1),y
;
; }
;
L3BC8:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ spawn_2_by_1_sprite (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_spawn_2_by_1_sprite: near

.segment	"CODE"

;
; gTmp = gSpriteTable.numSprites[i];
;
	lda     #<(_gSpriteTable+108)
	sta     ptr1
	lda     #>(_gSpriteTable+108)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sta     _gTmp
;
; sprites[j] = gTmp8;
;
	lda     #<(_sprites)
	clc
	adc     _j
	sta     ptr1
	lda     #>(_sprites)
	adc     _j+1
	sta     ptr1+1
	lda     _gTmp8
	ldy     #$00
	sta     (ptr1),y
;
; sprites[j + 4] = gTmp8;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$04
	bcc     L41DB
	inx
	clc
L41DB:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp8
	sta     (ptr1),y
;
; gTmp2 = spriteProperties[gSpriteTable.id[i]].pattern;
;
	lda     #<(_gSpriteTable)
	sta     ptr1
	lda     #>(_gSpriteTable)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	ldx     #$00
	lda     (ptr1),y
	jsr     mulax9
	sta     ptr1
	txa
	clc
	adc     #>(_spriteProperties)
	sta     ptr1+1
	ldy     #<(_spriteProperties)
	lda     (ptr1),y
	sta     _gTmp2
;
; sprites[j + 1] = gTmp2;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$01
	bcc     L41DC
	inx
	clc
L41DC:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp2
	ldy     #$00
	sta     (ptr1),y
;
; sprites[j + 5] = gTmp2 + 1;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$05
	bcc     L41DD
	inx
	clc
L41DD:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp2
	clc
	adc     #$01
	sta     (ptr1),y
;
; sprites[j + 2] = gSpriteTable.direction[i];
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$02
	bcc     L41DE
	inx
	clc
L41DE:	adc     #<(_sprites)
	sta     sreg
	txa
	adc     #>(_sprites)
	sta     sreg+1
	lda     #<(_gSpriteTable+90)
	sta     ptr1
	lda     #>(_gSpriteTable+90)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	ldy     #$00
	sta     (sreg),y
;
; sprites[j + 6] = gSpriteTable.direction[i];
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$06
	bcc     L41DF
	inx
	clc
L41DF:	adc     #<(_sprites)
	sta     sreg
	txa
	adc     #>(_sprites)
	sta     sreg+1
	lda     #<(_gSpriteTable+90)
	sta     ptr1
	lda     #>(_gSpriteTable+90)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	ldy     #$00
	sta     (sreg),y
;
; if(sprites[j + 3] == 0) {
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3C08
	inx
L3C08:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	bne     L3C05
;
; gTmp8 = gSpriteTable.startX[i];
;
	lda     #<(_gSpriteTable+18)
	sta     ptr1
	lda     #>(_gSpriteTable+18)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sta     _gTmp8
;
; sprites[j + 3] = gTmp8;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L41E0
	inx
	clc
L41E0:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp8
	ldy     #$00
	sta     (ptr1),y
;
; gTmp8 = gSpriteTable.startX[i] + 0x8;
;
	lda     #<(_gSpriteTable+18)
	sta     ptr1
	lda     #>(_gSpriteTable+18)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	clc
	adc     #$08
	sta     _gTmp8
;
; sprites[j + 7] = gTmp8;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$07
	bcc     L41E1
	inx
	clc
L41E1:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp8
	ldy     #$00
	sta     (ptr1),y
;
; }
;
L3C05:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ spawn_portal_sprite (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_spawn_portal_sprite: near

.segment	"CODE"

;
; if( numKeys == 0 )
;
	lda     _numKeys
	beq     L41F1
;
; }
;
	rts
;
; gTmp = gSpriteTable.numSprites[i];
;
L41F1:	lda     #<(_gSpriteTable+108)
	sta     ptr1
	lda     #>(_gSpriteTable+108)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sta     _gTmp
;
; sprites[j] = gTmp8;
;
	lda     #<(_sprites)
	clc
	adc     _j
	sta     ptr1
	lda     #>(_sprites)
	adc     _j+1
	sta     ptr1+1
	lda     _gTmp8
	ldy     #$00
	sta     (ptr1),y
;
; sprites[j + 4] = gTmp8;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$04
	bcc     L41E2
	inx
	clc
L41E2:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp8
	sta     (ptr1),y
;
; sprites[j + 8] = gTmp8 + 8;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$08
	bcc     L41E3
	inx
	clc
L41E3:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp8
	clc
	adc     #$08
	sta     (ptr1),y
;
; sprites[j + 12] = gTmp8 + 8;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$0C
	bcc     L41E4
	inx
	clc
L41E4:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp8
	clc
	adc     #$08
	sta     (ptr1),y
;
; gTmp2 = spriteProperties[gSpriteTable.id[i]].pattern;
;
	lda     #<(_gSpriteTable)
	sta     ptr1
	lda     #>(_gSpriteTable)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	ldx     #$00
	lda     (ptr1),y
	jsr     mulax9
	sta     ptr1
	txa
	clc
	adc     #>(_spriteProperties)
	sta     ptr1+1
	ldy     #<(_spriteProperties)
	lda     (ptr1),y
	sta     _gTmp2
;
; sprites[j + 1] = gTmp2;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$01
	bcc     L41E5
	inx
	clc
L41E5:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp2
	ldy     #$00
	sta     (ptr1),y
;
; sprites[j + 5] = gTmp2;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$05
	bcc     L41E6
	inx
	clc
L41E6:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp2
	sta     (ptr1),y
;
; sprites[j + 9] = gTmp2;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$09
	bcc     L41E7
	inx
	clc
L41E7:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp2
	sta     (ptr1),y
;
; sprites[j + 13] = gTmp2;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$0D
	bcc     L41E8
	inx
	clc
L41E8:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp2
	sta     (ptr1),y
;
; sprites[j + 2] = 0x00;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$02
	bcc     L41E9
	inx
	clc
L41E9:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 6] = 0x40;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$06
	bcc     L41EA
	inx
	clc
L41EA:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$40
	sta     (ptr1),y
;
; sprites[j + 10] = 0x80;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$0A
	bcc     L41EB
	inx
	clc
L41EB:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$80
	sta     (ptr1),y
;
; sprites[j + 14] = 0xC0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$0E
	bcc     L41EC
	inx
	clc
L41EC:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$C0
	sta     (ptr1),y
;
; gTmp8 = gSpriteTable.startX[i];
;
	lda     #<(_gSpriteTable+18)
	sta     ptr1
	lda     #>(_gSpriteTable+18)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sta     _gTmp8
;
; sprites[j + 3] = gTmp8;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L41ED
	inx
	clc
L41ED:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp8
	ldy     #$00
	sta     (ptr1),y
;
; sprites[j + 11] = gTmp8;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$0B
	bcc     L41EE
	inx
	clc
L41EE:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp8
	sta     (ptr1),y
;
; gTmp8 = gSpriteTable.startX[i] + 0x8;
;
	lda     #<(_gSpriteTable+18)
	sta     ptr1
	lda     #>(_gSpriteTable+18)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	clc
	adc     #$08
	sta     _gTmp8
;
; sprites[j + 7] = gTmp8;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$07
	bcc     L41EF
	inx
	clc
L41EF:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp8
	ldy     #$00
	sta     (ptr1),y
;
; sprites[j + 15] = gTmp8;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$0F
	bcc     L41F0
	inx
	clc
L41F0:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp8
	sta     (ptr1),y
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ despawn_1_sprite (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_despawn_1_sprite: near

.segment	"CODE"

;
; sprites[j] = 0;
;
	lda     #<(_sprites)
	clc
	adc     _j
	sta     ptr1
	lda     #>(_sprites)
	adc     _j+1
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
;
; sprites[j + 1] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$01
	bcc     L41F2
	inx
	clc
L41F2:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 2] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$02
	bcc     L41F3
	inx
	clc
L41F3:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 3] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L41F4
	inx
	clc
L41F4:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ despawn_2_sprite (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_despawn_2_sprite: near

.segment	"CODE"

;
; sprites[j] = 0;
;
	lda     #<(_sprites)
	clc
	adc     _j
	sta     ptr1
	lda     #>(_sprites)
	adc     _j+1
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
;
; sprites[j + 1] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$01
	bcc     L41F5
	inx
	clc
L41F5:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 2] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$02
	bcc     L41F6
	inx
	clc
L41F6:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 3] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L41F7
	inx
	clc
L41F7:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 4] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$04
	bcc     L41F8
	inx
	clc
L41F8:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 5] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$05
	bcc     L41F9
	inx
	clc
L41F9:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 6] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$06
	bcc     L41FA
	inx
	clc
L41FA:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 7] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$07
	bcc     L41FB
	inx
	clc
L41FB:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ despawn_portal_sprite (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_despawn_portal_sprite: near

.segment	"CODE"

;
; sprites[j] = 0;
;
	lda     #<(_sprites)
	clc
	adc     _j
	sta     ptr1
	lda     #>(_sprites)
	adc     _j+1
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
;
; sprites[j + 1] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$01
	bcc     L41FC
	inx
	clc
L41FC:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 2] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$02
	bcc     L41FD
	inx
	clc
L41FD:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 3] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L41FE
	inx
	clc
L41FE:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 4] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$04
	bcc     L41FF
	inx
	clc
L41FF:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 5] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$05
	bcc     L4200
	inx
	clc
L4200:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 6] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$06
	bcc     L4201
	inx
	clc
L4201:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 7] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$07
	bcc     L4202
	inx
	clc
L4202:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 8] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$08
	bcc     L4203
	inx
	clc
L4203:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 9] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$09
	bcc     L4204
	inx
	clc
L4204:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 10] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$0A
	bcc     L4205
	inx
	clc
L4205:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 11] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$0B
	bcc     L4206
	inx
	clc
L4206:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 12] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$0C
	bcc     L4207
	inx
	clc
L4207:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 13] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$0D
	bcc     L4208
	inx
	clc
L4208:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 14] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$0E
	bcc     L4209
	inx
	clc
L4209:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 15] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$0F
	bcc     L420A
	inx
	clc
L420A:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ invalid_ai_handler (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_invalid_ai_handler: near

.segment	"CODE"

;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ arrow_ai_handler (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_arrow_ai_handler: near

.segment	"CODE"

;
; if(sprites[j+1] != 0)
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$01
	bcc     L3D2F
	inx
L3D2F:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	bne     L4216
;
; }
;
	rts
;
; sprite_maintain_y_position();
;
L4216:	jsr     _sprite_maintain_y_position
;
; if(gSpriteTable.state[i] == 2 || gSpriteTable.state[i] == 1)
;
	lda     #<(_gSpriteTable+72)
	sta     ptr1
	lda     #>(_gSpriteTable+72)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	cmp     #$02
	beq     L4210
	lda     #<(_gSpriteTable+72)
	sta     ptr1
	lda     #>(_gSpriteTable+72)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	cmp     #$01
	jne     L3D31
;
; x1 = sprites[j + 3];
;
L4210:	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3D39
	inx
L3D39:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	sta     _x1
;
; y1 = sprites[j] + 4;
;
	lda     #<(_sprites)
	sta     ptr1
	lda     #>(_sprites)
	clc
	adc     _j+1
	sta     ptr1+1
	ldy     _j
	lda     (ptr1),y
	clc
	adc     #$04
	sta     _y1
;
; height1 = 2;
;
	lda     #$02
	sta     _height1
;
; width1 = 8; //Don't count the tip
;
	lda     #$08
	sta     _width1
;
; if(gSpriteTable.state[i] == 2 && is_background_collision())
;
	lda     #<(_gSpriteTable+72)
	sta     ptr1
	lda     #>(_gSpriteTable+72)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	cmp     #$02
	bne     L3D42
	jsr     _is_background_collision
	stx     tmp1
	ora     tmp1
	beq     L3D42
;
; gSpriteTable.state[i] = 3;
;
	lda     #<(_gSpriteTable+72)
	clc
	adc     _i
	sta     ptr1
	lda     #>(_gSpriteTable+72)
	adc     _i+1
	sta     ptr1+1
	lda     #$03
;
; else
;
	jmp     L4215
;
; if((gSpriteTable.direction[i] & 0x40) == 0x00)
;
L3D42:	lda     #<(_gSpriteTable+90)
	sta     ptr1
	lda     #>(_gSpriteTable+90)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	and     #$40
	bne     L3D4B
;
; sprites[j + 3] += ARROW_SPEED;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L420C
	inx
	clc
L420C:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	clc
	adc     #$03
	sta     (ptr1),y
;
; gTmp4 = sprites[j + 3];
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3D57
	inx
L3D57:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	sta     _gTmp4
;
; gTmp4 -= gSpriteTable.startX[i];
;
	lda     #<(_gSpriteTable+18)
	sta     ptr1
	lda     #>(_gSpriteTable+18)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	eor     #$FF
	sec
	adc     _gTmp4
	sta     _gTmp4
;
; if(gTmp4 > 8) {
;
	cmp     #$09
	bcs     L4217
;
; else if(gSpriteTable.state[i] == 0)
;
	rts
;
; gSpriteTable.state[i] = 2;
;
L4217:	lda     #<(_gSpriteTable+72)
	clc
	adc     _i
	sta     ptr1
	lda     #>(_gSpriteTable+72)
	adc     _i+1
	sta     ptr1+1
	lda     #$02
;
; else {
;
	jmp     L4215
;
; sprites[j + 3] -= ARROW_SPEED;
;
L3D4B:	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L420D
	inx
	clc
L420D:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sec
	sbc     #$03
	sta     (ptr1),y
;
; gTmp4 = gSpriteTable.startX[i];
;
	lda     #<(_gSpriteTable+18)
	sta     ptr1
	lda     #>(_gSpriteTable+18)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sta     _gTmp4
;
; gTmp4 -= sprites[j + 3];
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3D6B
	inx
L3D6B:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	eor     #$FF
	sec
	adc     _gTmp4
	sta     _gTmp4
;
; if(gTmp4 > 8) {
;
	cmp     #$09
	bcs     L4218
;
; }
;
	rts
;
; gSpriteTable.state[i] = 2;
;
L4218:	lda     #<(_gSpriteTable+72)
	clc
	adc     _i
	sta     ptr1
	lda     #>(_gSpriteTable+72)
	adc     _i+1
	sta     ptr1+1
	lda     #$02
	ldy     #$00
	sta     (ptr1),y
;
; else if(gSpriteTable.state[i] == 0)
;
	rts
L3D31:	lda     #<(_gSpriteTable+72)
	sta     ptr1
	lda     #>(_gSpriteTable+72)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	bne     L3D72
;
; if(sprites[j] >= sprites[0] && sprites[j] <= sprites[8])
;
	lda     #<(_sprites)
	sta     ptr1
	lda     #>(_sprites)
	clc
	adc     _j+1
	sta     ptr1+1
	ldy     _j
	lda     (ptr1),y
	cmp     _sprites
	bcc     L3D75
	lda     #<(_sprites)
	sta     ptr1
	lda     #>(_sprites)
	clc
	adc     _j+1
	sta     ptr1+1
	ldy     _j
	lda     (ptr1),y
	sec
	sbc     _sprites+8
	bcc     L4214
	bne     L3D75
;
; gSpriteTable.state[i] = 1;
;
L4214:	lda     #<(_gSpriteTable+72)
	clc
	adc     _i
	sta     ptr1
	lda     #>(_gSpriteTable+72)
	adc     _i+1
	sta     ptr1+1
	lda     #$01
	ldy     #$00
	sta     (ptr1),y
;
; else
;
L3D75:	rts
;
; gTmp4 = gSpriteTable.state[i];
;
L3D72:	lda     #<(_gSpriteTable+72)
	sta     ptr1
	lda     #>(_gSpriteTable+72)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sta     _gTmp4
;
; gSpriteTable.state[i] = gTmp4 + 1;
;
	lda     #<(_gSpriteTable+72)
	clc
	adc     _i
	sta     ptr1
	lda     #>(_gSpriteTable+72)
	adc     _i+1
	sta     ptr1+1
	lda     _gTmp4
	clc
	adc     #$01
	ldy     #$00
	sta     (ptr1),y
;
; if(gSpriteTable.state[i] > 120) {
;
	lda     #<(_gSpriteTable+72)
	sta     ptr1
	lda     #>(_gSpriteTable+72)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	cmp     #$79
	bcc     L3D88
;
; gSpriteTable.state[i] = 0;
;
	lda     #<(_gSpriteTable+72)
	clc
	adc     _i
	sta     ptr1
	lda     #>(_gSpriteTable+72)
	adc     _i+1
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
;
; gTmp4 = gSpriteTable.startX[i];
;
	lda     #<(_gSpriteTable+18)
	sta     ptr1
	lda     #>(_gSpriteTable+18)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sta     _gTmp4
;
; sprites[j + 3] = gTmp4;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L420E
	inx
	clc
L420E:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _gTmp4
L4215:	ldy     #$00
	sta     (ptr1),y
;
; }
;
L3D88:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ bird_ai_handler (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_bird_ai_handler: near

.segment	"CODE"

;
; if(sprites[j+3] != 0) {
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3D99
	inx
L3D99:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	bne     L4233
;
; }
;
	rts
;
; sprite_maintain_y_position();
;
L4233:	jsr     _sprite_maintain_y_position
;
; if( sprites[j] != sprites[0])
;
	lda     #<(_sprites)
	sta     ptr1
	lda     #>(_sprites)
	clc
	adc     _j+1
	sta     ptr1+1
	ldy     _j
	lda     (ptr1),y
	cmp     _sprites
	jeq     L3DD3
;
; if( sprites[j] < sprites[0])
;
	lda     #<(_sprites)
	sta     ptr1
	lda     #>(_sprites)
	clc
	adc     _j+1
	sta     ptr1+1
	ldy     _j
	lda     (ptr1),y
	cmp     _sprites
	jcs     L3D9F
;
; sprites[j] += 1;
;
	lda     #<(_sprites)
	clc
	adc     _j
	sta     ptr1
	lda     #>(_sprites)
	adc     _j+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	clc
	adc     #$01
	sta     (ptr1),y
;
; sprites[j+4] += 1;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$04
	bcc     L421D
	inx
	clc
L421D:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     (ptr1),y
	clc
	adc     #$01
	sta     (ptr1),y
;
; x1 = sprites[j + 3];
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3DAD
	inx
L3DAD:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	sta     _x1
;
; y1 = sprites[j] + 1;
;
	lda     #<(_sprites)
	sta     ptr1
	lda     #>(_sprites)
	clc
	adc     _j+1
	sta     ptr1+1
	ldy     _j
	lda     (ptr1),y
	clc
	adc     #$01
	sta     _y1
;
; height1 = 8;
;
	lda     #$08
	sta     _height1
;
; width1 = 16; //Don't count the tip
;
	lda     #$10
	sta     _width1
;
; if(is_background_collision()) {
;
	jsr     _is_background_collision
	stx     tmp1
	ora     tmp1
	jeq     L3DD3
;
; sprites[j] -= 1;
;
	lda     #<(_sprites)
	clc
	adc     _j
	sta     ptr1
	lda     #>(_sprites)
	adc     _j+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sec
	sbc     #$01
	sta     (ptr1),y
;
; sprites[j+4] -= 1;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$04
	bcc     L421E
	inx
	clc
L421E:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     (ptr1),y
	sec
	sbc     #$01
;
; else
;
	jmp     L421B
;
; sprites[j] -= 1;
;
L3D9F:	lda     #<(_sprites)
	clc
	adc     _j
	sta     ptr1
	lda     #>(_sprites)
	adc     _j+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sec
	sbc     #$01
	sta     (ptr1),y
;
; sprites[j+4] -= 1;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$04
	bcc     L421F
	inx
	clc
L421F:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     (ptr1),y
	sec
	sbc     #$01
	sta     (ptr1),y
;
; x1 = sprites[j + 3];
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3DCA
	inx
L3DCA:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	sta     _x1
;
; y1 = sprites[j] + 1;
;
	lda     #<(_sprites)
	sta     ptr1
	lda     #>(_sprites)
	clc
	adc     _j+1
	sta     ptr1+1
	ldy     _j
	lda     (ptr1),y
	clc
	adc     #$01
	sta     _y1
;
; height1 = 8;
;
	lda     #$08
	sta     _height1
;
; width1 = 16; //Don't count the tip
;
	lda     #$10
	sta     _width1
;
; if(is_background_collision()) {
;
	jsr     _is_background_collision
	stx     tmp1
	ora     tmp1
	beq     L3DD3
;
; sprites[j] += 1;
;
	lda     #<(_sprites)
	clc
	adc     _j
	sta     ptr1
	lda     #>(_sprites)
	adc     _j+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	clc
	adc     #$01
	sta     (ptr1),y
;
; sprites[j+4] += 1;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$04
	bcc     L4220
	inx
	clc
L4220:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     (ptr1),y
	clc
	adc     #$01
L421B:	sta     (ptr1),y
;
; if( sprites[j+3] != sprites[3])
;
L3DD3:	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3DDF
	inx
L3DDF:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	cmp     _sprites+3
	bne     L4234
;
; }
;
	rts
;
; if( sprites[j+3] < sprites[3])
;
L4234:	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3DE4
	inx
L3DE4:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	cmp     _sprites+3
	jcs     L3DE1
;
; sprites[j+3] += 1;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L4221
	inx
	clc
L4221:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	clc
	adc     #$01
	sta     (ptr1),y
;
; sprites[j+7] += 1;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$07
	bcc     L4222
	inx
	clc
L4222:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     (ptr1),y
	clc
	adc     #$01
	sta     (ptr1),y
;
; x1 = sprites[j + 3];
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3DF1
	inx
L3DF1:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	sta     _x1
;
; y1 = sprites[j] + 1;
;
	lda     #<(_sprites)
	sta     ptr1
	lda     #>(_sprites)
	clc
	adc     _j+1
	sta     ptr1+1
	ldy     _j
	lda     (ptr1),y
	clc
	adc     #$01
	sta     _y1
;
; height1 = 8;
;
	lda     #$08
	sta     _height1
;
; width1 = 16; //Don't count the tip
;
	lda     #$10
	sta     _width1
;
; if(is_background_collision()) {
;
	jsr     _is_background_collision
	stx     tmp1
	ora     tmp1
	beq     L3DFA
;
; sprites[j+3] -= 1;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L4223
	inx
	clc
L4223:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sec
	sbc     #$01
	sta     (ptr1),y
;
; sprites[j+7] -= 1;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$07
	bcc     L4224
	inx
	clc
L4224:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     (ptr1),y
	sec
	sbc     #$01
	sta     (ptr1),y
;
; sprites[j+1] = PATTERN_BIRD_1;
;
L3DFA:	lda     _j
	ldx     _j+1
	clc
	adc     #$01
	bcc     L4225
	inx
	clc
L4225:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$03
	ldy     #$00
	sta     (ptr1),y
;
; sprites[j+2] = 0x41;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$02
	bcc     L4226
	inx
	clc
L4226:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$41
	sta     (ptr1),y
;
; sprites[j+5] = PATTERN_BIRD_0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$05
	bcc     L4227
	inx
	clc
L4227:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$02
	sta     (ptr1),y
;
; sprites[j+6] = 0x41;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$06
	bcc     L4228
	inx
	clc
L4228:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$41
;
; else
;
	jmp     L4232
;
; sprites[j+3] -= 1;
;
L3DE1:	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L4229
	inx
	clc
L4229:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sec
	sbc     #$01
	sta     (ptr1),y
;
; sprites[j+7] -= 1;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$07
	bcc     L422A
	inx
	clc
L422A:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     (ptr1),y
	sec
	sbc     #$01
	sta     (ptr1),y
;
; x1 = sprites[j + 3];
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3E20
	inx
L3E20:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	sta     _x1
;
; y1 = sprites[j] + 1;
;
	lda     #<(_sprites)
	sta     ptr1
	lda     #>(_sprites)
	clc
	adc     _j+1
	sta     ptr1+1
	ldy     _j
	lda     (ptr1),y
	clc
	adc     #$01
	sta     _y1
;
; height1 = 8;
;
	lda     #$08
	sta     _height1
;
; width1 = 16; //Don't count the tip
;
	lda     #$10
	sta     _width1
;
; if(is_background_collision()) {
;
	jsr     _is_background_collision
	stx     tmp1
	ora     tmp1
	beq     L3E29
;
; sprites[j+3] += 1;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L422B
	inx
	clc
L422B:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	clc
	adc     #$01
	sta     (ptr1),y
;
; sprites[j+7] += 1;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$07
	bcc     L422C
	inx
	clc
L422C:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     (ptr1),y
	clc
	adc     #$01
	sta     (ptr1),y
;
; sprites[j+1] = PATTERN_BIRD_0;
;
L3E29:	lda     _j
	ldx     _j+1
	clc
	adc     #$01
	bcc     L422D
	inx
	clc
L422D:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$02
	ldy     #$00
	sta     (ptr1),y
;
; sprites[j+2] = 0x01;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$02
	bcc     L422E
	inx
	clc
L422E:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$01
	sta     (ptr1),y
;
; sprites[j+5] = PATTERN_BIRD_1;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$05
	bcc     L422F
	inx
	clc
L422F:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$03
	sta     (ptr1),y
;
; sprites[j+6] = 0x01;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$06
	bcc     L4230
	inx
	clc
L4230:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$01
L4232:	sta     (ptr1),y
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ item_ai_handler (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_item_ai_handler: near

.segment	"CODE"

;
; if(sprites[j+1] != 0)
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$01
	bcc     L3E47
	inx
L3E47:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	cmp     #$00
;
; sprite_maintain_y_position();
;
	jne     _sprite_maintain_y_position
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ invalid_collision_handler (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_invalid_collision_handler: near

.segment	"CODE"

;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ enemy_collision_handler (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_enemy_collision_handler: near

.segment	"CODE"

;
; if(gIframes == 0)
;
	lda     _gIframes
	ldx     _gIframes+1
	cpx     #$00
	bne     L3E4C
	cmp     #$00
;
; take_hit();
;
L3E4C:	jeq     _take_hit
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ mini_frog_collision_handler (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_mini_frog_collision_handler: near

.segment	"CODE"

;
; gSpriteTable.id[i] = INVALID_ID;
;
	lda     #<(_gSpriteTable)
	clc
	adc     _i
	sta     ptr1
	lda     #>(_gSpriteTable)
	adc     _i+1
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
;
; sprites[j] = 0;
;
	lda     #<(_sprites)
	clc
	adc     _j
	sta     ptr1
	lda     #>(_sprites)
	adc     _j+1
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 1] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$01
	bcc     L4235
	inx
	clc
L4235:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 2] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$02
	bcc     L4236
	inx
	clc
L4236:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 3] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L4237
	inx
	clc
L4237:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; if( gHealth < 8 )
;
	lda     _gHealth+1
	cmp     #$00
	bne     L3E63
	lda     _gHealth
	cmp     #$08
L3E63:	bcs     L3E61
;
; gHealth++;
;
	lda     _gHealth
	ldx     _gHealth+1
	clc
	adc     #$01
	bcc     L3E65
	inx
L3E65:	sta     _gHealth
	stx     _gHealth+1
;
; draw_health();
;
	jmp     _draw_health
;
; }
;
L3E61:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ portal_collision_handler (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_portal_collision_handler: near

.segment	"CODE"

;
; next_stage();
;
	jsr     _next_stage
;
; load_stage();
;
	jmp     _load_stage

.endproc

; ---------------------------------------------------------------
; void __near__ key_collision_handler (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_key_collision_handler: near

.segment	"CODE"

;
; gSpriteTable.id[i] = INVALID_ID;
;
	lda     #<(_gSpriteTable)
	clc
	adc     _i
	sta     ptr1
	lda     #>(_gSpriteTable)
	adc     _i+1
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
;
; sprites[j] = 0;
;
	lda     #<(_sprites)
	clc
	adc     _j
	sta     ptr1
	lda     #>(_sprites)
	adc     _j+1
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 1] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$01
	bcc     L4238
	inx
	clc
L4238:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 2] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$02
	bcc     L4239
	inx
	clc
L4239:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + 3] = 0;
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L423A
	inx
	clc
L423A:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; numKeys--;
;
	dec     _numKeys
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ PlaySoundEffects (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_PlaySoundEffects: near

.segment	"CODE"

;
; switch( gCurrentSoundEffect )
;
	lda     _gCurrentSoundEffect
;
; }
;
	beq     L3198
	cmp     #$01
	beq     L31A0
	jmp     L31A0
;
; gSoundEffect400C = tongueSound400C;
;
L3198:	lda     #>(_tongueSound400C)
	sta     _gSoundEffect400C+1
	lda     #<(_tongueSound400C)
	sta     _gSoundEffect400C
;
; gSoundEffect400E = tongueSound400E;
;
	lda     #>(_tongueSound400E)
	sta     _gSoundEffect400E+1
	lda     #<(_tongueSound400E)
	sta     _gSoundEffect400E
;
; gSoundEffectLength = TONGUE_SOUND_LENGTH;
;
	lda     #$0C
;
; break;
;
	jmp     L423E
;
; gSoundEffect400C = damageSound400C;
;
L31A0:	lda     #>(_damageSound400C)
	sta     _gSoundEffect400C+1
	lda     #<(_damageSound400C)
	sta     _gSoundEffect400C
;
; gSoundEffect400E = damageSound400E;
;
	lda     #>(_damageSound400E)
	sta     _gSoundEffect400E+1
	lda     #<(_damageSound400E)
	sta     _gSoundEffect400E
;
; gSoundEffectLength = DAMAGE_SOUND_LENGTH;
;
	lda     #$08
L423E:	sta     _gSoundEffectLength
;
; if( gSoundEffectCounter != 0xFF )
;
	lda     _gSoundEffectCounter
	cmp     #$FF
	beq     L31B6
;
; *((unsigned char*)0x400C) = gSoundEffect400C[gSoundEffectCounter];
;
	lda     _gSoundEffect400C
	ldx     _gSoundEffect400C+1
	ldy     _gSoundEffectCounter
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	sta     $400C
;
; *((unsigned char*)0x400E) = gSoundEffect400E[gSoundEffectCounter];
;
	lda     _gSoundEffect400E
	ldx     _gSoundEffect400E+1
	ldy     _gSoundEffectCounter
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	sta     $400E
;
; *((unsigned char*)0x400F) = 0;
;
	lda     #$00
	sta     $400F
;
; gSoundEffectCounter++;
;
	inc     _gSoundEffectCounter
;
; if(gSoundEffectCounter == gSoundEffectLength)
;
	lda     _gSoundEffectLength
	cmp     _gSoundEffectCounter
	bne     L31B6
;
; gSoundEffectCounter = 0xFF;
;
	lda     #$FF
	sta     _gSoundEffectCounter
;
; }
;
L31B6:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ vblank (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_vblank: near

.segment	"CODE"

;
; if( gMusicOn == 1 )
;
	lda     _gMusicOn
	cmp     #$01
	bne     L4240
;
; pMusicPlay();
;
	jsr     _pMusicPlay
;
; PlaySoundEffects();
;
	jsr     _PlaySoundEffects
;
; gVblankPrevious = gVblank;
;
L4240:	lda     _gVblank
	sta     _gVblankPrevious
;
; while(gVblank == gVblankPrevious);
;
L4241:	lda     _gVblankPrevious
	cmp     _gVblank
	beq     L4241
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ vblank_counter (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_vblank_counter: near

.segment	"CODE"

;
; for( i = 0; i < gCounter; i++ )
;
	lda     #$00
	sta     _i
	sta     _i+1
L3189:	lda     _i
	cmp     _gCounter
	lda     _i+1
	sbc     _gCounter+1
	bcs     L318A
;
; vblank();
;
	jsr     _vblank
;
; for( i = 0; i < gCounter; i++ )
;
	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L3191
	inx
L3191:	sta     _i
	stx     _i+1
	jmp     L3189
;
; }
;
L318A:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ ppuinit (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ppuinit: near

.segment	"CODE"

;
; PPU_CTRL = 0x84;
;
	lda     #$84
	sta     $2000
;
; PPU_MASK = 0x0E;
;
	lda     #$0E
	sta     $2001
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ ppudisable (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ppudisable: near

.segment	"CODE"

;
; PPU_CTRL = 0x80;
;
	lda     #$80
	sta     $2000
;
; PPU_MASK = 0x00;
;
	lda     #$00
	sta     $2001
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ apuinit (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_apuinit: near

.segment	"CODE"

;
; *((unsigned char*)0x4015) = 0x0F;
;
	lda     #$0F
	sta     $4015
;
; *((unsigned char*)0x4000) = 0x30;
;
	lda     #$30
	sta     $4000
;
; *((unsigned char*)0x4001) = 0x08;
;
	lda     #$08
	sta     $4001
;
; *((unsigned char*)0x4002) = 0x00;
;
	lda     #$00
	sta     $4002
;
; *((unsigned char*)0x4003) = 0x00;
;
	sta     $4003
;
; *((unsigned char*)0x4004) = 0x30;
;
	lda     #$30
	sta     $4004
;
; *((unsigned char*)0x4005) = 0x08;
;
	lda     #$08
	sta     $4005
;
; *((unsigned char*)0x4006) = 0x00;
;
	lda     #$00
	sta     $4006
;
; *((unsigned char*)0x4007) = 0x00;
;
	sta     $4007
;
; *((unsigned char*)0x4008) = 0x80;
;
	lda     #$80
	sta     $4008
;
; *((unsigned char*)0x4009) = 0x00;
;
	lda     #$00
	sta     $4009
;
; *((unsigned char*)0x400A) = 0x00;
;
	sta     $400A
;
; *((unsigned char*)0x400B) = 0x00;
;
	sta     $400B
;
; *((unsigned char*)0x400C) = 0x30;
;
	lda     #$30
	sta     $400C
;
; *((unsigned char*)0x400D) = 0x00;
;
	lda     #$00
	sta     $400D
;
; *((unsigned char*)0x400E) = 0x00;
;
	sta     $400E
;
; *((unsigned char*)0x400F) = 0x00;
;
	sta     $400F
;
; *((unsigned char*)0x4010) = 0x00;
;
	sta     $4010
;
; *((unsigned char*)0x4011) = 0x00;
;
	sta     $4011
;
; *((unsigned char*)0x4012) = 0x00;
;
	sta     $4012
;
; *((unsigned char*)0x4013) = 0x00;
;
	sta     $4013
;
; *((unsigned char*)0x4014) = 0x00;
;
	sta     $4014
;
; *((unsigned char*)0x4015) = 0x0F;
;
	lda     #$0F
	sta     $4015
;
; *((unsigned char*)0x4016) = 0x00;
;
	lda     #$00
	sta     $4016
;
; *((unsigned char*)0x4017) = 0x40;
;
	lda     #$40
	sta     $4017
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ set_scroll (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_set_scroll: near

.segment	"CODE"

;
; devnull = *((unsigned char*)0x2002);
;
	lda     $2002
	sta     _devnull
;
; *((unsigned char*)0x2005) = gXScroll;
;
	lda     _gXScroll
	sta     $2005
;
; *((unsigned char*)0x2005) = gYScroll;
;
	lda     _gYScroll
	sta     $2005
;
; gYPrevScroll = gYScroll;
;
	lda     _gYScroll
	sta     _gYPrevScroll
;
; gYPrevNametable = gYNametable;
;
	lda     _gYNametable
	sta     _gYPrevNametable
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ loadCollisionFromNametables (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_loadCollisionFromNametables: near

.segment	"CODE"

;
; PPU_ADDRESS = 0x20; // address of nametable #0
;
	lda     #$20
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	lda     #$00
	sta     $2006
;
; i = *((unsigned char*)0x2007);
;
	sta     _i+1
	lda     $2007
	sta     _i
;
; for(i = 0 ; i < 240 ;) {
;
	lda     #$00
	sta     _i
	sta     _i+1
L322C:	lda     _i+1
	cmp     #$00
	bne     L3233
	lda     _i
	cmp     #$F0
L3233:	bcs     L322D
;
; gTmp4 = *((unsigned char*)0x2007);
;
	lda     $2007
	sta     _gTmp4
;
; collision[i] =  (gTmp4 != PATTERN_BLANK_0) ? 0x01 : 0x00;
;
	lda     #<(_collision)
	clc
	adc     _i
	sta     ptr1
	lda     #>(_collision)
	adc     _i+1
	sta     ptr1+1
	lda     _gTmp4
	beq     L4244
	lda     #$01
L4244:	ldy     #$00
	sta     (ptr1),y
;
; j = *((unsigned char*)0x2007);
;
	sty     _j+1
	lda     $2007
	sta     _j
;
; i++;
;
	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L3243
	inx
L3243:	sta     _i
	stx     _i+1
;
; if(i % 16 == 0) {
;
	lda     _i
	and     #$0F
	bne     L322C
;
; for(j = 0; j < 32 ; j++) {
;
	sta     _j
	sta     _j+1
L3247:	lda     _j+1
	cmp     #$00
	bne     L324E
	lda     _j
	cmp     #$20
L324E:	bcs     L322C
;
; gTmp4 = *((unsigned char*)0x2007);
;
	lda     $2007
	sta     _gTmp4
;
; for(j = 0; j < 32 ; j++) {
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$01
	bcc     L3250
	inx
L3250:	sta     _j
	stx     _j+1
	jmp     L3247
;
; PPU_ADDRESS = 0x28; // address of nametable #2
;
L322D:	lda     #$28
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	lda     #$00
	sta     $2006
;
; i = *((unsigned char*)0x2007);
;
	sta     _i+1
	lda     $2007
	sta     _i
;
; for(i = 0 ; i < 240 ;) {
;
	lda     #$00
	sta     _i
	sta     _i+1
L325D:	lda     _i+1
	cmp     #$00
	bne     L3264
	lda     _i
	cmp     #$F0
L3264:	bcs     L325E
;
; gTmp4 = *((unsigned char*)0x2007);
;
	lda     $2007
	sta     _gTmp4
;
; collision[i + 240] =  (gTmp4 != PATTERN_BLANK_0) ? 0x01 : 0x00;
;
	lda     _i
	ldx     _i+1
	clc
	adc     #$F0
	bcc     L4242
	inx
	clc
L4242:	adc     #<(_collision)
	sta     ptr1
	txa
	adc     #>(_collision)
	sta     ptr1+1
	lda     _gTmp4
	beq     L4246
	lda     #$01
L4246:	ldy     #$00
	sta     (ptr1),y
;
; j = *((unsigned char*)0x2007);
;
	sty     _j+1
	lda     $2007
	sta     _j
;
; i++;
;
	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L3275
	inx
L3275:	sta     _i
	stx     _i+1
;
; if(i % 16 == 0) {
;
	lda     _i
	and     #$0F
	bne     L325D
;
; for(j = 0; j < 32 ; j++) {
;
	sta     _j
	sta     _j+1
L3279:	lda     _j+1
	cmp     #$00
	bne     L3280
	lda     _j
	cmp     #$20
L3280:	bcs     L325D
;
; gTmp4 = *((unsigned char*)0x2007);
;
	lda     $2007
	sta     _gTmp4
;
; for(j = 0; j < 32 ; j++) {
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$01
	bcc     L3282
	inx
L3282:	sta     _j
	stx     _j+1
	jmp     L3279
;
; for(i = 0; i < 16; i++)
;
L325E:	lda     #$00
	sta     _i
	sta     _i+1
L3286:	lda     _i+1
	cmp     #$00
	bne     L328D
	lda     _i
	cmp     #$10
L328D:	bcs     L3287
;
; collision[480 + i] = 0;
;
	lda     _i
	ldx     _i+1
	clc
	adc     #$E0
	bcc     L3292
	inx
L3292:	inx
	clc
	adc     #<(_collision)
	sta     ptr1
	txa
	adc     #>(_collision)
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
;
; for(i = 0; i < 16; i++)
;
	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L328F
	inx
L328F:	sta     _i
	stx     _i+1
	jmp     L3286
;
; }
;
L3287:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ ClearSprites (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ClearSprites: near

.segment	"CODE"

;
; for( i = 0; i < 256; i++ )
;
	lda     #$00
	sta     _i
	sta     _i+1
L3295:	ldx     _i+1
	cpx     #$01
	bcs     L3296
;
; sprites[i] = 0x00;
;
	lda     #<(_sprites)
	clc
	adc     _i
	sta     ptr1
	lda     #>(_sprites)
	adc     _i+1
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
;
; for( i = 0; i < 256; i++ )
;
	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L329D
	inx
L329D:	sta     _i
	stx     _i+1
	jmp     L3295
;
; gScratchPointer2 = (unsigned char*)sprites;
;
L3296:	lda     #>(_sprites)
	sta     _gScratchPointer2+1
	lda     #<(_sprites)
	sta     _gScratchPointer2
;
; for(gTmp2 = 0; gTmp2 < (MAX_NUM_SPRITES * SPRITES_T_MEMBER_COUNT); gTmp2++)
;
	lda     #$00
	sta     _gTmp2
L4247:	lda     _gTmp2
	cmp     #$A2
	bcs     L32A4
;
; gScratchPointer2 = 0;
;
	ldx     #$00
	txa
	sta     _gScratchPointer2
	sta     _gScratchPointer2+1
;
; gScratchPointer2++;
;
	clc
	adc     #$01
	bcc     L32AF
	inx
L32AF:	sta     _gScratchPointer2
	stx     _gScratchPointer2+1
;
; for(gTmp2 = 0; gTmp2 < (MAX_NUM_SPRITES * SPRITES_T_MEMBER_COUNT); gTmp2++)
;
	inc     _gTmp2
	jmp     L4247
;
; }
;
L32A4:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ LoadSprites (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LoadSprites: near

.segment	"CODE"

;
; numKeys = 0;
;
	lda     #$00
	sta     _numKeys
;
; for(gTmp2 = 0; gTmp2 < numSprites; gTmp2++)
;
	sta     _gTmp2
L4248:	lda     _gTmp2
	cmp     _numSprites
	bcc     L424A
;
; }
;
	rts
;
; gTmp = *gScratchPointer2++;
;
L424A:	lda     _gScratchPointer2
	ldx     _gScratchPointer2+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L32BD
	inx
L32BD:	sta     _gScratchPointer2
	stx     _gScratchPointer2+1
	ldy     #$00
	lda     (regsave),y
	sta     _gTmp
;
; gSpriteTable.id[gTmp2] =             gTmp;
;
	ldy     _gTmp2
	lda     _gTmp
	sta     _gSpriteTable,y
;
; gTmp = *gScratchPointer2++;
;
	lda     _gScratchPointer2
	ldx     _gScratchPointer2+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L32C4
	inx
L32C4:	sta     _gScratchPointer2
	stx     _gScratchPointer2+1
	ldy     #$00
	lda     (regsave),y
	sta     _gTmp
;
; gSpriteTable.startX[gTmp2] =         gTmp;
;
	ldy     _gTmp2
	lda     _gTmp
	sta     _gSpriteTable+18,y
;
; gTmp = *gScratchPointer2++;
;
	lda     _gScratchPointer2
	ldx     _gScratchPointer2+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L32CB
	inx
L32CB:	sta     _gScratchPointer2
	stx     _gScratchPointer2+1
	ldy     #$00
	lda     (regsave),y
	sta     _gTmp
;
; gSpriteTable.startY[gTmp2] =         gTmp;
;
	ldy     _gTmp2
	lda     _gTmp
	sta     _gSpriteTable+36,y
;
; gTmp = *gScratchPointer2++;
;
	lda     _gScratchPointer2
	ldx     _gScratchPointer2+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L32D2
	inx
L32D2:	sta     _gScratchPointer2
	stx     _gScratchPointer2+1
	ldy     #$00
	lda     (regsave),y
	sta     _gTmp
;
; gSpriteTable.startNametable[gTmp2] = gTmp;
;
	ldy     _gTmp2
	lda     _gTmp
	sta     _gSpriteTable+54,y
;
; gTmp = *gScratchPointer2++;
;
	lda     _gScratchPointer2
	ldx     _gScratchPointer2+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L32D9
	inx
L32D9:	sta     _gScratchPointer2
	stx     _gScratchPointer2+1
	ldy     #$00
	lda     (regsave),y
	sta     _gTmp
;
; gSpriteTable.state[gTmp2] =          gTmp;
;
	ldy     _gTmp2
	lda     _gTmp
	sta     _gSpriteTable+72,y
;
; gTmp = *gScratchPointer2++;
;
	lda     _gScratchPointer2
	ldx     _gScratchPointer2+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L32E0
	inx
L32E0:	sta     _gScratchPointer2
	stx     _gScratchPointer2+1
	ldy     #$00
	lda     (regsave),y
	sta     _gTmp
;
; gSpriteTable.direction[gTmp2] =      gTmp;
;
	ldy     _gTmp2
	lda     _gTmp
	sta     _gSpriteTable+90,y
;
; gTmp = *gScratchPointer2++;
;
	lda     _gScratchPointer2
	ldx     _gScratchPointer2+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L32E7
	inx
L32E7:	sta     _gScratchPointer2
	stx     _gScratchPointer2+1
	ldy     #$00
	lda     (regsave),y
	sta     _gTmp
;
; gSpriteTable.numSprites[gTmp2] =     gTmp;
;
	ldy     _gTmp2
	lda     _gTmp
	sta     _gSpriteTable+108,y
;
; gTmp = *gScratchPointer2++;
;
	lda     _gScratchPointer2
	ldx     _gScratchPointer2+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L32EE
	inx
L32EE:	sta     _gScratchPointer2
	stx     _gScratchPointer2+1
	ldy     #$00
	lda     (regsave),y
	sta     _gTmp
;
; gSpriteTable.doesTongueKill[gTmp2] = gTmp;
;
	ldy     _gTmp2
	lda     _gTmp
	sta     _gSpriteTable+126,y
;
; gTmp = *gScratchPointer2++;
;
	lda     _gScratchPointer2
	ldx     _gScratchPointer2+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L32F5
	inx
L32F5:	sta     _gScratchPointer2
	stx     _gScratchPointer2+1
	ldy     #$00
	lda     (regsave),y
	sta     _gTmp
;
; gSpriteTable.spriteOffset[gTmp2] =    gTmp;
;
	ldy     _gTmp2
	lda     _gTmp
	sta     _gSpriteTable+144,y
;
; if(gSpriteTable.id[gTmp2] == KEY_ID) {
;
	ldy     _gTmp2
	lda     _gSpriteTable,y
	cmp     #$05
	bne     L4249
;
; numKeys++;
;
	inc     _numKeys
;
; for(gTmp2 = 0; gTmp2 < numSprites; gTmp2++)
;
L4249:	inc     _gTmp2
	jmp     L4248

.endproc

; ---------------------------------------------------------------
; void __near__ palettes (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_palettes: near

.segment	"CODE"

;
; SET_COLOR(SPRITE0_1, DARK_GREEN);
;
	lda     #$3F
	sta     $2006
	lda     #$11
	sta     $2006
	lda     #$09
	sta     $2007
;
; SET_COLOR(SPRITE0_2, GREEN);
;
	lda     #$3F
	sta     $2006
	lda     #$12
	sta     $2006
	lda     #$19
	sta     $2007
;
; SET_COLOR(SPRITE0_3, WHITE);
;
	lda     #$3F
	sta     $2006
	lda     #$13
	sta     $2006
	lda     #$30
	sta     $2007
;
; SET_COLOR(SPRITE1_1, GRAY_BLUE);
;
	lda     #$3F
	sta     $2006
	lda     #$15
	sta     $2006
	lda     #$11
	sta     $2007
;
; SET_COLOR(SPRITE1_2, DARK_BLUE);
;
	lda     #$3F
	sta     $2006
	lda     #$16
	sta     $2006
	lda     #$02
	sta     $2007
;
; SET_COLOR(SPRITE1_3, LIGHT_ORANGE);
;
	lda     #$3F
	sta     $2006
	lda     #$17
	sta     $2006
	lda     #$27
	sta     $2007
;
; SET_COLOR(SPRITE2_1, DARK_RED);
;
	lda     #$3F
	sta     $2006
	lda     #$19
	sta     $2006
	lda     #$06
	sta     $2007
;
; SET_COLOR(SPRITE2_2, RED);
;
	lda     #$3F
	sta     $2006
	lda     #$1A
	sta     $2006
	lda     #$16
	sta     $2007
;
; SET_COLOR(SPRITE2_3, WHITE);
;
	lda     #$3F
	sta     $2006
	lda     #$1B
	sta     $2006
	lda     #$30
	sta     $2007
;
; SET_COLOR(SPRITE3_1, RED);
;
	lda     #$3F
	sta     $2006
	lda     #$1D
	sta     $2006
	lda     #$16
	sta     $2007
;
; SET_COLOR(SPRITE3_2, WHITE);
;
	lda     #$3F
	sta     $2006
	lda     #$1E
	sta     $2006
	lda     #$30
	sta     $2007
;
; SET_COLOR(SPRITE3_3, WHITE);
;
	lda     #$3F
	sta     $2006
	lda     #$1F
	sta     $2006
	lda     #$30
	sta     $2007
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ load_palette (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_load_palette: near

.segment	"CODE"

;
; SET_COLOR(BACKGROUND0_0, gScratchPointer[0]);
;
	lda     #$3F
	sta     $2006
	lda     #$00
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	ldy     #$00
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND1_0, gScratchPointer[4]);
;
	lda     #$3F
	sta     $2006
	lda     #$04
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	ldy     #$04
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND2_0, gScratchPointer[7]);
;
	lda     #$3F
	sta     $2006
	lda     #$08
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	ldy     #$07
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND3_0, gScratchPointer[10]);
;
	lda     #$3F
	sta     $2006
	lda     #$0C
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	ldy     #$0A
	lda     (ptr1),y
	sta     $2007
;
; if( gFade > 0 )
;
	lda     _gFade
	ora     _gFade+1
	beq     L424E
;
; SET_COLOR(BACKGROUND0_1, gScratchPointer[0]);
;
	lda     #$3F
	sta     $2006
	lda     #$01
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	ldy     #$00
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND1_1, gScratchPointer[0]);
;
	lda     #$3F
	sta     $2006
	lda     #$05
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND2_1, gScratchPointer[0]);
;
	lda     #$3F
	sta     $2006
	lda     #$09
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND3_1, gScratchPointer[0]);
;
	lda     #$3F
	sta     $2006
	lda     #$0D
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
;
; else
;
	jmp     L4251
;
; SET_COLOR(BACKGROUND0_1, gScratchPointer[1 ]);
;
L424E:	lda     #$3F
	sta     $2006
	lda     #$01
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND1_1, gScratchPointer[4 ]);
;
	lda     #$3F
	sta     $2006
	lda     #$05
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	ldy     #$04
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND2_1, gScratchPointer[7 ]);
;
	lda     #$3F
	sta     $2006
	lda     #$09
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	ldy     #$07
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND3_1, gScratchPointer[10]);
;
	lda     #$3F
	sta     $2006
	lda     #$0D
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	ldy     #$0A
L4251:	lda     (ptr1),y
	sta     $2007
;
; if( gFade > 1 )
;
	lda     _gFade
	cmp     #$02
	lda     _gFade+1
	sbc     #$00
	bcc     L424F
;
; SET_COLOR(BACKGROUND0_2, gScratchPointer[0]);
;
	lda     #$3F
	sta     $2006
	lda     #$02
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	ldy     #$00
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND1_2, gScratchPointer[0]);
;
	lda     #$3F
	sta     $2006
	lda     #$06
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND2_2, gScratchPointer[0]);
;
	lda     #$3F
	sta     $2006
	lda     #$0A
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND3_2, gScratchPointer[0]);
;
	lda     #$3F
	sta     $2006
	lda     #$0E
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
;
; else
;
	jmp     L4252
;
; SET_COLOR(BACKGROUND0_2, gScratchPointer[2  - gFade]);
;
L424F:	lda     #$3F
	sta     $2006
	lda     #$02
	sta     $2006
	sec
	sbc     _gFade
	pha
	lda     #$00
	sbc     _gFade+1
	tax
	pla
	clc
	adc     _gScratchPointer
	sta     ptr1
	txa
	adc     _gScratchPointer+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND1_2, gScratchPointer[5  - gFade]);
;
	lda     #$3F
	sta     $2006
	lda     #$06
	sta     $2006
	lda     #$05
	sec
	sbc     _gFade
	pha
	tya
	sbc     _gFade+1
	tax
	pla
	clc
	adc     _gScratchPointer
	sta     ptr1
	txa
	adc     _gScratchPointer+1
	sta     ptr1+1
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND2_2, gScratchPointer[8  - gFade]);
;
	lda     #$3F
	sta     $2006
	lda     #$0A
	sta     $2006
	lda     #$08
	sec
	sbc     _gFade
	pha
	tya
	sbc     _gFade+1
	tax
	pla
	clc
	adc     _gScratchPointer
	sta     ptr1
	txa
	adc     _gScratchPointer+1
	sta     ptr1+1
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND3_2, gScratchPointer[11 - gFade]);
;
	lda     #$3F
	sta     $2006
	lda     #$0E
	sta     $2006
	lda     #$0B
	sec
	sbc     _gFade
	pha
	tya
	sbc     _gFade+1
	tax
	pla
	clc
	adc     _gScratchPointer
	sta     ptr1
	txa
	adc     _gScratchPointer+1
	sta     ptr1+1
L4252:	lda     (ptr1),y
	sta     $2007
;
; if( gFade > 2 )
;
	lda     _gFade
	cmp     #$03
	lda     _gFade+1
	sbc     #$00
	bcc     L4250
;
; SET_COLOR(BACKGROUND0_3, gScratchPointer[0]);
;
	lda     #$3F
	sta     $2006
	lda     #$03
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND1_3, gScratchPointer[0]);
;
	lda     #$3F
	sta     $2006
	lda     #$07
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND2_3, gScratchPointer[0]);
;
	lda     #$3F
	sta     $2006
	lda     #$0B
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND3_3, gScratchPointer[0]);
;
	lda     #$3F
	sta     $2006
	lda     #$0F
	sta     $2006
	lda     _gScratchPointer+1
	sta     ptr1+1
	lda     _gScratchPointer
	sta     ptr1
;
; else
;
	jmp     L4253
;
; SET_COLOR(BACKGROUND0_3, gScratchPointer[3  - gFade]);
;
L4250:	lda     #$3F
	sta     $2006
	lda     #$03
	sta     $2006
	sec
	sbc     _gFade
	pha
	tya
	sbc     _gFade+1
	tax
	pla
	clc
	adc     _gScratchPointer
	sta     ptr1
	txa
	adc     _gScratchPointer+1
	sta     ptr1+1
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND1_3, gScratchPointer[6  - gFade]);
;
	lda     #$3F
	sta     $2006
	lda     #$07
	sta     $2006
	lda     #$06
	sec
	sbc     _gFade
	pha
	tya
	sbc     _gFade+1
	tax
	pla
	clc
	adc     _gScratchPointer
	sta     ptr1
	txa
	adc     _gScratchPointer+1
	sta     ptr1+1
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND2_3, gScratchPointer[9  - gFade]);
;
	lda     #$3F
	sta     $2006
	lda     #$0B
	sta     $2006
	lda     #$09
	sec
	sbc     _gFade
	pha
	tya
	sbc     _gFade+1
	tax
	pla
	clc
	adc     _gScratchPointer
	sta     ptr1
	txa
	adc     _gScratchPointer+1
	sta     ptr1+1
	lda     (ptr1),y
	sta     $2007
;
; SET_COLOR(BACKGROUND3_3, gScratchPointer[12 - gFade]);
;
	lda     #$3F
	sta     $2006
	lda     #$0F
	sta     $2006
	lda     #$0C
	sec
	sbc     _gFade
	pha
	tya
	sbc     _gFade+1
	tax
	pla
	clc
	adc     _gScratchPointer
	sta     ptr1
	txa
	adc     _gScratchPointer+1
	sta     ptr1+1
L4253:	lda     (ptr1),y
	sta     $2007
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ fade_out (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fade_out: near

.segment	"CODE"

;
; PPU_MASK = 0x0E;
;
	lda     #$0E
	sta     $2001
;
; set_scroll();
;
	jsr     _set_scroll
;
; gCounter = 20;
;
	ldx     #$00
	lda     #$14
	sta     _gCounter
	stx     _gCounter+1
;
; vblank_counter();
;
	jsr     _vblank_counter
;
; gFade = 1;
;
	ldx     #$00
	lda     #$01
	sta     _gFade
	stx     _gFade+1
;
; load_palette();
;
	jsr     _load_palette
;
; PPU_CTRL = gPpuCtrlBase + gYNametable;
;
	lda     _gPpuCtrlBase
	clc
	adc     _gYNametable
	sta     $2000
;
; set_scroll();
;
	jsr     _set_scroll
;
; gCounter = 20;
;
	ldx     #$00
	lda     #$14
	sta     _gCounter
	stx     _gCounter+1
;
; vblank_counter();
;
	jsr     _vblank_counter
;
; gFade = 2;
;
	ldx     #$00
	lda     #$02
	sta     _gFade
	stx     _gFade+1
;
; load_palette();
;
	jsr     _load_palette
;
; PPU_CTRL = gPpuCtrlBase + gYNametable;
;
	lda     _gPpuCtrlBase
	clc
	adc     _gYNametable
	sta     $2000
;
; set_scroll();
;
	jsr     _set_scroll
;
; gCounter = 20;
;
	ldx     #$00
	lda     #$14
	sta     _gCounter
	stx     _gCounter+1
;
; vblank_counter();
;
	jsr     _vblank_counter
;
; gFade = 3;
;
	ldx     #$00
	lda     #$03
	sta     _gFade
	stx     _gFade+1
;
; load_palette();
;
	jsr     _load_palette
;
; PPU_CTRL = gPpuCtrlBase + gYNametable;
;
	lda     _gPpuCtrlBase
	clc
	adc     _gYNametable
	sta     $2000
;
; set_scroll();
;
	jsr     _set_scroll
;
; gCounter = 20;
;
	ldx     #$00
	lda     #$14
	sta     _gCounter
	stx     _gCounter+1
;
; vblank_counter();
;
	jsr     _vblank_counter
;
; PPU_CTRL = 0x80;
;
	lda     #$80
	sta     $2000
;
; PPU_MASK = 0x00;
;
	lda     #$00
	sta     $2001
;
; set_scroll();
;
	jmp     _set_scroll

.endproc

; ---------------------------------------------------------------
; void __near__ fade_in (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fade_in: near

.segment	"CODE"

;
; gFade = 2;
;
	ldx     #$00
	lda     #$02
	sta     _gFade
	stx     _gFade+1
;
; load_palette();
;
	jsr     _load_palette
;
; PPU_CTRL = gPpuCtrlBase + gYNametable;
;
	lda     _gPpuCtrlBase
	clc
	adc     _gYNametable
	sta     $2000
;
; PPU_MASK = 0x0E;
;
	lda     #$0E
	sta     $2001
;
; set_scroll();
;
	jsr     _set_scroll
;
; gCounter = 20;
;
	ldx     #$00
	lda     #$14
	sta     _gCounter
	stx     _gCounter+1
;
; vblank_counter();
;
	jsr     _vblank_counter
;
; gFade = 1;
;
	ldx     #$00
	lda     #$01
	sta     _gFade
	stx     _gFade+1
;
; load_palette();
;
	jsr     _load_palette
;
; PPU_CTRL = gPpuCtrlBase + gYNametable;
;
	lda     _gPpuCtrlBase
	clc
	adc     _gYNametable
	sta     $2000
;
; set_scroll();
;
	jsr     _set_scroll
;
; gCounter = 20;
;
	ldx     #$00
	lda     #$14
	sta     _gCounter
	stx     _gCounter+1
;
; vblank_counter();
;
	jsr     _vblank_counter
;
; gFade = 0;
;
	lda     #$00
	sta     _gFade
	sta     _gFade+1
;
; load_palette();
;
	jsr     _load_palette
;
; PPU_CTRL = gPpuCtrlBase + gYNametable;
;
	lda     _gPpuCtrlBase
	clc
	adc     _gYNametable
	sta     $2000
;
; if( gStage == 0 || gStage > 4 || gDisplayLives == 1)
;
	lda     _gStage
	ora     _gStage+1
	beq     L425D
	lda     _gStage
	cmp     #$05
	lda     _gStage+1
	sbc     #$00
	bcs     L425D
	lda     _gDisplayLives+1
	bne     L425E
	lda     _gDisplayLives
	cmp     #$01
	bne     L425E
;
; PPU_MASK = 0x0E;
;
L425D:	lda     #$0E
;
; else
;
	jmp     L425A
;
; PPU_MASK = 0x1E;
;
L425E:	lda     #$1E
L425A:	sta     $2001
;
; set_scroll();
;
	jsr     _set_scroll
;
; gCounter = 20;
;
	ldx     #$00
	lda     #$14
	sta     _gCounter
	stx     _gCounter+1
;
; vblank_counter();
;
	jmp     _vblank_counter

.endproc

; ---------------------------------------------------------------
; void __near__ draw_health (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_health: near

.segment	"CODE"

;
; for( i = 0; i < 8; i++)
;
	lda     #$00
	sta     _i
	sta     _i+1
L34EB:	lda     _i+1
	cmp     #$00
	bne     L34F2
	lda     _i
	cmp     #$08
L34F2:	bcc     L4269
;
; }
;
	rts
;
; sprites[40 + (i<<2)] = 0x0F + (i<<3) + i;
;
L4269:	lda     _i
	ldx     _i+1
	jsr     shlax2
	clc
	adc     #$28
	bcc     L4261
	inx
	clc
L4261:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     _i
	ldx     _i+1
	jsr     shlax3
	clc
	adc     #$0F
	bcc     L4262
	inx
	clc
L4262:	adc     _i
	pha
	txa
	adc     _i+1
	pla
	ldy     #$00
	sta     (ptr1),y
;
; sprites[41 + (i<<2)] = PATTERN_HEALTH_0;
;
	lda     _i
	ldx     _i+1
	jsr     shlax2
	clc
	adc     #$29
	bcc     L4263
	inx
	clc
L4263:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$1C
	sta     (ptr1),y
;
; if( gHealth > i )
;
	lda     _gHealth
	sec
	sbc     _i
	sta     tmp1
	lda     _gHealth+1
	sbc     _i+1
	ora     tmp1
	bcc     L3501
	beq     L3501
;
; sprites[42 + (i<<2)] = 0x02;
;
	lda     _i
	ldx     _i+1
	jsr     shlax2
	clc
	adc     #$2A
	bcc     L4264
	inx
	clc
L4264:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$02
;
; else
;
	jmp     L4268
;
; sprites[42 + (i<<2)] = 0x03;
;
L3501:	lda     _i
	ldx     _i+1
	jsr     shlax2
	clc
	adc     #$2A
	bcc     L4265
	inx
	clc
L4265:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$03
L4268:	sta     (ptr1),y
;
; sprites[43 + (i<<2)] = 0x10;
;
	lda     _i
	ldx     _i+1
	jsr     shlax2
	clc
	adc     #$2B
	bcc     L4266
	inx
	clc
L4266:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$10
	sta     (ptr1),y
;
; for( i = 0; i < 8; i++)
;
	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L34F4
	inx
L34F4:	sta     _i
	stx     _i+1
	jmp     L34EB

.endproc

; ---------------------------------------------------------------
; void __near__ dma_sprites (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_dma_sprites: near

.segment	"CODE"

;
; *((unsigned char*)0x4013) = 0x00;
;
	lda     #$00
	sta     $4013
;
; *((unsigned char*)0x4014) = 0x02;
;
	lda     #$02
	sta     $4014
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ input_poll (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_input_poll: near

.segment	"CODE"

;
; *((unsigned char*)0x4016) |= 0x01;
;
	lda     $4016
	ora     #$01
	sta     $4016
;
; *((unsigned char*)0x4016) &= 0xFE;
;
	and     #$FE
	sta     $4016
;
; gPrevController1 = gController1;
;
	lda     _gController1
	sta     _gPrevController1
;
; gController1 = 0x00;
;
	lda     #$00
	sta     _gController1
;
; if(*((unsigned char*)0x4016) & 0x01)
;
	lda     $4016
	and     #$01
	beq     L426C
;
; gController1 |= BUTTON_A;
;
	lda     _gController1
	ora     #$80
	sta     _gController1
;
; if(*((unsigned char*)0x4016) & 0x01)
;
L426C:	lda     $4016
	and     #$01
	beq     L426D
;
; gController1 |= BUTTON_B;
;
	lda     _gController1
	ora     #$40
	sta     _gController1
;
; if(*((unsigned char*)0x4016) & 0x01)
;
L426D:	lda     $4016
	and     #$01
	beq     L426E
;
; gController1 |= BUTTON_SELECT;
;
	lda     _gController1
	ora     #$20
	sta     _gController1
;
; if(*((unsigned char*)0x4016) & 0x01)
;
L426E:	lda     $4016
	and     #$01
	beq     L426F
;
; gController1 |= BUTTON_START;
;
	lda     _gController1
	ora     #$10
	sta     _gController1
;
; if(*((unsigned char*)0x4016) & 0x01)
;
L426F:	lda     $4016
	and     #$01
	beq     L4270
;
; gController1 |= BUTTON_UP;
;
	lda     _gController1
	ora     #$08
	sta     _gController1
;
; if(*((unsigned char*)0x4016) & 0x01)
;
L4270:	lda     $4016
	and     #$01
	beq     L4271
;
; gController1 |= BUTTON_DOWN;
;
	lda     _gController1
	ora     #$04
	sta     _gController1
;
; if(*((unsigned char*)0x4016) & 0x01)
;
L4271:	lda     $4016
	and     #$01
	beq     L4272
;
; gController1 |= BUTTON_LEFT;
;
	lda     _gController1
	ora     #$02
	sta     _gController1
;
; if(*((unsigned char*)0x4016) & 0x01)
;
L4272:	lda     $4016
	and     #$01
	beq     L4273
;
; gController1 |= BUTTON_RIGHT;
;
	lda     _gController1
	ora     #$01
	sta     _gController1
;
; if( ((gController1 & BUTTON_A) == BUTTON_A && (gPrevController1 & BUTTON_A) == 0) ||
;
L4273:	lda     _gController1
	and     #$80
	cmp     #$80
	bne     L4276
	lda     _gPrevController1
	and     #$80
	beq     L427D
;
; ((gController1 & BUTTON_A) == 0 && (gPrevController1 & BUTTON_A) == BUTTON_A))
;
L4276:	lda     _gController1
	and     #$80
	bne     L427A
	lda     _gPrevController1
	and     #$80
	cmp     #$80
	beq     L427D
	rts
L427A:	rts
;
; gPrevController1Change = gPrevController1;
;
L427D:	lda     _gPrevController1
	sta     _gPrevController1Change
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ small_jump (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_small_jump: near

.segment	"CODE"

;
; if(gJumping == 0) {
;
	lda     _gJumping
	ora     _gJumping+1
	bne     L3561
;
; gJumping = 1;
;
	tax
	lda     #$01
	sta     _gJumping
	stx     _gJumping+1
;
; gVelocity = 6;
;
	lda     #$06
	sta     _gVelocity
	stx     _gVelocity+1
;
; gVelocityDirection = 1;
;
	lda     #$01
	sta     _gVelocityDirection
	stx     _gVelocityDirection+1
;
; }
;
L3561:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ big_jump (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_big_jump: near

.segment	"CODE"

;
; if(gJumping == 0 || (gJumping == 1 && gVelocityDirection == 1)) {
;
	lda     _gJumping
	ora     _gJumping+1
	beq     L356C
	lda     _gJumping+1
	bne     L3570
	lda     _gJumping
	cmp     #$01
	bne     L4280
	lda     _gVelocityDirection+1
	bne     L3570
	lda     _gVelocityDirection
	cmp     #$01
	beq     L356C
L3570:	rts
L4280:	rts
;
; gJumping = 2;
;
L356C:	ldx     #$00
	lda     #$02
	sta     _gJumping
	stx     _gJumping+1
;
; gVelocity = 13;
;
	lda     #$0D
	sta     _gVelocity
	stx     _gVelocity+1
;
; gVelocityDirection = 1;
;
	lda     #$01
	sta     _gVelocityDirection
	stx     _gVelocityDirection+1
;
; gPrevController1Change |= BUTTON_A;
;
	lda     _gPrevController1Change
	ora     #$80
	sta     _gPrevController1Change
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ update_frog_sprite (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_update_frog_sprite: near

.segment	"CODE"

;
; if( gVelocity <= 2 && gJumping != 0 )
;
	lda     _gVelocity+1
	cmp     #$00
	bne     L357F
	lda     _gVelocity
	cmp     #$03
L357F:	bcs     L3580
	lda     _gJumping
	ora     _gJumping+1
	bne     L357E
L3580:	ldx     #$00
	jmp     L357D
;
; gFrogAnimationState = FROG_SUSPENDED;
;
L357E:	ldx     #$00
	lda     #$03
;
; else if( gVelocityDirection == 1 && gJumping != 0 )
;
	jmp     L428E
L357D:	lda     _gVelocityDirection+1
	bne     L3586
	lda     _gVelocityDirection
	cmp     #$01
	bne     L3586
	lda     _gJumping
	ora     _gJumping+1
	beq     L3586
;
; if( gJumping == 1 )
;
	lda     _gJumping+1
	bne     L4289
	lda     _gJumping
	cmp     #$01
;
; else
;
	beq     L428E
;
; gFrogAnimationState = FROG_JUMP;
;
L4289:	lda     #$02
;
; else if( gVelocityDirection == 0 && gJumping != 0 )
;
	jmp     L428E
L3586:	lda     _gVelocityDirection
	ora     _gVelocityDirection+1
	bne     L428A
	lda     _gJumping
	ora     _gJumping+1
	bne     L428B
L428A:	txa
	jmp     L428E
;
; if( gJumping == 1 )
;
L428B:	lda     _gJumping+1
	bne     L428C
	lda     _gJumping
	cmp     #$01
	bne     L428C
;
; gFrogAnimationState = FROG_LANDING;
;
	lda     #$05
;
; else
;
	jmp     L428E
;
; gFrogAnimationState = FROG_FALLING;
;
L428C:	lda     #$04
;
; gFrogAnimationState = FROG_NORMAL;
;
L428E:	sta     _gFrogAnimationState
	stx     _gFrogAnimationState+1
;
; switch( gFrogAnimationState )
;
	lda     _gFrogAnimationState
	ldx     _gFrogAnimationState+1
;
; }
;
	cpx     #$00
	jne     L3640
	cmp     #$00
	jeq     L3640
	cmp     #$01
	beq     L35AA
	cmp     #$02
	beq     L35C8
	cmp     #$03
	beq     L35E6
	cmp     #$04
	jeq     L3604
	cmp     #$05
	jeq     L3622
	jmp     L3640
;
; if( gSpeedDirection == 1 )
;
L35AA:	lda     _gSpeedDirection+1
	bne     L428F
	lda     _gSpeedDirection
	cmp     #$01
	bne     L428F
;
; sprites[1]  = PATTERN_FROG_HOP_0;
;
	lda     #$0C
	sta     _sprites+1
;
; sprites[5]  = PATTERN_FROG_HOP_1;
;
	lda     #$0D
	sta     _sprites+5
;
; sprites[9]  = PATTERN_FROG_HOP_2;
;
	lda     #$0E
	sta     _sprites+9
;
; sprites[13] = PATTERN_FROG_HOP_3;
;
	lda     #$0F
;
; else
;
	jmp     L4285
;
; sprites[1]  = PATTERN_FROG_HOP_1;
;
L428F:	lda     #$0D
	sta     _sprites+1
;
; sprites[5]  = PATTERN_FROG_HOP_0;
;
	lda     #$0C
	sta     _sprites+5
;
; sprites[9]  = PATTERN_FROG_HOP_3;
;
	lda     #$0F
	sta     _sprites+9
;
; sprites[13] = PATTERN_FROG_HOP_2;
;
	lda     #$0E
;
; break;
;
	jmp     L4285
;
; if( gSpeedDirection == 1 )
;
L35C8:	lda     _gSpeedDirection+1
	bne     L4290
	lda     _gSpeedDirection
	cmp     #$01
	bne     L4290
;
; sprites[1]  = PATTERN_FROG_JUMP_0;
;
	lda     #$10
	sta     _sprites+1
;
; sprites[5]  = PATTERN_FROG_JUMP_1;
;
	lda     #$11
	sta     _sprites+5
;
; sprites[9]  = PATTERN_FROG_JUMP_2;
;
	lda     #$12
	sta     _sprites+9
;
; sprites[13] = PATTERN_FROG_JUMP_3;
;
	lda     #$13
;
; else
;
	jmp     L4285
;
; sprites[1]  = PATTERN_FROG_JUMP_1;
;
L4290:	lda     #$11
	sta     _sprites+1
;
; sprites[5]  = PATTERN_FROG_JUMP_0;
;
	lda     #$10
	sta     _sprites+5
;
; sprites[9]  = PATTERN_FROG_JUMP_3;
;
	lda     #$13
	sta     _sprites+9
;
; sprites[13] = PATTERN_FROG_JUMP_2;
;
	lda     #$12
;
; break;
;
	jmp     L4285
;
; if( gSpeedDirection == 1 )
;
L35E6:	lda     _gSpeedDirection+1
	bne     L4291
	lda     _gSpeedDirection
	cmp     #$01
	bne     L4291
;
; sprites[1]  = PATTERN_FROG_SUSPENDED_0;
;
	lda     #$18
	sta     _sprites+1
;
; sprites[5]  = PATTERN_FROG_SUSPENDED_1;
;
	lda     #$19
	sta     _sprites+5
;
; sprites[9]  = PATTERN_FROG_SUSPENDED_2;
;
	lda     #$1A
	sta     _sprites+9
;
; sprites[13] = PATTERN_FROG_SUSPENDED_3;
;
	lda     #$1B
;
; else
;
	jmp     L4285
;
; sprites[1]  = PATTERN_FROG_SUSPENDED_1;
;
L4291:	lda     #$19
	sta     _sprites+1
;
; sprites[5]  = PATTERN_FROG_SUSPENDED_0;
;
	lda     #$18
	sta     _sprites+5
;
; sprites[9]  = PATTERN_FROG_SUSPENDED_3;
;
	lda     #$1B
	sta     _sprites+9
;
; sprites[13] = PATTERN_FROG_SUSPENDED_2;
;
	lda     #$1A
;
; break;
;
	jmp     L4285
;
; if( gSpeedDirection == 1 )
;
L3604:	lda     _gSpeedDirection+1
	bne     L4292
	lda     _gSpeedDirection
	cmp     #$01
	bne     L4292
;
; sprites[1]  = PATTERN_FROG_FALLING_0;
;
	lda     #$08
	sta     _sprites+1
;
; sprites[5]  = PATTERN_FROG_FALLING_1;
;
	lda     #$09
	sta     _sprites+5
;
; sprites[9]  = PATTERN_FROG_FALLING_2;
;
	lda     #$0A
	sta     _sprites+9
;
; sprites[13] = PATTERN_FROG_FALLING_3;
;
	lda     #$0B
;
; else
;
	jmp     L4285
;
; sprites[1]  = PATTERN_FROG_FALLING_1;
;
L4292:	lda     #$09
	sta     _sprites+1
;
; sprites[5]  = PATTERN_FROG_FALLING_0;
;
	lda     #$08
	sta     _sprites+5
;
; sprites[9]  = PATTERN_FROG_FALLING_3;
;
	lda     #$0B
	sta     _sprites+9
;
; sprites[13] = PATTERN_FROG_FALLING_2;
;
	lda     #$0A
;
; break;
;
	jmp     L4285
;
; if( gSpeedDirection == 1 )
;
L3622:	lda     _gSpeedDirection+1
	bne     L4293
	lda     _gSpeedDirection
	cmp     #$01
	bne     L4293
;
; sprites[1]  = PATTERN_FROG_LANDING_0;
;
	lda     #$14
	sta     _sprites+1
;
; sprites[5]  = PATTERN_FROG_LANDING_1;
;
	lda     #$15
	sta     _sprites+5
;
; sprites[9]  = PATTERN_FROG_LANDING_2;
;
	lda     #$16
	sta     _sprites+9
;
; sprites[13] = PATTERN_FROG_LANDING_3;
;
	lda     #$17
;
; else
;
	jmp     L4285
;
; sprites[1]  = PATTERN_FROG_LANDING_1;
;
L4293:	lda     #$15
	sta     _sprites+1
;
; sprites[5]  = PATTERN_FROG_LANDING_0;
;
	lda     #$14
	sta     _sprites+5
;
; sprites[9]  = PATTERN_FROG_LANDING_3;
;
	lda     #$17
	sta     _sprites+9
;
; sprites[13] = PATTERN_FROG_LANDING_2;
;
	lda     #$16
;
; break;
;
	jmp     L4285
;
; if( gSpeedDirection == 1 )
;
L3640:	lda     _gSpeedDirection+1
	bne     L3642
	lda     _gSpeedDirection
	cmp     #$01
	bne     L3642
;
; sprites[1]  = PATTERN_FROG_0;
;
	lda     #$04
	sta     _sprites+1
;
; sprites[5]  = PATTERN_FROG_1;
;
	lda     #$05
	sta     _sprites+5
;
; sprites[9]  = PATTERN_FROG_2;
;
	lda     #$06
	sta     _sprites+9
;
; sprites[13] = PATTERN_FROG_3;
;
	lda     #$07
;
; else
;
	jmp     L4285
;
; sprites[1]  = PATTERN_FROG_1;
;
L3642:	lda     #$05
	sta     _sprites+1
;
; sprites[5]  = PATTERN_FROG_0;
;
	lda     #$04
	sta     _sprites+5
;
; sprites[9]  = PATTERN_FROG_3;
;
	lda     #$07
	sta     _sprites+9
;
; sprites[13] = PATTERN_FROG_2;
;
	lda     #$06
L4285:	sta     _sprites+13
;
; if( gSpeedDirection == 1 )
;
	lda     _gSpeedDirection+1
	bne     L4294
	lda     _gSpeedDirection
	cmp     #$01
	bne     L4294
;
; sprites[2] = 0x00;
;
	lda     #$00
;
; else
;
	jmp     L4297
;
; sprites[2] = 0x40;
;
L4294:	lda     #$40
L4297:	sta     _sprites+2
;
; sprites[6] = 0x40;
;
	sta     _sprites+6
;
; sprites[10] = 0x40;
;
	sta     _sprites+10
;
; sprites[14] = 0x40;
;
	sta     _sprites+14
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ update_tongue_sprite (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_update_tongue_sprite: near

.segment	"CODE"

;
; switch( gTongueState )
;
	lda     _gTongueState
	ldx     _gTongueState+1
;
; }
;
	cpx     #$00
	jne     L42A5
	cmp     #$00
	jeq     L42A5
	cmp     #$01
	beq     L367F
	cmp     #$02
	jeq     L36E7
	cmp     #$03
	jeq     L3787
	cmp     #$04
	jeq     L383F
	cmp     #$05
	jeq     L38BF
	cmp     #$06
	jeq     L42A4
	jmp     L42A5
;
; if( gTongueCounter == 0 )
;
L367F:	lda     _gTongueCounter
	ora     _gTongueCounter+1
	jne     L3680
;
; if( gSpeedDirection == 1 )
;
	lda     _gSpeedDirection+1
	bne     L42A2
	lda     _gSpeedDirection
	cmp     #$01
	bne     L42A2
;
; sprites[72] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+73
;
; sprites[74] = 0x02;
;
	lda     #$02
	sta     _sprites+74
;
; sprites[75] = gX + 16;
;
	lda     _gX
	clc
	adc     #$10
	sta     _sprites+75
;
; sprites[76] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+76
;
; sprites[77] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+77
;
; sprites[78] = 0x02;
;
	lda     #$02
	sta     _sprites+78
;
; sprites[79] = gX + 24;
;
	lda     _gX
	clc
	adc     #$18
;
; else
;
	jmp     L4298
;
; sprites[72] = gY + 4;
;
L42A2:	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+73
;
; sprites[74] = 0x42;
;
	lda     #$42
	sta     _sprites+74
;
; sprites[75] = gX - 16;
;
	lda     _gX
	sec
	sbc     #$10
	sta     _sprites+75
;
; sprites[76] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+76
;
; sprites[77] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+77
;
; sprites[78] = 0x42;
;
	lda     #$42
	sta     _sprites+78
;
; sprites[79] = gX - 8;
;
	lda     _gX
	sec
	sbc     #$08
L4298:	sta     _sprites+79
;
; gTongueState = TONGUE_EXTENDING2;
;
	lda     #$02
	sta     _gTongueState
	stx     _gTongueState+1
;
; gTongueCounter = TONGUE_EXTEND_DELAY;
;
	txa
	sta     _gTongueCounter
	sta     _gTongueCounter+1
;
; else
;
	rts
;
; if( gSpeedDirection == 1 )
;
L3680:	lda     _gSpeedDirection+1
	bne     L42A3
	lda     _gSpeedDirection
	cmp     #$01
	bne     L42A3
;
; sprites[72] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+73
;
; sprites[74] = 0x02;
;
	lda     #$02
	sta     _sprites+74
;
; sprites[75] = gX + 16;
;
	lda     _gX
	clc
	adc     #$10
;
; else
;
	jmp     L4299
;
; sprites[72] = gY + 4;
;
L42A3:	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+73
;
; sprites[74] = 0x42;
;
	lda     #$42
	sta     _sprites+74
;
; sprites[75] = gX - 8;
;
	lda     _gX
	sec
	sbc     #$08
L4299:	sta     _sprites+75
;
; gTongueCounter--;
;
	lda     _gTongueCounter
	ldx     _gTongueCounter+1
	sec
	sbc     #$01
	bcs     L36E5
	dex
L36E5:	sta     _gTongueCounter
	stx     _gTongueCounter+1
;
; break;
;
	rts
;
; if( gTongueCounter == 0 )
;
L36E7:	lda     _gTongueCounter
	ora     _gTongueCounter+1
	jne     L36E8
;
; if( gSpeedDirection == 1 )
;
	lda     _gSpeedDirection+1
	bne     L36EB
	lda     _gSpeedDirection
	cmp     #$01
	bne     L36EB
;
; sprites[72] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+73
;
; sprites[74] = 0x02;
;
	lda     #$02
	sta     _sprites+74
;
; sprites[75] = gX + 16;
;
	lda     _gX
	clc
	adc     #$10
	sta     _sprites+75
;
; sprites[76] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+76
;
; sprites[77] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+77
;
; sprites[78] = 0x02;
;
	lda     #$02
	sta     _sprites+78
;
; sprites[79] = gX + 24;
;
	lda     _gX
	clc
	adc     #$18
	sta     _sprites+79
;
; sprites[80] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+80
;
; sprites[81] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+81
;
; sprites[82] = 0x02;
;
	lda     #$02
	sta     _sprites+82
;
; sprites[83] = gX + 32;
;
	lda     _gX
	clc
	adc     #$20
;
; else
;
	jmp     L429A
;
; sprites[72] = gY + 4;
;
L36EB:	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+73
;
; sprites[74] = 0x42;
;
	lda     #$42
	sta     _sprites+74
;
; sprites[75] = gX - 24;
;
	lda     _gX
	sec
	sbc     #$18
	sta     _sprites+75
;
; sprites[76] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+76
;
; sprites[77] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+77
;
; sprites[78] = 0x42;
;
	lda     #$42
	sta     _sprites+78
;
; sprites[79] = gX - 16;
;
	lda     _gX
	sec
	sbc     #$10
	sta     _sprites+79
;
; sprites[80] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+80
;
; sprites[81] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+81
;
; sprites[82] = 0x42;
;
	lda     #$42
	sta     _sprites+82
;
; sprites[83] = gX - 8;
;
	lda     _gX
	sec
	sbc     #$08
L429A:	sta     _sprites+83
;
; gTongueState = TONGUE_OUT;
;
	ldx     #$00
	lda     #$03
	sta     _gTongueState
	stx     _gTongueState+1
;
; gTongueCounter = TONGUE_RETRACT_DELAY;
;
	lda     #$04
	sta     _gTongueCounter
	stx     _gTongueCounter+1
;
; else
;
	rts
;
; if( gSpeedDirection == 1 )
;
L36E8:	lda     _gSpeedDirection+1
	bne     L3748
	lda     _gSpeedDirection
	cmp     #$01
	bne     L3748
;
; sprites[72] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+73
;
; sprites[74] = 0x02;
;
	lda     #$02
	sta     _sprites+74
;
; sprites[75] = gX + 16;
;
	lda     _gX
	clc
	adc     #$10
	sta     _sprites+75
;
; sprites[76] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+76
;
; sprites[77] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+77
;
; sprites[78] = 0x02;
;
	lda     #$02
	sta     _sprites+78
;
; sprites[79] = gX + 24;
;
	lda     _gX
	clc
	adc     #$18
;
; else
;
	jmp     L429B
;
; sprites[72] = gY + 4;
;
L3748:	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+73
;
; sprites[74] = 0x42;
;
	lda     #$42
	sta     _sprites+74
;
; sprites[75] = gX - 16;
;
	lda     _gX
	sec
	sbc     #$10
	sta     _sprites+75
;
; sprites[76] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+76
;
; sprites[77] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+77
;
; sprites[78] = 0x42;
;
	lda     #$42
	sta     _sprites+78
;
; sprites[79] = gX - 8;
;
	lda     _gX
	sec
	sbc     #$08
L429B:	sta     _sprites+79
;
; gTongueCounter--;
;
	lda     _gTongueCounter
	ldx     _gTongueCounter+1
	sec
	sbc     #$01
	bcs     L3785
	dex
L3785:	sta     _gTongueCounter
	stx     _gTongueCounter+1
;
; break;
;
	rts
;
; if( gTongueCounter == 0 )
;
L3787:	lda     _gTongueCounter
	ora     _gTongueCounter+1
	jne     L3788
;
; if( gSpeedDirection == 1 )
;
	lda     _gSpeedDirection+1
	bne     L378B
	lda     _gSpeedDirection
	cmp     #$01
	bne     L378B
;
; sprites[72] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+73
;
; sprites[74] = 0x02;
;
	lda     #$02
	sta     _sprites+74
;
; sprites[75] = gX + 16;
;
	lda     _gX
	clc
	adc     #$10
	sta     _sprites+75
;
; sprites[76] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+76
;
; sprites[77] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+77
;
; sprites[78] = 0x02;
;
	lda     #$02
	sta     _sprites+78
;
; sprites[79] = gX + 24;
;
	lda     _gX
	clc
	adc     #$18
;
; else
;
	jmp     L42B6
;
; sprites[72] = gY + 4;
;
L378B:	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+73
;
; sprites[74] = 0x42;
;
	lda     #$42
	sta     _sprites+74
;
; sprites[75] = gX - 16;
;
	lda     _gX
	sec
	sbc     #$10
	sta     _sprites+75
;
; sprites[76] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+76
;
; sprites[77] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+77
;
; sprites[78] = 0x42;
;
	lda     #$42
	sta     _sprites+78
;
; sprites[79] = gX - 8;
;
	lda     _gX
	sec
	sbc     #$08
L42B6:	sta     _sprites+79
;
; sprites[80] = 0x00;
;
	lda     #$00
	sta     _sprites+80
;
; sprites[81] = 0x00;
;
	sta     _sprites+81
;
; sprites[82] = 0x00;
;
	sta     _sprites+82
;
; sprites[83] = 0x00;
;
	sta     _sprites+83
;
; gTongueState = TONGUE_RETRACTING;
;
	tax
	lda     #$04
	sta     _gTongueState
	stx     _gTongueState+1
;
; gTongueCounter = TONGUE_RETRACT_DELAY;
;
	sta     _gTongueCounter
	stx     _gTongueCounter+1
;
; else
;
	rts
;
; if( gSpeedDirection == 1 )
;
L3788:	lda     _gSpeedDirection+1
	bne     L37E4
	lda     _gSpeedDirection
	cmp     #$01
	bne     L37E4
;
; sprites[72] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+73
;
; sprites[74] = 0x02;
;
	lda     #$02
	sta     _sprites+74
;
; sprites[75] = gX + 16;
;
	lda     _gX
	clc
	adc     #$10
	sta     _sprites+75
;
; sprites[76] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+76
;
; sprites[77] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+77
;
; sprites[78] = 0x02;
;
	lda     #$02
	sta     _sprites+78
;
; sprites[79] = gX + 24;
;
	lda     _gX
	clc
	adc     #$18
	sta     _sprites+79
;
; sprites[80] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+80
;
; sprites[81] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+81
;
; sprites[82] = 0x02;
;
	lda     #$02
	sta     _sprites+82
;
; sprites[83] = gX + 32;
;
	lda     _gX
	clc
	adc     #$20
;
; else
;
	jmp     L429D
;
; sprites[72] = gY + 4;
;
L37E4:	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+73
;
; sprites[74] = 0x42;
;
	lda     #$42
	sta     _sprites+74
;
; sprites[75] = gX - 24;
;
	lda     _gX
	sec
	sbc     #$18
	sta     _sprites+75
;
; sprites[76] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+76
;
; sprites[77] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+77
;
; sprites[78] = 0x42;
;
	lda     #$42
	sta     _sprites+78
;
; sprites[79] = gX - 16;
;
	lda     _gX
	sec
	sbc     #$10
	sta     _sprites+79
;
; sprites[80] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+80
;
; sprites[81] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+81
;
; sprites[82] = 0x42;
;
	lda     #$42
	sta     _sprites+82
;
; sprites[83] = gX - 8;
;
	lda     _gX
	sec
	sbc     #$08
L429D:	sta     _sprites+83
;
; gTongueCounter--;
;
	lda     _gTongueCounter
	ldx     _gTongueCounter+1
	sec
	sbc     #$01
	bcs     L383D
	dex
L383D:	sta     _gTongueCounter
	stx     _gTongueCounter+1
;
; break;
;
	rts
;
; if( gTongueCounter == 0 )
;
L383F:	lda     _gTongueCounter
	ora     _gTongueCounter+1
	bne     L3840
;
; if( gSpeedDirection == 1 )
;
	lda     _gSpeedDirection+1
	bne     L3843
	lda     _gSpeedDirection
	cmp     #$01
	bne     L3843
;
; sprites[72] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+73
;
; sprites[74] = 0x02;
;
	lda     #$02
	sta     _sprites+74
;
; sprites[75] = gX + 16;
;
	lda     _gX
	clc
	adc     #$10
;
; else
;
	jmp     L42B7
;
; sprites[72] = gY + 4;
;
L3843:	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+73
;
; sprites[74] = 0x42;
;
	lda     #$42
	sta     _sprites+74
;
; sprites[75] = gX - 8;
;
	lda     _gX
	sec
	sbc     #$08
L42B7:	sta     _sprites+75
;
; sprites[76] = 0x00;
;
	lda     #$00
	sta     _sprites+76
;
; sprites[77] = 0x00;
;
	sta     _sprites+77
;
; sprites[78] = 0x00;
;
	sta     _sprites+78
;
; sprites[79] = 0x00;
;
	sta     _sprites+79
;
; gTongueState = TONGUE_RETRACTING2;
;
	tax
	lda     #$05
	sta     _gTongueState
	stx     _gTongueState+1
;
; gTongueCounter = TONGUE_RETRACT_DELAY;
;
	lda     #$04
	sta     _gTongueCounter
	stx     _gTongueCounter+1
;
; else
;
	rts
;
; if( gSpeedDirection == 1 )
;
L3840:	lda     _gSpeedDirection+1
	bne     L3880
	lda     _gSpeedDirection
	cmp     #$01
	bne     L3880
;
; sprites[72] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+73
;
; sprites[74] = 0x02;
;
	lda     #$02
	sta     _sprites+74
;
; sprites[75] = gX + 16;
;
	lda     _gX
	clc
	adc     #$10
	sta     _sprites+75
;
; sprites[76] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+76
;
; sprites[77] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+77
;
; sprites[78] = 0x02;
;
	lda     #$02
	sta     _sprites+78
;
; sprites[79] = gX + 24;
;
	lda     _gX
	clc
	adc     #$18
;
; else
;
	jmp     L429F
;
; sprites[72] = gY + 4;
;
L3880:	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+73
;
; sprites[74] = 0x42;
;
	lda     #$42
	sta     _sprites+74
;
; sprites[75] = gX - 16;
;
	lda     _gX
	sec
	sbc     #$10
	sta     _sprites+75
;
; sprites[76] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+76
;
; sprites[77] = PATTERN_TONGUE_0;
;
	lda     #$2A
	sta     _sprites+77
;
; sprites[78] = 0x42;
;
	lda     #$42
	sta     _sprites+78
;
; sprites[79] = gX - 8;
;
	lda     _gX
	sec
	sbc     #$08
L429F:	sta     _sprites+79
;
; gTongueCounter--;
;
	lda     _gTongueCounter
	ldx     _gTongueCounter+1
	sec
	sbc     #$01
	bcs     L38BD
	dex
L38BD:	sta     _gTongueCounter
	stx     _gTongueCounter+1
;
; break;
;
	rts
;
; if( gTongueCounter == 0 )
;
L38BF:	lda     _gTongueCounter
	ora     _gTongueCounter+1
	bne     L38C0
;
; sprites[72] = 0x00;
;
	sta     _sprites+72
;
; sprites[73] = 0x00;
;
	sta     _sprites+73
;
; sprites[74] = 0x00;
;
	sta     _sprites+74
;
; sprites[75] = 0x00;
;
	sta     _sprites+75
;
; gTongueState = TONGUE_NORMAL;
;
	sta     _gTongueState
	sta     _gTongueState+1
;
; gTongueCounter = 0;
;
	sta     _gTongueCounter
	sta     _gTongueCounter+1
;
; else
;
	rts
;
; if( gSpeedDirection == 1 )
;
L38C0:	lda     _gSpeedDirection+1
	bne     L38D4
	lda     _gSpeedDirection
	cmp     #$01
	bne     L38D4
;
; sprites[72] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+73
;
; sprites[74] = 0x02;
;
	lda     #$02
	sta     _sprites+74
;
; sprites[75] = gX + 16;
;
	lda     _gX
	clc
	adc     #$10
;
; else
;
	jmp     L42A0
;
; sprites[72] = gY + 4;
;
L38D4:	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+73
;
; sprites[74] = 0x42;
;
	lda     #$42
	sta     _sprites+74
;
; sprites[75] = gX - 8;
;
	lda     _gX
	sec
	sbc     #$08
L42A0:	sta     _sprites+75
;
; gTongueCounter--;
;
	lda     _gTongueCounter
	ldx     _gTongueCounter+1
	sec
	sbc     #$01
	bcs     L38F5
	dex
L38F5:	sta     _gTongueCounter
	stx     _gTongueCounter+1
;
; break;
;
	rts
;
; for( i = 72; i < 84; i++)
;
L42A4:	lda     #$48
L42B1:	sta     _i
	stx     _i+1
	lda     _i+1
	cmp     #$00
	bne     L38FF
	lda     _i
	cmp     #$54
L38FF:	bcs     L38F9
;
; sprites[i] = 0x00;
;
	lda     #<(_sprites)
	clc
	adc     _i
	sta     ptr1
	lda     #>(_sprites)
	adc     _i+1
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
;
; for( i = 72; i < 84; i++)
;
	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L42B1
	inx
	jmp     L42B1
;
; gTongueState = TONGUE_NORMAL;
;
L38F9:	lda     #$00
	sta     _gTongueState
	sta     _gTongueState+1
;
; break;
;
	rts
;
; if( (gController1 & BUTTON_B) != 0 && (gPrevController1 & BUTTON_B) == 0)
;
L42A5:	lda     _gController1
	and     #$40
	beq     L42A7
	lda     _gPrevController1
	and     #$40
	beq     L42AE
L42A7:	rts
;
; gCurrentSoundEffect = TONGUE_SOUND_ID;
;
L42AE:	sta     _gCurrentSoundEffect
;
; if( gSoundEffectCounter == 0xFF )
;
	ldx     #$00
	lda     _gSoundEffectCounter
	cmp     #$FF
	bne     L42A9
;
; gSoundEffectCounter = 0;
;
	stx     _gSoundEffectCounter
;
; gTongueState = TONGUE_EXTENDING;
;
L42A9:	lda     #$01
	sta     _gTongueState
	stx     _gTongueState+1
;
; gTongueCounter = TONGUE_EXTEND_DELAY;
;
	txa
	sta     _gTongueCounter
	sta     _gTongueCounter+1
;
; if( gSpeedDirection == 1 )
;
	lda     _gSpeedDirection+1
	bne     L42AA
	lda     _gSpeedDirection
	cmp     #$01
	bne     L42AA
;
; sprites[72] = gY + 4;
;
	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+73
;
; sprites[74] = 0x02;
;
	lda     #$02
	sta     _sprites+74
;
; sprites[75] = gX + 16;
;
	lda     _gX
	clc
	adc     #$10
;
; else
;
	jmp     L42A1
;
; sprites[72] = gY + 4;
;
L42AA:	lda     _gY
	clc
	adc     #$04
	sta     _sprites+72
;
; sprites[73] = PATTERN_TONGUE_1;
;
	lda     #$2B
	sta     _sprites+73
;
; sprites[74] = 0x42;
;
	lda     #$42
	sta     _sprites+74
;
; sprites[75] = gX - 8;
;
	lda     _gX
	sec
	sbc     #$08
L42A1:	sta     _sprites+75
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ update_sprites (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_update_sprites: near

.segment	"CODE"

;
; if(gController1 & BUTTON_UP)
;
	lda     _gController1
	ldx     #$00
	and     #$08
	stx     tmp1
	ora     tmp1
;
; if(gController1 & BUTTON_DOWN)
;
	lda     _gController1
	and     #$04
	ora     tmp1
;
; if(gController1 & BUTTON_LEFT)
;
	lda     _gController1
	and     #$02
	beq     L42B9
;
; if( gSpeedDirection == 0 )
;
	lda     _gSpeedDirection
	ora     _gSpeedDirection+1
	bne     L3943
;
; if( gSpeed < 12 )
;
	lda     _gSpeed+1
	cmp     #$00
	bne     L3948
	lda     _gSpeed
	cmp     #$0C
L3948:	bcs     L42B9
;
; ++gSpeed;
;
	inc     _gSpeed
	bne     L42B9
	inc     _gSpeed+1
;
; else
;
	jmp     L42B9
;
; if( gSpeed == 0 )
;
L3943:	lda     _gSpeed
	ora     _gSpeed+1
	bne     L394C
;
; gSpeed = 1;
;
	lda     #$01
	sta     _gSpeed
	stx     _gSpeed+1
;
; gSpeedDirection = 0;
;
	txa
	sta     _gSpeedDirection
	sta     _gSpeedDirection+1
;
; else
;
	jmp     L42B9
;
; --gSpeed;
;
L394C:	lda     _gSpeed
	sec
	sbc     #$01
	sta     _gSpeed
	bcs     L42B9
	dec     _gSpeed+1
;
; if(gController1 & BUTTON_RIGHT)
;
L42B9:	lda     _gController1
	and     #$01
	beq     L42BA
;
; if( gSpeedDirection == 1 )
;
	lda     _gSpeedDirection+1
	bne     L3958
	lda     _gSpeedDirection
	cmp     #$01
	bne     L3958
;
; if( gSpeed < 12 )
;
	lda     _gSpeed+1
	cmp     #$00
	bne     L395D
	lda     _gSpeed
	cmp     #$0C
L395D:	bcs     L42BA
;
; ++gSpeed;
;
	inc     _gSpeed
	bne     L42BA
	inc     _gSpeed+1
;
; else
;
	jmp     L42BA
;
; if( gSpeed == 0 )
;
L3958:	lda     _gSpeed
	ora     _gSpeed+1
	bne     L3961
;
; gSpeed = 1;
;
	lda     #$01
	sta     _gSpeed
	stx     _gSpeed+1
;
; gSpeedDirection = 1;
;
	sta     _gSpeedDirection
	stx     _gSpeedDirection+1
;
; else
;
	jmp     L42BA
;
; --gSpeed;
;
L3961:	lda     _gSpeed
	sec
	sbc     #$01
	sta     _gSpeed
	bcs     L42BA
	dec     _gSpeed+1
;
; if( ((gController1 & (BUTTON_RIGHT | BUTTON_LEFT)) == 0) && (gSpeed > 0) )
;
L42BA:	lda     _gController1
	and     #$03
	bne     L42BD
	lda     _gSpeed
	ora     _gSpeed+1
	beq     L42BD
;
; --gSpeed;
;
	lda     _gSpeed
	sec
	sbc     #$01
	sta     _gSpeed
	bcs     L42BD
	dec     _gSpeed+1
;
; if(gController1 & BUTTON_B)
;
L42BD:	lda     _gController1
	and     #$40
	ora     tmp1
;
; if(((gController1 & BUTTON_A) > 0) && ((gPrevController1Change & BUTTON_A) == 0))
;
	lda     _gController1
	and     #$80
	beq     L42C1
	lda     _gPrevController1Change
	and     #$80
	bne     L42C1
;
; big_jump();
;
	jsr     _big_jump
;
; if(!((gController1 & BUTTON_A) || (gController1 & BUTTON_B)))
;
L42C1:	lda     _gController1
	and     #$80
	bne     L42C2
	lda     _gController1
	and     #$40
	beq     L3989
L42C2:	lda     #$01
L3989:	jsr     bnega
;
; update_frog_sprite();
;
	jsr     _update_frog_sprite
;
; update_tongue_sprite();
;
	jsr     _update_tongue_sprite
;
; sprites[0] = gY;
;
	lda     _gY
	sta     _sprites
;
; sprites[3] = gX;
;
	lda     _gX
	sta     _sprites+3
;
; sprites[4] = gY;
;
	lda     _gY
	sta     _sprites+4
;
; sprites[7] = gX+8;
;
	lda     _gX
	clc
	adc     #$08
	sta     _sprites+7
;
; sprites[8] = gY+8;
;
	lda     _gY
	clc
	adc     #$08
	sta     _sprites+8
;
; sprites[11] = gX;
;
	lda     _gX
	sta     _sprites+11
;
; sprites[12] = gY+8;
;
	lda     _gY
	clc
	adc     #$08
	sta     _sprites+12
;
; sprites[15] = gX+8;
;
	lda     _gX
	clc
	adc     #$08
	sta     _sprites+15
;
; if(gIframes > 0 && (gIframes & 0x4) == 0)
;
	lda     _gIframes
	ora     _gIframes+1
	beq     L42C6
	lda     _gIframes
	and     #$04
	bne     L42C6
;
; sprites[2]  ^= 2;
;
	lda     _sprites+2
	eor     #$02
	sta     _sprites+2
;
; sprites[6]  ^= 2;
;
	lda     _sprites+6
	eor     #$02
	sta     _sprites+6
;
; sprites[10] ^= 2;
;
	lda     _sprites+10
	eor     #$02
	sta     _sprites+10
;
; sprites[14] ^= 2;
;
	lda     _sprites+14
	eor     #$02
;
; else
;
	jmp     L42B8
;
; sprites[2]  &= 0xFC;
;
L42C6:	lda     _sprites+2
	and     #$FC
	sta     _sprites+2
;
; sprites[6]  &= 0xFC;
;
	lda     _sprites+6
	and     #$FC
	sta     _sprites+6
;
; sprites[10] &= 0xFC;
;
	lda     _sprites+10
	and     #$FC
	sta     _sprites+10
;
; sprites[14] &= 0xFC;
;
	lda     _sprites+14
	and     #$FC
L42B8:	sta     _sprites+14
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ load_stage (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_load_stage: near

.segment	"CODE"

;
; fade_out();
;
	jsr     _fade_out
;
; if( gGameState == TITLE_SCREEN_STATE)
;
	lda     _gGameState
	ora     _gGameState+1
	bne     L39CA
;
; gPpuCtrlBase |= 0x10; // switch to the 2nd page of patterns for the title screen
;
	lda     _gPpuCtrlBase
	ora     #$10
;
; else
;
	jmp     L42C7
;
; gPpuCtrlBase &= 0xEF; // switch to the 1st page of patterns for all non-title screens
;
L39CA:	lda     _gPpuCtrlBase
	and     #$EF
L42C7:	sta     _gPpuCtrlBase
;
; gYNametable = 2;
;
	lda     #$02
	sta     _gYNametable
;
; gYScroll = 0;
;
	lda     #$00
	sta     _gYScroll
;
; if( gDisplayLives == 1)
;
	lda     _gDisplayLives+1
	bne     L39D6
	lda     _gDisplayLives
	cmp     #$01
	bne     L39D6
;
; pMusicInit(4);
;
	lda     #$04
	jsr     _pMusicInit
;
; PPU_ADDRESS = 0x28;
;
	lda     #$28
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	lda     #$00
	sta     $2006
;
; UnRLE(Nametable_Lives_bottom_rle); // uncompresses our data
;
	lda     #<(_Nametable_Lives_bottom_rle)
	ldx     #>(_Nametable_Lives_bottom_rle)
	jsr     _UnRLE
;
; vblank();
;
	jsr     _vblank
;
; PPU_ADDRESS = 0x29;
;
	lda     #$29
	sta     $2006
;
; PPU_ADDRESS = 0xED;
;
	lda     #$ED
	sta     $2006
;
; PPU_DATA = PATTERN_NUMBERS_0 + gLives;
;
	lda     _gLives
	clc
	adc     #$1F
	sta     $2007
;
; gScratchPointer = LivesPalette;
;
	lda     #>(_LivesPalette)
	sta     _gScratchPointer+1
	lda     #<(_LivesPalette)
	sta     _gScratchPointer
;
; load_palette();
;
	jsr     _load_palette
;
; vblank();
;
	jsr     _vblank
;
; fade_in();
;
	jsr     _fade_in
;
; gCounter = 30;
;
	ldx     #$00
	lda     #$1E
	sta     _gCounter
	stx     _gCounter+1
;
; vblank_counter();
;
	jsr     _vblank_counter
;
; fade_out();
;
	jsr     _fade_out
;
; gDisplayLives = 0;
;
	lda     #$00
	sta     _gDisplayLives
	sta     _gDisplayLives+1
;
; switch( gStage )
;
L39D6:	lda     _gStage
	ldx     _gStage+1
;
; }
;
	cpx     #$00
	jne     L42CE
	cmp     #$00
	beq     L42C9
	cmp     #$01
	beq     L42CA
	cmp     #$02
	jeq     L42CB
	cmp     #$03
	jeq     L42CC
	cmp     #$04
	jeq     L42CD
	jmp     L42CE
;
; PPU_ADDRESS = 0x28;
;
L42C9:	lda     #$28
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	stx     $2006
;
; UnRLE(Nametable_TitleScreen_bottom_rle); // uncompresses our data
;
	lda     #<(_Nametable_TitleScreen_bottom_rle)
	ldx     #>(_Nametable_TitleScreen_bottom_rle)
	jsr     _UnRLE
;
; vblank();
;
	jsr     _vblank
;
; gScratchPointer = TitleScreenPalette;
;
	lda     #>(_TitleScreenPalette)
	sta     _gScratchPointer+1
	lda     #<(_TitleScreenPalette)
;
; break;
;
	jmp     L42CF
;
; PPU_ADDRESS = 0x28;
;
L42CA:	lda     #$28
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	stx     $2006
;
; UnRLE(Nametable_Level1_bottom_rle); // uncompresses our data
;
	lda     #<(_Nametable_Level1_bottom_rle)
	ldx     #>(_Nametable_Level1_bottom_rle)
	jsr     _UnRLE
;
; vblank();
;
	jsr     _vblank
;
; PPU_ADDRESS = 0x20;
;
	lda     #$20
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	lda     #$00
	sta     $2006
;
; UnRLE(Nametable_Level1_top_rle); // uncompresses our data
;
	lda     #<(_Nametable_Level1_top_rle)
	ldx     #>(_Nametable_Level1_top_rle)
	jsr     _UnRLE
;
; vblank();
;
	jsr     _vblank
;
; gScratchPointer = Level1Palette;
;
	lda     #>(_Level1Palette)
	sta     _gScratchPointer+1
	lda     #<(_Level1Palette)
	sta     _gScratchPointer
;
; load_palette();
;
	jsr     _load_palette
;
; vblank();
;
	jsr     _vblank
;
; ClearSprites();
;
	jsr     _ClearSprites
;
; numSprites = LEVEL1_ENEMY_COUNT;
;
	lda     #$01
	sta     _numSprites
;
; gScratchPointer2 = (unsigned char*)Sprites_Level1;
;
	lda     #>(_Sprites_Level1)
	sta     _gScratchPointer2+1
	lda     #<(_Sprites_Level1)
	sta     _gScratchPointer2
;
; LoadSprites();
;
	jsr     _LoadSprites
;
; pMusicInit(2);
;
	lda     #$02
	jsr     _pMusicInit
;
; break;
;
	jmp     L39FB
;
; PPU_ADDRESS = 0x28;
;
L42CB:	lda     #$28
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	stx     $2006
;
; UnRLE(Nametable_Level2_bottom_rle); // uncompresses our data
;
	lda     #<(_Nametable_Level2_bottom_rle)
	ldx     #>(_Nametable_Level2_bottom_rle)
	jsr     _UnRLE
;
; vblank();
;
	jsr     _vblank
;
; PPU_ADDRESS = 0x20;
;
	lda     #$20
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	lda     #$00
	sta     $2006
;
; UnRLE(Nametable_Level2_top_rle); // uncompresses our data
;
	lda     #<(_Nametable_Level2_top_rle)
	ldx     #>(_Nametable_Level2_top_rle)
	jsr     _UnRLE
;
; vblank();
;
	jsr     _vblank
;
; gScratchPointer = Level2Palette;
;
	lda     #>(_Level2Palette)
	sta     _gScratchPointer+1
	lda     #<(_Level2Palette)
	sta     _gScratchPointer
;
; load_palette();
;
	jsr     _load_palette
;
; ClearSprites();
;
	jsr     _ClearSprites
;
; numSprites = LEVEL2_ENEMY_COUNT;
;
	lda     #$0D
	sta     _numSprites
;
; gScratchPointer2 = (unsigned char*)Sprites_Level2;
;
	lda     #>(_Sprites_Level2)
	sta     _gScratchPointer2+1
	lda     #<(_Sprites_Level2)
	sta     _gScratchPointer2
;
; LoadSprites();
;
	jsr     _LoadSprites
;
; pMusicInit(2);
;
	lda     #$02
	jsr     _pMusicInit
;
; break;
;
	jmp     L39FB
;
; PPU_ADDRESS = 0x28;
;
L42CC:	lda     #$28
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	stx     $2006
;
; UnRLE(Nametable_Level3_bottom_rle); // uncompresses our data
;
	lda     #<(_Nametable_Level3_bottom_rle)
	ldx     #>(_Nametable_Level3_bottom_rle)
	jsr     _UnRLE
;
; vblank();
;
	jsr     _vblank
;
; PPU_ADDRESS = 0x20;
;
	lda     #$20
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	lda     #$00
	sta     $2006
;
; UnRLE(Nametable_Level3_top_rle); // uncompresses our data
;
	lda     #<(_Nametable_Level3_top_rle)
	ldx     #>(_Nametable_Level3_top_rle)
	jsr     _UnRLE
;
; vblank();
;
	jsr     _vblank
;
; gScratchPointer = Level3Palette;
;
	lda     #>(_Level3Palette)
	sta     _gScratchPointer+1
	lda     #<(_Level3Palette)
	sta     _gScratchPointer
;
; load_palette();
;
	jsr     _load_palette
;
; ClearSprites();
;
	jsr     _ClearSprites
;
; numSprites = LEVEL3_ENEMY_COUNT;
;
	lda     #$0B
	sta     _numSprites
;
; gScratchPointer2 = (unsigned char*)Sprites_Level3;
;
	lda     #>(_Sprites_Level3)
	sta     _gScratchPointer2+1
	lda     #<(_Sprites_Level3)
	sta     _gScratchPointer2
;
; LoadSprites();
;
	jsr     _LoadSprites
;
; pMusicInit(2);
;
	lda     #$02
	jsr     _pMusicInit
;
; break;
;
	jmp     L39FB
;
; PPU_ADDRESS = 0x28;
;
L42CD:	lda     #$28
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	stx     $2006
;
; UnRLE(Nametable_Level4_bottom_rle); // uncompresses our data
;
	lda     #<(_Nametable_Level4_bottom_rle)
	ldx     #>(_Nametable_Level4_bottom_rle)
	jsr     _UnRLE
;
; vblank();
;
	jsr     _vblank
;
; PPU_ADDRESS = 0x20;
;
	lda     #$20
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	lda     #$00
	sta     $2006
;
; UnRLE(Nametable_Level4_top_rle); // uncompresses our data
;
	lda     #<(_Nametable_Level4_top_rle)
	ldx     #>(_Nametable_Level4_top_rle)
	jsr     _UnRLE
;
; vblank();
;
	jsr     _vblank
;
; gScratchPointer = Level4Palette;
;
	lda     #>(_Level4Palette)
	sta     _gScratchPointer+1
	lda     #<(_Level4Palette)
	sta     _gScratchPointer
;
; load_palette();
;
	jsr     _load_palette
;
; ClearSprites();
;
	jsr     _ClearSprites
;
; numSprites = LEVEL4_ENEMY_COUNT;
;
	lda     #$0F
	sta     _numSprites
;
; gScratchPointer2 = (unsigned char*)Sprites_Level4;
;
	lda     #>(_Sprites_Level4)
	sta     _gScratchPointer2+1
	lda     #<(_Sprites_Level4)
	sta     _gScratchPointer2
;
; LoadSprites();
;
	jsr     _LoadSprites
;
; pMusicInit(2);
;
	lda     #$02
	jsr     _pMusicInit
;
; break;
;
	jmp     L39FB
;
; PPU_ADDRESS = 0x28;
;
L42CE:	lda     #$28
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	lda     #$00
	sta     $2006
;
; UnRLE(Nametable_EndingScreen_bottom_rle); // uncompresses our data
;
	lda     #<(_Nametable_EndingScreen_bottom_rle)
	ldx     #>(_Nametable_EndingScreen_bottom_rle)
	jsr     _UnRLE
;
; vblank();
;
	jsr     _vblank
;
; gScratchPointer = EndingScreenPalette;
;
	lda     #>(_EndingScreenPalette)
	sta     _gScratchPointer+1
	lda     #<(_EndingScreenPalette)
L42CF:	sta     _gScratchPointer
;
; load_palette();
;
	jsr     _load_palette
;
; loadCollisionFromNametables();
;
L39FB:	jsr     _loadCollisionFromNametables
;
; gX = 0x10;
;
	lda     #$10
	sta     _gX
;
; gY = 0xCF;
;
	lda     #$CF
	sta     _gY
;
; gYNametable = 2;
;
	lda     #$02
	sta     _gYNametable
;
; gVelocity = 0;
;
	ldx     #$00
	txa
	sta     _gVelocity
	sta     _gVelocity+1
;
; gVelocityDirection = 0;
;
	sta     _gVelocityDirection
	sta     _gVelocityDirection+1
;
; gXScroll = 0;
;
	sta     _gXScroll
	sta     _gXScroll+1
	sta     _gXScroll+2
	sta     _gXScroll+3
;
; gYScroll = 0;
;
	sta     _gYScroll
;
; gSpeed = 0;
;
	sta     _gSpeed
	sta     _gSpeed+1
;
; gSpeedDirection = 1;
;
	lda     #$01
	sta     _gSpeedDirection
	stx     _gSpeedDirection+1
;
; gJumping = 0;
;
	txa
	sta     _gJumping
	sta     _gJumping+1
;
; gBounceCounter = 0;
;
	sta     _gBounceCounter
	sta     _gBounceCounter+1
;
; sprites[1] = 0x00;
;
	sta     _sprites+1
;
; sprites[2] = 0x00;
;
	sta     _sprites+2
;
; sprites[5] = 0x01;
;
	lda     #$01
	sta     _sprites+5
;
; sprites[6] = 0x00;
;
	stx     _sprites+6
;
; sprites[9] = 0x02;
;
	lda     #$02
	sta     _sprites+9
;
; sprites[10] = 0x00;
;
	stx     _sprites+10
;
; sprites[13] = 0x03;
;
	lda     #$03
	sta     _sprites+13
;
; sprites[14] = 0x00;
;
	stx     _sprites+14
;
; vblank();
;
	jsr     _vblank
;
; draw_health();
;
	jsr     _draw_health
;
; update_sprites();
;
	jsr     _update_sprites
;
; dma_sprites();
;
	jsr     _dma_sprites
;
; set_scroll();
;
	jsr     _set_scroll
;
; vblank();
;
	jsr     _vblank
;
; vblank();
;
	jsr     _vblank
;
; fade_in();
;
	jmp     _fade_in

.endproc

; ---------------------------------------------------------------
; void __near__ next_stage (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_next_stage: near

.segment	"CODE"

;
; switch( gStage )
;
	lda     _gStage+1
;
; }
;
	bne     L3AD3
;
; switch( gStage )
;
	lda     _gStage
;
; }
;
	cmp     #$04
	bne     L3AD3
;
; gGameState = ENDING_STATE;
;
	ldx     #$00
	lda     #$03
	sta     _gGameState
	stx     _gGameState+1
;
; gTongueState = TONGUE_CLEANUP;
;
L3AD3:	ldx     #$00
	lda     #$06
	sta     _gTongueState
	stx     _gTongueState+1
;
; gTongueCounter = 0;
;
	txa
	sta     _gTongueCounter
	sta     _gTongueCounter+1
;
; update_tongue_sprite();
;
	jsr     _update_tongue_sprite
;
; gStage++;
;
	lda     _gStage
	ldx     _gStage+1
	clc
	adc     #$01
	bcc     L3ADA
	inx
L3ADA:	sta     _gStage
	stx     _gStage+1
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ death (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_death: near

.segment	"CODE"

;
; gHealth = 8;
;
	ldx     #$00
	lda     #$08
	sta     _gHealth
	stx     _gHealth+1
;
; if( gLives == 0 )
;
	lda     _gLives
	ora     _gLives+1
	bne     L3ADE
;
; gStage = 0;
;
	sta     _gStage
	sta     _gStage+1
;
; gGameState = TITLE_SCREEN_STATE;
;
	sta     _gGameState
	sta     _gGameState+1
;
; else
;
	jmp     L3AE5
;
; gLives--;
;
L3ADE:	lda     _gLives
	ldx     _gLives+1
	sec
	sbc     #$01
	bcs     L3AE7
	dex
L3AE7:	sta     _gLives
	stx     _gLives+1
;
; gDisplayLives = 1;
;
	ldx     #$00
	lda     #$01
	sta     _gDisplayLives
	stx     _gDisplayLives+1
;
; draw_health();
;
L3AE5:	jsr     _draw_health
;
; load_stage();
;
	jmp     _load_stage

.endproc

; ---------------------------------------------------------------
; int __near__ is_collision (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_is_collision: near

.segment	"CODE"

;
; return x1 + width1 > x2
;
	ldx     #$00
	lda     _x1
	clc
	adc     _width1
	bcc     L42D0
	inx
;
; && x2 + width2 > x1
;
L42D0:	sec
	sbc     _x2
	sta     tmp1
	txa
	sbc     #$00
	ora     tmp1
	bcc     L3AEE
	beq     L3AEE
	ldx     #$00
	lda     _x2
	clc
	adc     _width2
	bcc     L42D1
	inx
;
; && y1 + height1 > y2
;
L42D1:	sec
	sbc     _x1
	sta     tmp1
	txa
	sbc     #$00
	ora     tmp1
	bcc     L3AEE
	beq     L3AEE
	ldx     #$00
	lda     _y1
	clc
	adc     _height1
	bcc     L42D2
	inx
;
; && y2 + height2 > y1;
;
L42D2:	sec
	sbc     _y2
	sta     tmp1
	txa
	sbc     #$00
	ora     tmp1
	bcc     L3AEE
	beq     L3AEE
	ldx     #$00
	lda     _y2
	clc
	adc     _height2
	bcc     L42D3
	inx
L42D3:	sec
	sbc     _y1
	sta     tmp1
	txa
	sbc     #$00
	ora     tmp1
	beq     L3AEE
	bcs     L3AED
L3AEE:	ldx     #$00
	txa
	rts
L3AED:	ldx     #$00
	lda     #$01
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ is_background_collision (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_is_background_collision: near

.segment	"CODE"

;
; if( gYNametable == 2 )
;
	ldx     #$00
	lda     _gYNametable
	cmp     #$02
	jne     L42F6
;
; if( collision[240 + (((y1)&0xF0)) + (x1 >> 4)] == 0 &&
;
	lda     _y1
	and     #$F0
	clc
	adc     #$F0
	bcc     L3AF9
	inx
L3AF9:	sta     ptr1
	stx     ptr1+1
	lda     _x1
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	jne     L42ED
;
; collision[240 + (((y1 + height1)&0xF0)) + (x1 >> 4)] == 0 &&
;
	lda     _y1
	clc
	adc     _height1
	and     #$F0
	clc
	adc     #$F0
	bcc     L3B00
	inx
L3B00:	sta     ptr1
	stx     ptr1+1
	lda     _x1
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	jne     L42ED
;
; collision[240 + (((y1)&0xF0)) + ((x1 + width1) >> 4)] == 0 &&
;
	lda     _y1
	and     #$F0
	clc
	adc     #$F0
	bcc     L3B06
	inx
L3B06:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _x1
	clc
	adc     _width1
	bcc     L42D5
	inx
L42D5:	jsr     shrax4
	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	jne     L42ED
;
; collision[240 + (((y1 + height1)&0xF0)) + ((x1 + width1) >> 4)] == 0)
;
	lda     _y1
	clc
	adc     _height1
	and     #$F0
	clc
	adc     #$F0
	bcc     L3B0D
	inx
L3B0D:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _x1
	clc
	adc     _width1
	bcc     L42D7
	inx
L42D7:	jsr     shrax4
	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	beq     L42F4
	ldx     #$00
	jmp     L42ED
;
; return 0;
;
L42F4:	tax
	rts
;
; if((gYScroll + y1 + 1) >= 0xF0)
;
L42F6:	lda     _gYScroll
	clc
	adc     _y1
	bcc     L42EE
	inx
	clc
L42EE:	adc     #$01
	bcc     L3B18
	inx
L3B18:	cmp     #$F0
	txa
	sbc     #$00
	jcc     L42FA
;
; if( collision[240 + (((gYScroll + y1 - 0xF0) & 0xF0) ) + (x1 >> 4)] == 0 &&
;
	lda     _gYScroll
	clc
	adc     _y1
	sec
	sbc     #$F0
	ldx     #$00
	and     #$F0
	clc
	adc     #$F0
	bcc     L3B20
	inx
L3B20:	sta     ptr1
	stx     ptr1+1
	lda     _x1
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	jne     L42ED
;
; collision[240 + (((gYScroll + y1 + height1 - 0xF0) & 0xF0) ) + (x1 >> 4)] == 0 &&
;
	lda     _gYScroll
	clc
	adc     _y1
	bcc     L42EF
	clc
L42EF:	adc     _height1
	sec
	sbc     #$F0
	and     #$F0
	clc
	adc     #$F0
	bcc     L3B28
	inx
L3B28:	sta     ptr1
	stx     ptr1+1
	lda     _x1
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	jne     L42ED
;
; collision[240 + (((gYScroll + y1 - 0xF0) & 0xF0) ) + ((x1 + width1) >> 4)] == 0 &&
;
	lda     _gYScroll
	clc
	adc     _y1
	sec
	sbc     #$F0
	and     #$F0
	clc
	adc     #$F0
	bcc     L3B2F
	inx
L3B2F:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _x1
	clc
	adc     _width1
	bcc     L42DD
	inx
L42DD:	jsr     shrax4
	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	jne     L42ED
;
; collision[240 + (((gYScroll + y1 + height1 - 0xF0) & 0xF0) ) + ((x1 + width1) >> 4)] == 0 )
;
	lda     _gYScroll
	clc
	adc     _y1
	bcc     L42F0
	clc
L42F0:	adc     _height1
	sec
	sbc     #$F0
	and     #$F0
	clc
	adc     #$F0
	bcc     L3B37
	inx
L3B37:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _x1
	clc
	adc     _width1
	bcc     L42E0
	inx
L42E0:	jsr     shrax4
	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	beq     L42F8
	ldx     #$00
	jmp     L42ED
;
; return 0;
;
L42F8:	tax
	rts
;
; if( collision[(((gYScroll + y1) & 0xF0) ) + (x1 >> 4)] == 0 &&
;
L42FA:	lda     _gYScroll
	clc
	adc     _y1
	and     #$F0
	sta     ptr1
	ldx     #$00
	lda     _x1
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	bcc     L42E9
	inx
L42E9:	sta     ptr1
	txa
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	jne     L42ED
;
; collision[(((gYScroll + y1 + height1) & 0xF0) ) + (x1 >> 4)] == 0 &&
;
	lda     _gYScroll
	clc
	adc     _y1
	bcc     L42F1
	clc
L42F1:	adc     _height1
	and     #$F0
	sta     ptr1
	lda     _x1
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	bcc     L42EA
	inx
L42EA:	sta     ptr1
	txa
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	bne     L42ED
;
; collision[(((gYScroll + y1) & 0xF0) ) + ((x1 + width1) >> 4)] == 0 &&
;
	lda     _gYScroll
	clc
	adc     _y1
	and     #$F0
	sta     ptr1
	lda     _x1
	clc
	adc     _width1
	bcc     L42E5
	inx
L42E5:	jsr     shrax4
	clc
	adc     ptr1
	bcc     L42EB
	inx
L42EB:	sta     ptr1
	txa
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	bne     L42ED
;
; collision[(((gYScroll + y1 + height1) & 0xF0) ) + ((x1 + width1) >> 4)] == 0 )
;
	lda     _gYScroll
	clc
	adc     _y1
	bcc     L42F2
	clc
L42F2:	adc     _height1
	and     #$F0
	sta     ptr1
	lda     _x1
	clc
	adc     _width1
	bcc     L42E8
	inx
L42E8:	jsr     shrax4
	clc
	adc     ptr1
	bcc     L42EC
	inx
L42EC:	sta     ptr1
	txa
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	beq     L42FC
	ldx     #$00
	jmp     L42ED
;
; return 0;
;
L42FC:	tax
	rts
;
; return 1;
;
L42ED:	lda     #$01
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ put_i_in_collision2_vars (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_put_i_in_collision2_vars: near

.segment	"CODE"

;
; switch(gSpriteTable.id[i])
;
	lda     #<(_gSpriteTable)
	sta     ptr1
	lda     #>(_gSpriteTable)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
;
; }
;
	cmp     #$01
	jeq     L3B8A
	cmp     #$02
	beq     L3B62
	cmp     #$03
	beq     L3B70
	cmp     #$04
	jeq     L3B7D
	cmp     #$05
	jeq     L3B8A
	jmp     L3B8A
;
; x2 = sprites[j + 3];
;
L3B62:	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3B66
	inx
L3B66:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	sta     _x2
;
; y2 =  sprites[j] + 4;
;
	lda     #<(_sprites)
	sta     ptr1
	lda     #>(_sprites)
	clc
	adc     _j+1
	sta     ptr1+1
	ldy     _j
	lda     (ptr1),y
	clc
	adc     #$04
	sta     _y2
;
; width2 = 8;
;
	lda     #$08
	sta     _width2
;
; height2 = 1;
;
	lda     #$01
;
; break;
;
	jmp     L42FD
;
; x2 = sprites[j+3];
;
L3B70:	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3B74
	inx
L3B74:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	sta     _x2
;
; y2 =  sprites[j];
;
	lda     #<(_sprites)
	sta     ptr1
	lda     #>(_sprites)
	clc
	adc     _j+1
	sta     ptr1+1
	ldy     _j
	lda     (ptr1),y
	sta     _y2
;
; width2 = 16;
;
	lda     #$10
	sta     _width2
;
; height2 = 8;
;
	lda     #$08
;
; break;
;
	jmp     L42FD
;
; x2 = sprites[j + 3];
;
L3B7D:	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3B81
	inx
L3B81:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	sta     _x2
;
; y2 = sprites[j];
;
	lda     #<(_sprites)
	sta     ptr1
	lda     #>(_sprites)
	clc
	adc     _j+1
	sta     ptr1+1
	ldy     _j
	lda     (ptr1),y
	sta     _y2
;
; width2 = 16;
;
	lda     #$10
	sta     _width2
;
; height2 = 16;
;
	sta     _height2
;
; x2 = sprites[j + 3];
;
L3B8A:	lda     _j
	ldx     _j+1
	clc
	adc     #$03
	bcc     L3B91
	inx
L3B91:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	sta     _x2
;
; y2 = sprites[j];
;
	lda     #<(_sprites)
	sta     ptr1
	lda     #>(_sprites)
	clc
	adc     _j+1
	sta     ptr1+1
	ldy     _j
	lda     (ptr1),y
	sta     _y2
;
; width2 = 8;
;
	lda     #$08
	sta     _width2
;
; height2 = 8;
;
L42FD:	sta     _height2
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ take_hit (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_take_hit: near

.segment	"CODE"

;
; if( gHealth > 0 )
;
	lda     _gHealth
	ora     _gHealth+1
	beq     L3B9A
;
; if( gStage != 0 )
;
	lda     _gStage
	ora     _gStage+1
	beq     L3B9D
;
; gCurrentSoundEffect = DAMAGE_SOUND_ID;
;
	lda     #$01
	sta     _gCurrentSoundEffect
;
; if( gSoundEffectCounter == 0xFF )
;
	lda     _gSoundEffectCounter
	cmp     #$FF
	bne     L3BA2
;
; gSoundEffectCounter = 0;
;
	lda     #$00
	sta     _gSoundEffectCounter
;
; --gHealth;
;
L3BA2:	lda     _gHealth
	sec
	sbc     #$01
	sta     _gHealth
	bcs     L3B9D
	dec     _gHealth+1
;
; draw_health();
;
L3B9D:	jsr     _draw_health
;
; if( gHealth == 0 )
;
	lda     _gHealth
	ora     _gHealth+1
	bne     L3BA9
;
; death();
;
	jsr     _death
;
; else
;
	jmp     L3BAD
;
; gIframes = 120;
;
L3BA9:	ldx     #$00
	lda     #$78
	sta     _gIframes
	stx     _gIframes+1
;
; gSpeed = 16;
;
L3BAD:	ldx     #$00
	lda     #$10
	sta     _gSpeed
	stx     _gSpeed+1
;
; gSpeedDirection ^= 1;
;
	lda     _gSpeedDirection
	ldx     _gSpeedDirection+1
	eor     #$01
	sta     _gSpeedDirection
	stx     _gSpeedDirection+1
;
; }
;
L3B9A:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ spawn_check (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_spawn_check: near

.segment	"CODE"

;
; if(sprites[j+1] == 0 && gSpriteTable.id[i] != INVALID_ID)
;
	lda     _j
	ldx     _j+1
	clc
	adc     #$01
	bcc     L3CCE
	inx
L3CCE:	sta     ptr1
	txa
	clc
	adc     #>(_sprites)
	sta     ptr1+1
	ldy     #<(_sprites)
	lda     (ptr1),y
	bne     L42FF
	lda     #<(_gSpriteTable)
	sta     ptr1
	lda     #>(_gSpriteTable)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	bne     L4300
L42FF:	rts
;
; if(gSpriteTable.startNametable[i] == 2) {
;
L4300:	lda     #<(_gSpriteTable+54)
	sta     ptr1
	lda     #>(_gSpriteTable+54)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	cmp     #$02
	jne     L4301
;
; if(gYNametable == 0) {
;
	lda     _gYNametable
	bne     L3CD5
;
; gTmp4 = gSpriteTable.startY[i];
;
	lda     #<(_gSpriteTable+36)
	sta     ptr1
	lda     #>(_gSpriteTable+36)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sta     _gTmp4
;
; if(gYScroll > gTmp4) {
;
	ldx     #$00
	lda     _gYScroll
	sec
	sbc     _gTmp4
	bcc     L3CDA
	beq     L3CDA
;
; gTmp8 = gTmp4 - gYScroll - 0x10;
;
	lda     _gTmp4
	sec
	sbc     _gYScroll
	sec
	sbc     #$10
	sta     _gTmp8
;
; spriteProperties[gSpriteTable.id[i]].spawn();
;
	lda     #<(_gSpriteTable)
	sta     ptr1
	lda     #>(_gSpriteTable)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
;
; else {
;
	jmp     L430E
;
; spriteProperties[gSpriteTable.id[i]].despawn();
;
L3CDA:	lda     #<(_gSpriteTable)
	sta     ptr1
	lda     #>(_gSpriteTable)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	jsr     mulax9
	clc
	adc     #<(_spriteProperties)
	sta     ptr1
	txa
	adc     #>(_spriteProperties)
	sta     ptr1+1
	ldy     #$04
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jmp     callax
;
; gTmp8 = gSpriteTable.startY[i];
;
L3CD5:	lda     #<(_gSpriteTable+36)
	sta     ptr1
	lda     #>(_gSpriteTable+36)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sta     _gTmp8
;
; spriteProperties[gSpriteTable.id[i]].spawn();
;
	lda     #<(_gSpriteTable)
	sta     ptr1
	lda     #>(_gSpriteTable)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	ldx     #$00
L430E:	lda     (ptr1),y
	jsr     mulax9
	clc
	adc     #<(_spriteProperties)
	sta     ptr1
	txa
	adc     #>(_spriteProperties)
	sta     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jmp     callax
;
; if(gYNametable == 0) {
;
L4301:	lda     _gYNametable
	jne     L3CEE
;
; gTmp4 = gSpriteTable.startY[i];
;
	lda     #<(_gSpriteTable+36)
	sta     ptr1
	lda     #>(_gSpriteTable+36)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sta     _gTmp4
;
; if(gYScroll < gTmp4) {
;
	ldx     #$00
	lda     _gYScroll
	cmp     _gTmp4
	bcs     L3CF3
;
; gTmp8 = gSpriteTable.startY[i] - gYScroll;
;
	lda     #<(_gSpriteTable+36)
	sta     ptr1
	lda     #>(_gSpriteTable+36)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sec
	sbc     _gYScroll
	sta     _gTmp8
;
; spriteProperties[gSpriteTable.id[i]].spawn();
;
	lda     #<(_gSpriteTable)
	sta     ptr1
	lda     #>(_gSpriteTable)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	jsr     mulax9
	clc
	adc     #<(_spriteProperties)
	sta     ptr1
	txa
	adc     #>(_spriteProperties)
	sta     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jmp     callax
;
; spriteProperties[gSpriteTable.id[i]].despawn();
;
L3CF3:	lda     #<(_gSpriteTable)
	sta     ptr1
	lda     #>(_gSpriteTable)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	jsr     mulax9
	clc
	adc     #<(_spriteProperties)
	sta     ptr1
	txa
	adc     #>(_spriteProperties)
	sta     ptr1+1
	ldy     #$04
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     callax
;
; gSpriteTable.state[i] = 0;
;
	lda     #<(_gSpriteTable+72)
	clc
	adc     _i
	sta     ptr1
	lda     #>(_gSpriteTable+72)
	adc     _i+1
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
;
; else {
;
	rts
;
; spriteProperties[gSpriteTable.id[i]].despawn();
;
L3CEE:	lda     #<(_gSpriteTable)
	sta     ptr1
	lda     #>(_gSpriteTable)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	ldx     #$00
	lda     (ptr1),y
	jsr     mulax9
	clc
	adc     #<(_spriteProperties)
	sta     ptr1
	txa
	adc     #>(_spriteProperties)
	sta     ptr1+1
	ldy     #$04
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jmp     callax

.endproc

; ---------------------------------------------------------------
; void __near__ sprite_maintain_y_position (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_sprite_maintain_y_position: near

.segment	"CODE"

;
; if(gYPrevNametable == gYNametable) {
;
	lda     _gYNametable
	cmp     _gYPrevNametable
	bne     L4311
;
; gTmp = gYScroll - gYPrevScroll;
;
	lda     _gYScroll
	sec
	sbc     _gYPrevScroll
;
; else{
;
	jmp     L4310
;
; if(gYNametable == 2) {
;
L4311:	lda     _gYNametable
	cmp     #$02
	bne     L4312
;
; gTmp = 0xF0 - gYPrevScroll;
;
	lda     #$F0
	sec
	sbc     _gYPrevScroll
;
; else {
;
	jmp     L4310
;
; gTmp = gYScroll - 0xF0;
;
L4312:	lda     _gYScroll
	sec
	sbc     #$F0
L4310:	sta     _gTmp
;
; k = j;
;
	lda     _j
	sta     _k
;
; gTmp5 = gSpriteTable.numSprites[i];
;
	lda     #<(_gSpriteTable+108)
	sta     ptr1
	lda     #>(_gSpriteTable+108)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sta     _gTmp5
;
; for(gTmp4 = 0 ; gTmp4 < gTmp5 ; gTmp4++) {
;
	lda     #$00
	sta     _gTmp4
L4313:	lda     _gTmp4
	cmp     _gTmp5
	bcs     L3D1A
;
; gTmp6 = sprites[k];
;
	ldy     _k
	lda     _sprites,y
	sta     _gTmp6
;
; sprites[k] = gTmp6 - gTmp;
;
	lda     #<(_sprites)
	ldx     #>(_sprites)
	clc
	adc     _k
	bcc     L3D27
	inx
L3D27:	sta     ptr1
	stx     ptr1+1
	lda     _gTmp6
	sec
	sbc     _gTmp
	ldy     #$00
	sta     (ptr1),y
;
; k += 4;
;
	lda     #$04
	clc
	adc     _k
	sta     _k
;
; for(gTmp4 = 0 ; gTmp4 < gTmp5 ; gTmp4++) {
;
	inc     _gTmp4
	jmp     L4313
;
; }
;
L3D1A:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ do_physics (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_do_physics: near

.segment	"CODE"

;
; if( gSpeedDirection == 0 )
;
	lda     _gSpeedDirection
	ora     _gSpeedDirection+1
	jne     L3E81
;
; for( i = 0; (i<<2) < gSpeed; i++ )
;
	sta     _i
	sta     _i+1
L3E84:	lda     _i
	ldx     _i+1
	jsr     shlax2
	cmp     _gSpeed
	txa
	sbc     _gSpeed+1
	jcs     L3EE3
;
; gTmpX = gX - 1;
;
	lda     _gX
	sec
	sbc     #$01
	sta     _gTmpX
;
; if( gYNametable == 2 )
;
	ldx     #$00
	lda     _gYNametable
	cmp     #$02
	bne     L434B
;
; if( collision[240 + (((gY+1)&0xF0)) + (gTmpX >> 4)] == 0 &&
;
	lda     _gY
	clc
	adc     #$01
	and     #$F0
	clc
	adc     #$F0
	bcc     L3E9A
	inx
L3E9A:	sta     ptr1
	stx     ptr1+1
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	bne     L4347
;
; collision[240 + (((gY+0x10)&0xF0)) + (gTmpX >> 4)] == 0 )
;
	lda     _gY
	clc
	adc     #$10
	and     #$F0
	clc
	adc     #$F0
	bcc     L3EA2
	inx
L3EA2:	sta     ptr1
	stx     ptr1+1
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	beq     L4348
L4347:	lda     #$00
	jmp     L4354
;
; gX -= 1;
;
L4348:	dec     _gX
;
; small_jump();
;
	jsr     _small_jump
;
; else
;
	jmp     L3E86
;
; if((gYScroll + gY + 1) >= 0xF0)
;
L434B:	lda     _gYScroll
	clc
	adc     _gY
	bcc     L4335
	inx
	clc
L4335:	adc     #$01
	bcc     L3EAF
	inx
L3EAF:	cmp     #$F0
	txa
	sbc     #$00
	jcc     L4350
;
; if( collision[240 + (((gYScroll + gY + 1 - 0xF0) & 0xF0) ) + (gTmpX >> 4)] == 0 &&
;
	lda     _gYScroll
	clc
	adc     _gY
	bcc     L4336
	clc
L4336:	adc     #$01
	sec
	sbc     #$F0
	ldx     #$00
	and     #$F0
	clc
	adc     #$F0
	bcc     L3EB8
	inx
L3EB8:	sta     ptr1
	stx     ptr1+1
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	bne     L434C
;
; collision[240 + (((gYScroll + gY + 0x10 - 0xF0) & 0xF0) ) + (gTmpX >> 4)] == 0 )
;
	lda     _gYScroll
	clc
	adc     _gY
	bcc     L4337
	clc
L4337:	adc     #$10
	sec
	sbc     #$F0
	and     #$F0
	clc
	adc     #$F0
	bcc     L3EC1
	inx
L3EC1:	sta     ptr1
	stx     ptr1+1
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	beq     L434D
L434C:	lda     #$00
	jmp     L4354
;
; gX -= 1;
;
L434D:	dec     _gX
;
; small_jump();
;
	jsr     _small_jump
;
; else
;
	jmp     L3E86
;
; if( collision[(((gYScroll + gY + 1) & 0xF0) ) + (gTmpX >> 4)] == 0 &&
;
L4350:	lda     _gYScroll
	clc
	adc     _gY
	bcc     L4338
	clc
L4338:	adc     #$01
	and     #$F0
	sta     ptr1
	ldx     #$00
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	bcc     L4328
	inx
L4328:	sta     ptr1
	txa
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	bne     L4351
;
; collision[(((gYScroll + gY + 0x10) & 0xF0) ) + (gTmpX >> 4)] == 0 )
;
	lda     _gYScroll
	clc
	adc     _gY
	bcc     L4339
	clc
L4339:	adc     #$10
	and     #$F0
	sta     ptr1
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	bcc     L4329
	inx
L4329:	sta     ptr1
	txa
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	beq     L4352
L4351:	lda     #$00
	jmp     L4354
;
; gX -= 1;
;
L4352:	dec     _gX
;
; small_jump();
;
	jsr     _small_jump
;
; else
;
	jmp     L3E86
;
; gSpeed = 0;
;
L4354:	sta     _gSpeed
	sta     _gSpeed+1
;
; for( i = 0; (i<<2) < gSpeed; i++ )
;
L3E86:	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L3E8D
	inx
L3E8D:	sta     _i
	stx     _i+1
	jmp     L3E84
;
; for( i = 0; (i<<2) < gSpeed; i++ )
;
L3E81:	lda     #$00
	sta     _i
	sta     _i+1
L3EE2:	lda     _i
	ldx     _i+1
	jsr     shlax2
	cmp     _gSpeed
	txa
	sbc     _gSpeed+1
	jcs     L3EE3
;
; gTmpX = gX + 0x10;
;
	lda     _gX
	clc
	adc     #$10
	sta     _gTmpX
;
; if( gYNametable == 2 )
;
	ldx     #$00
	lda     _gYNametable
	cmp     #$02
	bne     L4359
;
; if( collision[240 + (((gY+1)&0xF0) ) + (gTmpX >> 4)] == 0 &&
;
	lda     _gY
	clc
	adc     #$01
	and     #$F0
	clc
	adc     #$F0
	bcc     L3EF8
	inx
L3EF8:	sta     ptr1
	stx     ptr1+1
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	bne     L4355
;
; collision[240 + (((gY+0x10)&0xF0) ) + (gTmpX >> 4)] == 0 )
;
	lda     _gY
	clc
	adc     #$10
	and     #$F0
	clc
	adc     #$F0
	bcc     L3F00
	inx
L3F00:	sta     ptr1
	stx     ptr1+1
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	beq     L4356
L4355:	lda     #$00
	jmp     L4362
;
; gX += 1;
;
L4356:	inc     _gX
;
; small_jump();
;
	jsr     _small_jump
;
; else
;
	jmp     L3EE4
;
; if((gYScroll + gY + 1) >= 0xF0)
;
L4359:	lda     _gYScroll
	clc
	adc     _gY
	bcc     L433A
	inx
	clc
L433A:	adc     #$01
	bcc     L3F0D
	inx
L3F0D:	cmp     #$F0
	txa
	sbc     #$00
	jcc     L435E
;
; if( collision[240 + (((gYScroll + gY + 1 - 0xF0) & 0xF0) ) + (gTmpX >> 4)] == 0 &&
;
	lda     _gYScroll
	clc
	adc     _gY
	bcc     L433B
	clc
L433B:	adc     #$01
	sec
	sbc     #$F0
	ldx     #$00
	and     #$F0
	clc
	adc     #$F0
	bcc     L3F16
	inx
L3F16:	sta     ptr1
	stx     ptr1+1
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	bne     L435A
;
; collision[240 + (((gYScroll + gY + 0x10 - 0xF0) & 0xF0) ) + (gTmpX >> 4)] == 0 )
;
	lda     _gYScroll
	clc
	adc     _gY
	bcc     L433C
	clc
L433C:	adc     #$10
	sec
	sbc     #$F0
	and     #$F0
	clc
	adc     #$F0
	bcc     L3F1F
	inx
L3F1F:	sta     ptr1
	stx     ptr1+1
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	beq     L435B
L435A:	lda     #$00
	jmp     L4362
;
; gX += 1;
;
L435B:	inc     _gX
;
; small_jump();
;
	jsr     _small_jump
;
; else
;
	jmp     L3EE4
;
; if( collision[(((gYScroll + gY + 1) & 0xF0) ) + (gTmpX >> 4)] == 0 &&
;
L435E:	lda     _gYScroll
	clc
	adc     _gY
	bcc     L433D
	clc
L433D:	adc     #$01
	and     #$F0
	sta     ptr1
	ldx     #$00
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	bcc     L432A
	inx
L432A:	sta     ptr1
	txa
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	bne     L435F
;
; collision[(((gYScroll + gY + 0x10) & 0xF0) ) + (gTmpX >> 4)] == 0 )
;
	lda     _gYScroll
	clc
	adc     _gY
	bcc     L433E
	clc
L433E:	adc     #$10
	and     #$F0
	sta     ptr1
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	bcc     L432B
	inx
L432B:	sta     ptr1
	txa
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	beq     L4360
L435F:	lda     #$00
	jmp     L4362
;
; gX += 1;
;
L4360:	inc     _gX
;
; small_jump();
;
	jsr     _small_jump
;
; else
;
	jmp     L3EE4
;
; gSpeed = 0;
;
L4362:	sta     _gSpeed
	sta     _gSpeed+1
;
; for( i = 0; (i<<2) < gSpeed; i++ )
;
L3EE4:	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L3EEB
	inx
L3EEB:	sta     _i
	stx     _i+1
	jmp     L3EE2
;
; if( gVelocityDirection == 1 ) // moving up
;
L3EE3:	lda     _gVelocityDirection+1
	jne     L3F3F
	lda     _gVelocityDirection
	cmp     #$01
	jne     L3F3F
;
; for( i = 0; (i<<2) < gVelocity; i++ )
;
	lda     #$00
	sta     _i
	sta     _i+1
L3F42:	lda     _i
	ldx     _i+1
	jsr     shlax2
	cmp     _gVelocity
	txa
	sbc     _gVelocity+1
	jcs     L3F43
;
; gTmpX = gX + 0xF;
;
	lda     _gX
	clc
	adc     #$0F
	sta     _gTmpX
;
; if( gYNametable == 2 )
;
	ldx     #$00
	lda     _gYNametable
	cmp     #$02
	jne     L4368
;
; if( collision[240 + (((gY)&0xF0) ) + ((gX) >> 4)] == 0 &&
;
	lda     _gY
	and     #$F0
	clc
	adc     #$F0
	bcc     L3F57
	inx
L3F57:	sta     ptr1
	stx     ptr1+1
	lda     _gX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	bne     L4363
;
; collision[240 + (((gY)&0xF0) ) + (gTmpX >> 4)] == 0 )
;
	lda     _gY
	and     #$F0
	clc
	adc     #$F0
	bcc     L3F5F
	inx
L3F5F:	sta     ptr1
	stx     ptr1+1
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	beq     L4364
L4363:	lda     #$00
	jmp     L4367
;
; if(gY > MAX_TOP_BUFFER )
;
L4364:	lda     _gY
	cmp     #$40
	bcc     L4365
;
; gY -= 1;
;
	dec     _gY
;
; else
;
	jmp     L3F44
;
; gYScroll = 0xEF;
;
L4365:	lda     #$EF
	sta     _gYScroll
;
; gYNametable = 0;
;
	lda     #$00
	sta     _gYNametable
;
; else
;
	jmp     L3F44
;
; gVelocity = 0;
;
L4367:	sta     _gVelocity
	sta     _gVelocity+1
;
; gVelocityDirection = 0;
;
	sta     _gVelocityDirection
	sta     _gVelocityDirection+1
;
; break;
;
	jmp     L3F43
;
; else if((gYScroll + gY) >= 0xF0 )
;
L4368:	lda     _gYScroll
	clc
	adc     _gY
	bcc     L431E
	inx
L431E:	cmp     #$F0
	txa
	sbc     #$00
	ldx     #$00
	jcc     L436E
;
; if( collision[240 + (((gYScroll + gY - 0xF0)&0xF0) ) + ((gX) >> 4)] == 0 &&
;
	lda     _gYScroll
	clc
	adc     _gY
	sec
	sbc     #$F0
	and     #$F0
	clc
	adc     #$F0
	bcc     L3F7B
	inx
L3F7B:	sta     ptr1
	stx     ptr1+1
	lda     _gX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	bne     L4369
;
; collision[240 + (((gYScroll + gY - 0xF0)&0xF0) ) + (gTmpX >> 4)] == 0 )
;
	lda     _gYScroll
	clc
	adc     _gY
	sec
	sbc     #$F0
	and     #$F0
	clc
	adc     #$F0
	bcc     L3F84
	inx
L3F84:	sta     ptr1
	stx     ptr1+1
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	beq     L436A
L4369:	lda     #$00
	jmp     L436D
;
; if(gY > MAX_TOP_BUFFER)
;
L436A:	lda     _gY
	cmp     #$40
	bcc     L436B
;
; gY -= 1;
;
	dec     _gY
;
; else
;
	jmp     L3F44
;
; gYScroll -= 1;
;
L436B:	dec     _gYScroll
;
; else
;
	jmp     L3F44
;
; gVelocityDirection = 0;
;
L436D:	sta     _gVelocityDirection
	sta     _gVelocityDirection+1
;
; break;
;
	jmp     L3F43
;
; if( collision[(((gYScroll + gY - 0x100) & 0xF0) ) + ((gX) >> 4)] == 0 &&
;
L436E:	lda     _gYScroll
	clc
	adc     _gY
	and     #$F0
	sta     ptr1
	lda     _gX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	bcc     L432C
	inx
L432C:	sta     ptr1
	txa
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	bne     L436F
;
; collision[(((gYScroll + gY - 0x100) & 0xF0) ) + (gTmpX >> 4)] == 0 )
;
	lda     _gYScroll
	clc
	adc     _gY
	and     #$F0
	sta     ptr1
	ldx     #$00
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	bcc     L432D
	inx
L432D:	sta     ptr1
	txa
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	beq     L4370
L436F:	lda     #$00
	jmp     L4374
;
; if(gY > MAX_TOP_BUFFER || gYScroll == 0) {
;
L4370:	lda     _gY
	cmp     #$40
	bcs     L4371
	lda     _gYScroll
	bne     L4372
;
; gY -= 1;
;
L4371:	dec     _gY
;
; else {
;
	jmp     L3F44
;
; gYScroll -= 1;
;
L4372:	dec     _gYScroll
;
; else
;
	jmp     L3F44
;
; gVelocity = 0;
;
L4374:	sta     _gVelocity
	sta     _gVelocity+1
;
; gVelocityDirection = 0;
;
	sta     _gVelocityDirection
	sta     _gVelocityDirection+1
;
; break;
;
	jmp     L3F43
;
; for( i = 0; (i<<2) < gVelocity; i++ )
;
L3F44:	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L3F4B
	inx
L3F4B:	sta     _i
	stx     _i+1
	jmp     L3F42
;
; if( gVelocity == 0 )
;
L3F43:	lda     _gVelocity
	ora     _gVelocity+1
	bne     L3FAE
;
; gVelocityDirection = 0;
;
	sta     _gVelocityDirection
	sta     _gVelocityDirection+1
;
; else
;
	jmp     L4389
;
; if((gController1 & BUTTON_A) != BUTTON_A || (gFrameCounter & 1))
;
L3FAE:	lda     _gController1
	and     #$80
	cmp     #$80
	bne     L4375
	lda     _gFrameCounter
	and     #$01
	jeq     L4389
;
; gVelocity -= 1;
;
L4375:	lda     _gVelocity
	sec
	sbc     #$01
	sta     _gVelocity
	jcs     L4036
	dec     _gVelocity+1
;
; else // moving down
;
	jmp     L4036
;
; for( i = 0; (i<<2) < gVelocity; i++ )
;
L3F3F:	lda     #$00
	sta     _i
	sta     _i+1
L3FBE:	lda     _i
	ldx     _i+1
	jsr     shlax2
	cmp     _gVelocity
	txa
	sbc     _gVelocity+1
	jcs     L3FBF
;
; gTmpX = gX + 0xF;
;
	lda     _gX
	clc
	adc     #$0F
	sta     _gTmpX
;
; if(gYNametable == 2 )
;
	ldx     #$00
	lda     _gYNametable
	cmp     #$02
	jne     L437B
;
; if( collision[240 + (((gY + 0x11)&0xF0) ) + ((gX) >> 4)] == 0 &&
;
	lda     _gY
	clc
	adc     #$11
	and     #$F0
	clc
	adc     #$F0
	bcc     L3FD4
	inx
L3FD4:	sta     ptr1
	stx     ptr1+1
	lda     _gX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	bne     L4376
;
; collision[240 + (((gY + 0x11)&0xF0) ) + (gTmpX >> 4)] == 0 )
;
	lda     _gY
	clc
	adc     #$11
	and     #$F0
	clc
	adc     #$F0
	bcc     L3FDD
	inx
L3FDD:	sta     ptr1
	stx     ptr1+1
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	beq     L4377
L4376:	lda     #$00
	jmp     L437A
;
; if(gY == 0xF0)
;
L4377:	lda     _gY
	cmp     #$F0
	bne     L4378
;
; death();
;
	jsr     _death
;
; else
;
	jmp     L3FC0
;
; gY += 1;
;
L4378:	inc     _gY
;
; else
;
	jmp     L3FC0
;
; gVelocity = 0;
;
L437A:	sta     _gVelocity
	sta     _gVelocity+1
;
; gJumping = 0;
;
	sta     _gJumping
	sta     _gJumping+1
;
; break;
;
	jmp     L3FBF
;
; else if((gYScroll + gY + 0x11) >= 0xF0)
;
L437B:	lda     _gYScroll
	clc
	adc     _gY
	bcc     L433F
	inx
	clc
L433F:	adc     #$11
	bcc     L3FEF
	inx
L3FEF:	cmp     #$F0
	txa
	sbc     #$00
	jcc     L4382
;
; if( collision[240 + (((gYScroll + gY+0x11 - 0xF0)&0xF0) ) + ((gX) >> 4)] == 0 &&
;
	lda     _gYScroll
	clc
	adc     _gY
	bcc     L4340
	clc
L4340:	adc     #$11
	sec
	sbc     #$F0
	ldx     #$00
	and     #$F0
	clc
	adc     #$F0
	bcc     L3FF8
	inx
L3FF8:	sta     ptr1
	stx     ptr1+1
	lda     _gX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	bne     L437C
;
; collision[240 + (((gYScroll + gY+0x11 - 0xF0)&0xF0) ) + (gTmpX >> 4)] == 0 )
;
	lda     _gYScroll
	clc
	adc     _gY
	bcc     L4341
	clc
L4341:	adc     #$11
	sec
	sbc     #$F0
	and     #$F0
	clc
	adc     #$F0
	bcc     L4002
	inx
L4002:	sta     ptr1
	stx     ptr1+1
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	beq     L437D
L437C:	lda     #$00
	jmp     L4381
;
; if(gY < MAX_BOTTOM_BUFFER)
;
L437D:	lda     _gY
	cmp     #$AF
	bcs     L437E
;
; gY += 1;
;
	inc     _gY
;
; else
;
	jmp     L3FC0
;
; if( gYScroll == 0xEF )
;
L437E:	lda     _gYScroll
	cmp     #$EF
	bne     L437F
;
; gYNametable = 2;
;
	lda     #$02
	sta     _gYNametable
;
; gYScroll = 0;
;
	lda     #$00
	sta     _gYScroll
;
; break;
;
	jmp     L3FBF
;
; gYScroll+=1;
;
L437F:	inc     _gYScroll
;
; else
;
	jmp     L3FC0
;
; gVelocity = 0;
;
L4381:	sta     _gVelocity
	sta     _gVelocity+1
;
; gJumping = 0;
;
	sta     _gJumping
	sta     _gJumping+1
;
; break;
;
	jmp     L3FBF
;
; if( collision[(((gYScroll + gY+0x11)&0xF0) ) + ((gX) >> 4)] == 0 &&
;
L4382:	lda     _gYScroll
	clc
	adc     _gY
	bcc     L4342
	clc
L4342:	adc     #$11
	and     #$F0
	sta     ptr1
	ldx     #$00
	lda     _gX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	bcc     L432E
	inx
L432E:	sta     ptr1
	txa
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	ldx     #$00
	lda     (ptr1),y
	bne     L4383
;
; collision[(((gYScroll + gY+0x11)&0xF0) ) + (gTmpX >> 4)] == 0 )
;
	lda     _gYScroll
	clc
	adc     _gY
	bcc     L4343
	clc
L4343:	adc     #$11
	and     #$F0
	sta     ptr1
	lda     _gTmpX
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	bcc     L432F
	inx
L432F:	sta     ptr1
	txa
	clc
	adc     #>(_collision)
	sta     ptr1+1
	ldy     #<(_collision)
	lda     (ptr1),y
	beq     L4384
L4383:	lda     #$00
	jmp     L4387
;
; if(gY < MAX_BOTTOM_BUFFER)
;
L4384:	lda     _gY
	cmp     #$AF
	bcs     L4385
;
; gY += 1;
;
	inc     _gY
;
; else
;
	jmp     L3FC0
;
; gYScroll+=1;
;
L4385:	inc     _gYScroll
;
; else
;
	jmp     L3FC0
;
; gVelocity = 0;
;
L4387:	sta     _gVelocity
	sta     _gVelocity+1
;
; gJumping = 0;
;
	sta     _gJumping
	sta     _gJumping+1
;
; break;
;
	jmp     L3FBF
;
; for( i = 0; (i<<2) < gVelocity; i++ )
;
L3FC0:	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L3FC7
	inx
L3FC7:	sta     _i
	stx     _i+1
	jmp     L3FBE
;
; if( i == ((gVelocity+3)>>2) )
;
L3FBF:	lda     _gVelocity
	ldx     _gVelocity+1
	clc
	adc     #$03
	bcc     L403A
	inx
L403A:	jsr     shrax2
	cpx     _i+1
	bne     L4036
	cmp     _i
	bne     L4036
;
; gVelocity+=1;
;
	inc     _gVelocity
	bne     L4036
	inc     _gVelocity+1
;
; for(i = 0; i < numSprites; i++) {
;
L4036:	lda     #$00
L4389:	sta     _i
	sta     _i+1
L403E:	lda     _i
	cmp     _numSprites
	lda     _i+1
	sbc     #$00
	jcs     L403F
;
; j = FIRST_ENEMY_SPRITE + gSpriteTable.spriteOffset[i];
;
	lda     #<(_gSpriteTable+144)
	sta     ptr1
	lda     #>(_gSpriteTable+144)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	ldx     #$00
	lda     (ptr1),y
	clc
	adc     #$54
	bcc     L404A
	inx
L404A:	sta     _j
	stx     _j+1
;
; gTmp3 = sprites[j];
;
	lda     #<(_sprites)
	sta     ptr1
	lda     #>(_sprites)
	clc
	adc     _j+1
	sta     ptr1+1
	ldy     _j
	lda     (ptr1),y
	sta     _gTmp3
;
; gTmp2 = gSpriteTable.id[i];
;
	lda     #<(_gSpriteTable)
	sta     ptr1
	lda     #>(_gSpriteTable)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sta     _gTmp2
;
; spriteProperties[gTmp2].ai_handler();
;
	ldx     #$00
	lda     _gTmp2
	jsr     mulax9
	clc
	adc     #<(_spriteProperties)
	sta     ptr1
	txa
	adc     #>(_spriteProperties)
	sta     ptr1+1
	ldy     #$06
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     callax
;
; gTmp7 = sprites[j];
;
	lda     #<(_sprites)
	sta     ptr1
	lda     #>(_sprites)
	clc
	adc     _j+1
	sta     ptr1+1
	ldy     _j
	lda     (ptr1),y
	sta     _gTmp7
;
; if((gTmp3 > gTmp7 && (gTmp3 - gTmp7) > 200)
;
	ldx     #$00
	lda     _gTmp3
	sec
	sbc     _gTmp7
	bcc     L438C
	beq     L438C
	lda     _gTmp3
	sec
	sbc     _gTmp7
	cmp     #$C9
	bcs     L4393
;
; || (gTmp7 > gTmp3 && (gTmp7 - gTmp3) > 200)) {
;
L438C:	lda     _gTmp7
	sec
	sbc     _gTmp3
	bcc     L4056
	beq     L4056
	lda     _gTmp7
	sec
	sbc     _gTmp3
	cmp     #$C9
	bcc     L4056
;
; spriteProperties[gTmp2].despawn();
;
L4393:	lda     _gTmp2
	jsr     mulax9
	clc
	adc     #<(_spriteProperties)
	sta     ptr1
	txa
	adc     #>(_spriteProperties)
	sta     ptr1+1
	ldy     #$04
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     callax
;
; spawn_check();
;
L4056:	jsr     _spawn_check
;
; if(gTongueState != TONGUE_NORMAL) {
;
	lda     _gTongueState
	ora     _gTongueState+1
	jeq     L4398
;
; x1 = sprites[75];
;
	lda     _sprites+75
	sta     _x1
;
; y1 = sprites[72] + 1;
;
	lda     _sprites+72
	clc
	adc     #$01
	sta     _y1
;
; width1 = (sprites[79] == 0) ? 8 : (sprites[83] == 0) ? 16 : 24;
;
	lda     _sprites+79
	bne     L4394
	lda     #$08
	jmp     L4396
L4394:	lda     _sprites+83
	bne     L4395
	lda     #$10
	jmp     L4396
L4395:	lda     #$18
L4396:	sta     _width1
;
; height1 = 6;
;
	lda     #$06
	sta     _height1
;
; put_i_in_collision2_vars();
;
	jsr     _put_i_in_collision2_vars
;
; if(is_collision()) {
;
	jsr     _is_collision
	stx     tmp1
	ora     tmp1
	jeq     L4398
;
; sprites[72] = 0;
;
	lda     #$00
	sta     _sprites+72
;
; sprites[75] = 0;
;
	sta     _sprites+75
;
; sprites[76] = 0;
;
	sta     _sprites+76
;
; sprites[79] = 0;
;
	sta     _sprites+79
;
; sprites[80] = 0;
;
	sta     _sprites+80
;
; sprites[83] = 0;
;
	sta     _sprites+83
;
; gTongueState = TONGUE_NORMAL;
;
	tax
	sta     _gTongueState
	sta     _gTongueState+1
;
; gTongueCounter = 0;
;
	sta     _gTongueCounter
	sta     _gTongueCounter+1
;
; gTmp = gSpriteTable.numSprites[i];
;
	lda     #<(_gSpriteTable+108)
	sta     ptr1
	lda     #>(_gSpriteTable+108)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	sta     _gTmp
;
; for(k = 0; k < gTmp; k++)
;
	stx     _k
L4397:	lda     _k
	cmp     _gTmp
	jcs     L4398
;
; sprites[j + (k << 2)] = 0;
;
	jsr     aslax2
	clc
	adc     _j
	pha
	txa
	adc     _j+1
	tax
	pla
	clc
	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
;
; sprites[j + (k << 2) + 1] = 0;
;
	tax
	lda     _k
	jsr     aslax2
	clc
	adc     _j
	pha
	txa
	adc     _j+1
	tax
	pla
	clc
	adc     #$01
	bcc     L4344
	inx
	clc
L4344:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + (k << 2) + 2] = 0;
;
	tax
	lda     _k
	jsr     aslax2
	clc
	adc     _j
	pha
	txa
	adc     _j+1
	tax
	pla
	clc
	adc     #$02
	bcc     L4345
	inx
	clc
L4345:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; sprites[j + (k << 2) + 3] = 0;
;
	tax
	lda     _k
	jsr     aslax2
	clc
	adc     _j
	pha
	txa
	adc     _j+1
	tax
	pla
	clc
	adc     #$03
	bcc     L4346
	inx
	clc
L4346:	adc     #<(_sprites)
	sta     ptr1
	txa
	adc     #>(_sprites)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; for(k = 0; k < gTmp; k++)
;
	tax
	inc     _k
	jmp     L4397
;
; x1 = sprites[3] + 1;
;
L4398:	lda     _sprites+3
	clc
	adc     #$01
	sta     _x1
;
; y1 = sprites[0] + 1;
;
	lda     _sprites
	clc
	adc     #$01
	sta     _y1
;
; width1 = 14;
;
	lda     #$0E
	sta     _width1
;
; height1 = 15;
;
	lda     #$0F
	sta     _height1
;
; put_i_in_collision2_vars();
;
	jsr     _put_i_in_collision2_vars
;
; if(is_collision())
;
	jsr     _is_collision
	stx     tmp1
	ora     tmp1
	beq     L4040
;
; spriteProperties[gSpriteTable.id[i]].collision_handler();
;
	lda     #<(_gSpriteTable)
	sta     ptr1
	lda     #>(_gSpriteTable)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	ldx     #$00
	lda     (ptr1),y
	jsr     mulax9
	clc
	adc     #<(_spriteProperties)
	sta     ptr1
	txa
	adc     #>(_spriteProperties)
	sta     ptr1+1
	ldy     #$08
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     callax
;
; for(i = 0; i < numSprites; i++) {
;
L4040:	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L4046
	inx
L4046:	sta     _i
	stx     _i+1
	jmp     L403E
;
; if( gIframes > 0 )
;
L403F:	lda     _gIframes
	ora     _gIframes+1
	beq     L40C7
;
; --gIframes;
;
	lda     _gIframes
	sec
	sbc     #$01
	sta     _gIframes
	bcs     L40C7
	dec     _gIframes+1
;
; }
;
L40C7:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ init_globals (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_init_globals: near

.segment	"CODE"

;
; gGameState = TITLE_SCREEN_STATE;
;
	lda     #$00
	sta     _gGameState
	sta     _gGameState+1
;
; gDisplayLives = 0;
;
	sta     _gDisplayLives
	sta     _gDisplayLives+1
;
; gPpuCtrlBase = 0x94;
;
	lda     #$94
	sta     _gPpuCtrlBase
;
; gMusicOn = 0;
;
	lda     #$00
	sta     _gMusicOn
;
; gSoundEffectCounter = 0xFF;
;
	lda     #$FF
	sta     _gSoundEffectCounter
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ init_game_state (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_init_game_state: near

.segment	"CODE"

;
; gX = 0x10;
;
	lda     #$10
	sta     _gX
;
; gY = 0xCF;
;
	lda     #$CF
	sta     _gY
;
; gYNametable = 2;
;
	lda     #$02
	sta     _gYNametable
;
; gVelocity = 0;
;
	ldx     #$00
	txa
	sta     _gVelocity
	sta     _gVelocity+1
;
; gVelocityDirection = 0;
;
	sta     _gVelocityDirection
	sta     _gVelocityDirection+1
;
; gXScroll = 0;
;
	sta     _gXScroll
	sta     _gXScroll+1
	sta     _gXScroll+2
	sta     _gXScroll+3
;
; gYScroll = 0;
;
	sta     _gYScroll
;
; gSpeed = 0;
;
	sta     _gSpeed
	sta     _gSpeed+1
;
; gSpeedDirection = 1;
;
	lda     #$01
	sta     _gSpeedDirection
	stx     _gSpeedDirection+1
;
; gJumping = 0;
;
	txa
	sta     _gJumping
	sta     _gJumping+1
;
; gBounceCounter = 0;
;
	sta     _gBounceCounter
	sta     _gBounceCounter+1
;
; gIframes = 0;
;
	sta     _gIframes
	sta     _gIframes+1
;
; gHealth = 8;
;
	lda     #$08
	sta     _gHealth
	stx     _gHealth+1
;
; draw_health();
;
	jsr     _draw_health
;
; gFrogAnimationState = FROG_NORMAL;
;
	ldx     #$00
	txa
	sta     _gFrogAnimationState
	sta     _gFrogAnimationState+1
;
; gTongueState = TONGUE_CLEANUP;
;
	lda     #$06
	sta     _gTongueState
	stx     _gTongueState+1
;
; gTongueCounter = 0;
;
	txa
	sta     _gTongueCounter
	sta     _gTongueCounter+1
;
; update_tongue_sprite();
;
	jsr     _update_tongue_sprite
;
; gFade = 3;
;
	ldx     #$00
	lda     #$03
	sta     _gFade
	stx     _gFade+1
;
; gFrameCounter = 0;
;
	stx     _gFrameCounter
;
; gLives = 2;
;
	lda     #$02
	sta     _gLives
	stx     _gLives+1
;
; gDisplayLives = 1;
;
	lda     #$01
	sta     _gDisplayLives
	stx     _gDisplayLives+1
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ game_running_sm (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_game_running_sm: near

.segment	"CODE"

;
; while( gGameState == GAME_RUNNING_STATE )
;
	jmp     L4105
;
; vblank();
;
L4103:	jsr     _vblank
;
; gFrameCounter++;
;
	inc     _gFrameCounter
;
; input_poll();
;
	jsr     _input_poll
;
; if((gController1 & BUTTON_START) == BUTTON_START)
;
	lda     _gController1
	and     #$10
	cmp     #$10
	bne     L4120
;
; vblank();
;
L410F:	jsr     _vblank
;
; input_poll();
;
	jsr     _input_poll
;
; while((gController1 & BUTTON_START) == BUTTON_START);
;
	lda     _gController1
	and     #$10
	cmp     #$10
	beq     L410F
;
; vblank();
;
L4110:	jsr     _vblank
;
; input_poll();
;
	jsr     _input_poll
;
; while((gController1 & BUTTON_START) != BUTTON_START);
;
	lda     _gController1
	and     #$10
	cmp     #$10
	bne     L4110
;
; vblank();
;
L4118:	jsr     _vblank
;
; input_poll();
;
	jsr     _input_poll
;
; while((gController1 & BUTTON_START) == BUTTON_START);
;
	lda     _gController1
	and     #$10
	cmp     #$10
	beq     L4118
;
; update_sprites();
;
L4120:	jsr     _update_sprites
;
; dma_sprites();
;
	jsr     _dma_sprites
;
; PPU_CTRL = gPpuCtrlBase + gYNametable;
;
	lda     _gPpuCtrlBase
	clc
	adc     _gYNametable
	sta     $2000
;
; set_scroll();
;
	jsr     _set_scroll
;
; do_physics();
;
	jsr     _do_physics
;
; while( gGameState == GAME_RUNNING_STATE )
;
L4105:	lda     _gGameState+1
	bne     L439A
	lda     _gGameState
	cmp     #$02
	beq     L4103
;
; }
;
L439A:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ title_screen_sm (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_title_screen_sm: near

.segment	"CODE"

;
; gTitleScreenColor = 0x21;
;
	lda     #$21
	sta     _gTitleScreenColor
;
; gFrameCounter = 0;
;
	lda     #$00
	sta     _gFrameCounter
;
; while( gGameState == TITLE_SCREEN_STATE )
;
	jmp     L4177
;
; vblank();
;
L4133:	jsr     _vblank
;
; PPU_MASK = 0x00;
;
	lda     #$00
	sta     $2001
;
; SET_COLOR(BACKGROUND2_3, gTitleScreenColor);
;
	lda     #$3F
	sta     $2006
	lda     #$0B
	sta     $2006
	lda     _gTitleScreenColor
	sta     $2007
;
; if( (gFrameCounter & 0x40) == 0 )
;
	lda     _gFrameCounter
	and     #$40
	bne     L439D
;
; SET_COLOR(BACKGROUND1_1, LIGHT_TAN);
;
	lda     #$3F
	sta     $2006
	lda     #$05
	sta     $2006
	lda     #$28
;
; else
;
	jmp     L439C
;
; SET_COLOR(BACKGROUND1_1, TAN);
;
L439D:	lda     #$3F
	sta     $2006
	lda     #$05
	sta     $2006
	lda     #$18
L439C:	sta     $2007
;
; PPU_MASK = 0x0E;
;
	lda     #$0E
	sta     $2001
;
; PPU_ADDRESS = 0x28;
;
	lda     #$28
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	lda     #$00
	sta     $2006
;
; set_scroll();
;
	jsr     _set_scroll
;
; if( (gFrameCounter & 0x1) == 0 )
;
	lda     _gFrameCounter
	and     #$01
	bne     L416B
;
; gTitleScreenColor++;
;
	inc     _gTitleScreenColor
;
; if( gTitleScreenColor == 0x2C )
;
	lda     _gTitleScreenColor
	cmp     #$2C
	bne     L416B
;
; gTitleScreenColor = 0x21;
;
	lda     #$21
	sta     _gTitleScreenColor
;
; input_poll();
;
L416B:	jsr     _input_poll
;
; PPU_CTRL = gPpuCtrlBase + gYNametable;
;
	lda     _gPpuCtrlBase
	clc
	adc     _gYNametable
	sta     $2000
;
; gYScroll = 0;
;
	lda     #$00
	sta     _gYScroll
;
; set_scroll();
;
	jsr     _set_scroll
;
; gFrameCounter++;
;
	inc     _gFrameCounter
;
; if( (gController1 & BUTTON_START) != 0 )
;
	lda     _gController1
	and     #$10
	beq     L4177
;
; gStage = 1;
;
	ldx     #$00
	lda     #$01
	sta     _gStage
	stx     _gStage+1
;
; gGameState = GAME_RUNNING_STATE;
;
	lda     #$02
	sta     _gGameState
	stx     _gGameState+1
;
; init_game_state();
;
	jsr     _init_game_state
;
; load_stage();
;
	jsr     _load_stage
;
; while( gGameState == TITLE_SCREEN_STATE )
;
L4177:	lda     _gGameState
	ora     _gGameState+1
	jeq     L4133
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ end_screen_sm (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_end_screen_sm: near

.segment	"CODE"

;
; pMusicInit(3);
;
	lda     #$03
	jsr     _pMusicInit
;
; while( gGameState == ENDING_STATE )
;
	jmp     L418F
;
; vblank();
;
L4184:	jsr     _vblank
;
; input_poll();
;
	jsr     _input_poll
;
; PPU_CTRL = gPpuCtrlBase + gYNametable;
;
	lda     _gPpuCtrlBase
	clc
	adc     _gYNametable
	sta     $2000
;
; set_scroll();
;
	jsr     _set_scroll
;
; if( (gController1 & BUTTON_START) != 0 )
;
	lda     _gController1
	and     #$10
	beq     L418F
;
; gStage = 0;
;
	lda     #$00
	sta     _gStage
	sta     _gStage+1
;
; gGameState = TITLE_SCREEN_STATE;
;
	sta     _gGameState
	sta     _gGameState+1
;
; load_stage();
;
	jsr     _load_stage
;
; while( gGameState == ENDING_STATE )
;
L418F:	lda     _gGameState+1
	bne     L439F
	lda     _gGameState
	cmp     #$03
	beq     L4184
;
; }
;
L439F:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

;
; PPU_CTRL = 0;
;
	lda     #$00
	sta     $2000
;
; PPU_MASK = 0;
;
	sta     $2001
;
; ppudisable();
;
	jsr     _ppudisable
;
; init_globals();
;
	jsr     _init_globals
;
; init_game_state();
;
	jsr     _init_game_state
;
; palettes();
;
	jsr     _palettes
;
; PPU_CTRL = 0x80;
;
	lda     #$80
	sta     $2000
;
; vblank();
;
	jsr     _vblank
;
; PPU_ADDRESS = 0x28; // address of nametable #2
;
	lda     #$28
	sta     $2006
;
; PPU_ADDRESS = 0x00;
;
	lda     #$00
	sta     $2006
;
; UnRLE(Nametable_TitleScreen_bottom_rle); // uncompresses our data
;
	lda     #<(_Nametable_TitleScreen_bottom_rle)
	ldx     #>(_Nametable_TitleScreen_bottom_rle)
	jsr     _UnRLE
;
; vblank();
;
	jsr     _vblank
;
; gScratchPointer = TitleScreenPalette;
;
	lda     #>(_TitleScreenPalette)
	sta     _gScratchPointer+1
	lda     #<(_TitleScreenPalette)
	sta     _gScratchPointer
;
; load_palette();
;
	jsr     _load_palette
;
; loadCollisionFromNametables();
;
	jsr     _loadCollisionFromNametables
;
; vblank();
;
	jsr     _vblank
;
; apuinit();
;
	jsr     _apuinit
;
; pMusicInit(0);
;
	lda     #$00
	jsr     _pMusicInit
;
; gCounter = 5;
;
	ldx     #$00
	lda     #$05
	sta     _gCounter
	stx     _gCounter+1
;
; vblank_counter();
;
	jsr     _vblank_counter
;
; gStage = 0;
;
	lda     #$00
	sta     _gStage
	sta     _gStage+1
;
; PPU_CTRL = gPpuCtrlBase;
;
	lda     _gPpuCtrlBase
	sta     $2000
;
; fade_in();
;
	jsr     _fade_in
;
; switch( gGameState )
;
L41C1:	lda     _gGameState
	ldx     _gGameState+1
;
; }
;
	cpx     #$00
	bne     L41CF
	cmp     #$00
	beq     L43A0
	cmp     #$01
	beq     L41CF
	cmp     #$02
	beq     L41C9
	cmp     #$03
	beq     L41CC
	jmp     L41CF
;
; game_running_sm();
;
L41C9:	jsr     _game_running_sm
;
; break;
;
	jmp     L41C1
;
; end_screen_sm();
;
L41CC:	jsr     _end_screen_sm
;
; break;
;
	jmp     L41C1
;
; pMusicInit(0);
;
L41CF:	lda     #$00
L43A0:	jsr     _pMusicInit
;
; gMusicOn = 1;
;
	lda     #$01
	sta     _gMusicOn
;
; title_screen_sm();
;
	jsr     _title_screen_sm
;
; break;
;
	jmp     L41C1

.endproc

